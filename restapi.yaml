openapi: 3.0.0
info:
  title: RMS REST API
  description: "# Introduction\n\n      **Introduction to the RMS REST API: Simplified for Seamless Integration**\n\n  Welcome to the RMS REST API, your gateway to a world of seamless data exchange! Whether you're looking to extract vital information, update existing data, or create new records, our API has got you covered. It's like having a direct line to the RMS database, giving you the power to access and manage your data whenever you need it.\n\n  **What Can You Do with Our API?**\n  The possibilities are endless! Here are just a few ways you can use our API to enhance your operations:\n  - Enhance your website's functionality\n  - Send targeted marketing campaigns\n  - Reward loyal customers with personalized offers\n  - Consolidate data for comprehensive reporting\n  - Analyze trends and patterns for informed decision-making\n  - Integrate with your point-of-sale system\n  - And much more!\n\n  **How to Get Started**\n  Getting access to our API is easy. Just follow these simple steps:\n  1. Contact `apisupport@rmscloud.com` for approval\n  2. Once approved, purchase the [API Developers Kit](https://rmscloud.com/developers):\n     - Kick-off call to review the RMS REST API\n     - API Keys\n     - SBX Database for developing your integration\n     - API Support\n\n  **Certification**\n  Once your development is complete, here are the steps for becoming a certified partner:\n  - Demonstration of your integration to RMS Partnership Team\n  - A successful 30-day customer pilot.\n  - Complete REST API Certification Form(s)\n  - Create a customer-facing help article\n  - Complete Marketing Forms\n\n  Although certification is not required, becoming a certified partner offers numerous benefits including enhancing partnership credibility, enabling both internal and customer-facing teams, access to marketing campaigns, and presence on RMS Cloud Module Market and Partners Page.\n\n  **Integration Guidelines Made Easy**\n  We've laid out some simple guidelines to help you along the way:\n  1. To create **reservations via REST**, please have the customer contact our sales team to ensure that RMSOnline is activated.\n  2. In the API, any reference to a number as 'no' in RMS will be called 'id'.\n  3. The term 'Made' in RMS will be referred to as 'Created' in the API.\n  4. Default mandatory fields will be identified, but clients can configure their own mandatory fields.\n  5. All examples will be shown in the order of Basic, Full, Lite. The Basic object will be returned by default.\n  6. All code will be written in lower camelCase.\n  7. Dates will be formatted as `YEAR-MONTH-DAY HOUR:MINUTE` (e.g., \"2016-08-22 19:25:00\").\n  8. When performing a PUT request, first perform a GET request on the Full Object, make your changes, and then perform the PUT request with the entire object. Any blank fields will be changed to 'Null'.\n  9. When using the POST function, always pass 'id' as '0' to create the next available record.\n\n  **Got Questions? We've Got Answers!**<br>\n  Check out our FAQs for answers to common queries about using our API. From handling room numbers to managing rate limits, we've got you covered.\n  - Q: Why can’t I see the name of an object in my call?<br>\n    A: We will only return the 'id' for most table references. To retrieve additional data, you need to pass that 'id' via the appropriate GET call.\n  - Q: How can I find the Room Number?<br>\n    A: Any reference to Room No, Site No, or Dock No will be referred to as Area.\n  - Q: How can I find the name of the room types?<br>\n    A: Any reference to Room Type, Site Type, or Dock Type will be referred to as Category.\n  - Q: What time zone are the timestamps returned in?<br>\n    A: All date/time references are returned in the local property time, with the exception of modifiedDate for group allotments, travel agents, and wholesalers, which are returned in UTC.\n  - Q: Is there a limit to how many records are returned?<br>\n    A: GET functions return a default limit of 100 records, ordered by the 'id' field. This limit can be increased, and/or multiple calls can be performed using the offset parameter.\n  - Q: Why is my guest returned with an Account Id of '0'?<br>\n    A: If a guest has never charged back to their account id before, it will not exist in RMS. Use the call '/guests/createAccountId' to create an Account id for a guest.\n  - Q: Why are my online notifications not triggering?<br>\n    A: The REST API will not trigger online notifications. If you need to send internal or external emails to guests, this must be set up as triggered correspondence. [Triggered Correspondence](https://helpcentre.rmscloud.com/triggered-correspondence-setup/triggered-correspondence).\n  - Q: What do I do if I am returned an ID with the value of '0', e.g., marketSegmentID: 0?<br>\n    A: If a value of 0 is returned, this is equivalent to Null.\n\n  **Error Handling Made Simple**\n  We've made sure that error responses are easy to understand, so you can quickly troubleshoot any issues that arise.\n  - 400: Bad Request\n  - 401: Unauthorized\n  - 403: Forbidden\n  - 404: Not Found\n  - 406: Not Acceptable\n\n  **Rate Limiting for Optimal Performance**\n  To keep things running smoothly, we've implemented rate limiting on our API endpoints. But don't worry – we've made sure it's easy to work with.<br><br>\n  **/rates/rateAdjustment:** maxRequests: 30, timeFrame: 1 minute, blockDuration: 1 minute<br>\n  **/reservations/id/regoaccess:** maxRequests: 30, timeFrame: 1 minute, blockDuration: 1 minute<br>\n  **/reservations/id/dailyRevenue:** maxRequests: 30, timeFrame: 1 minute, blockDuration: 1 minute<br>\n  **/api/healthcheck:** maxRequests: 20, timeFrame: 1 minute, blockDuration: 1 minute<br>\n  **/transactions/search:** maxRequests: 20, timeFrame: 1 minute, throttle: true<br>\n  **/authToken: maxRequests:** 25, timeFrame: 1 minute, blockDuration: 1 minute<br>\n  **/guests\\*: maxRequests:** 150, timeFrame: 1 minute, blockDuration: 1 minute<br>\n  **/reservations/search\\*:** maxRequests: 60, timeFrame: 10 seconds, blockDuration: 1 minute<br>\n  **/availableAreas\\*: maxRequests:** 40, timeFrame: 10 seconds, blockDuration: 1 minute<br>\n  **/reservations\\*: maxRequests:** 100, timeFrame: 10 seconds, blockDuration: 1 minute, methods: GET<br>\n  **/availabilityrategrid\\*:** maxRequests: 50, timeFrame: 10 seconds, blockDuration: 1 minute<br>\n  **/areas\\*: maxRequests:** 30, timeFrame: 10 seconds, blockDuration: 1 minute<br>\n  **/rates/rateQuote\\*:** maxRequests: 40, timeFrame: 10 seconds, blockDuration: 1 minute<br>\n  **/reports\\*:** maxRequests: 60, timeFrame: 1 minute, throttle: true<br><br>\n  **failedRequestLimits:**<br>\n  /authtoken:<br>\n    maxRequests: 30<br>\n    timeFrame: 1 minute<br>\n    blockDuration: 1 hour<br>\n    responseCode: 400<br>\n      If more than 30 requests are made in 1 minute, the API will block further requests for 1 hour. <br>\n      When blocked, the server will return a 400 response code (likely indicating a \"Bad Request\" or limit exceeded).<br><br>\n  **/\\*:**<br>\n    maxRequests: 60<br>\n    timeFrame: 1 minute<br>\n    blockDuration: 1 hour<br>\n    responseCodes: <br>\n      - 401<br>\n      - 403<br>\n      If this limit is exceeded, the API will block further requests for 1 hour.<br>\n      The response codes for blocked requests can be 401 (Unauthorized) or 403 (Forbidden), indicating access denial.<br><br>\n**Throttling:**<br>\n    If the request rate exceeds the configured limit, any additional requests beyond the allowed number will be blocked.<br>\n    However, remaining requests (those that don’t exceed the rate) will still be processed.<br><br>\n  **And Remember, It's All in JSON**\n  Our API exclusively uses JSON format for data exchange, so you can rest assured that your data is in good hands.\n  - [Three column format](https://restapidocs.rmscloud.com/)\n  - [Postman](https://restapidocs.rmscloud.com/postman_collection.json)\n  - [Swagger](https://app.swaggerhub.com/apis-docs/RMSHospitality/RMS_REST_API/)\n  - [Letting APIs](https://app.swaggerhub.com/apis-docs/RMSHospitality/Letting_API/)\n  - [VGS_CC_Handling](https://app.swaggerhub.com/apis-docs/RMSHospitality/VGS_CC_Handling/)\n  - [High Level RMS Relationship Schema](https://restapidocs.rmscloud.com/images/rms-schema.png)\n \n"
  version: 1.4.37.1
  x-logo:
    url: https://www.rmscloud.com/themes/default/images/logo.png
servers:
- url: https://restapi8.rmscloud.com/
  description: Australia - Live
- url: https://betarestapi8.rmscloud.com/
  description: Australia - Beta
- url: https://restapi9.rmscloud.cn/
  description: China - Live
- url: https://restapi11.rmscloud.com/
  description: Europe - Live
- url: https://betarestapi11.rmscloud.com/
  description: Europe - Beta
- url: https://restapi12.rmscloud.com/
  description: Australia - Live
- url: https://betarestapi12.rmscloud.com/
  description: Australia - Beta
- url: https://restapi13.rmscloud.com/
  description: USA - Live
- url: https://betarestapi13.rmscloud.com/
  description: USA - Beta
- url: https://restapi14.rmscloud.com/
  description: Europe - Live
- url: https://betarestapi14.rmscloud.com/
  description: Europe - Live
security:
- api_key: []
tags:
- name: connecting and authentication
  description: Authentication token and client specific URL for accessing the RMS API
- name: accounts
  description: View the account settings configured in RMS
- name: account types
  description: Account Type is a Lookup Table
- name: agents
  description: "There are three different types of Agents; Online Agents, Travel Agents and Wholesalers. <br><br> <b>Online Travel Agents</b> are retail websites providing online booking services to customers. These retail websites can be manually managed by properties or connected directly with the RMS Channel Manager for automation. <br><br> <b>Travel Agents</b> and <b>Wholesalers</b> are a business that can be added and used in RMS for Reservations, Accounts Receivable and the Corporate Portal."
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/travel-agent-info
- name: audit trail
  description: The RMS Audit Trail details changes made to a reservation.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/reservation-screen/reservation-audit-trail
- name: areas
  description: An area is the represents the physcial room/site/cabin etc within a category
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/area-info/setup-an-area
- name: attributes
  description: "Attributes are features that can be used to filter searches for a Property, Category or Area in RMS and on the RMS IBE"
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/lookup-tables/attributes
- name: availability
  description: This section includes calls to retrieve properties Rates & Availability that can be viewed and managed on the Rate Manager Chart within RMS. Each call is unique and has details of its requirements and functionality
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/rate-manager/rate-manager-rates-and-availability
- name: availability push
  description: "This section of the documentation describes the PUSH ARI (Availability, Rates and Inventory) feature offered by RMS to REST API Partners. This call is for Informational purposes only; you will need to raise an SR to activate this feature."
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/channel-management/setup-ota-connection
- name: booking sources
  description: Booking Source is a Lookup Table that can be used to record and report on the source of a reservation.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/lookup-tables/setup-a-booking-source
- name: boomgates
  description: Boomgates are the physical gates that control entry in and out of a designated location.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/boomgates-module-info/setup-boomgate-access
- name: cancellation policies
  description: A Cancellation Policy determines the rules applied to a reservation when changed to 'Cancelled' status.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/lookup-tables/setup-a-cancellation-policy
- name: categories
  description: "The room type holds the room description, number of guests it can accommodate, price, etc. Your property may have multiple rooms (or units) that all are of the same room type. You can add and edit room types and units in Settings -> Accommodation. A room type named “Double room”. <br> <br> Any reference to Room Type, Site Type, Dock Type will be referred to as Category. Categories are created by the property and all fields are not necessary configured with information. If a particular field is required for your integration and you receive a null value you will need to ask the property directly to populate this. <br> <br> Max occupants’ can be set at a category level and at an Area Level. When calculating max occupants adults and children do count toward max occupants, but infants do not."
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/category-info/setup-a-category
- name: companies
  description: "A Company is a business that can be added and used in RMS for Reservations, Accounts Receivable and the Corporate Portal."
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/setup/setup-a-company
- name: countries
  description: Retrieve a list of countries and corresponding Id's. This is needed for any REST API field that refrences language or country and takes or returns an ID
- name: credit notes
  description: Credit Notes are a type of Sundry Charge that can be used to apply a credit to an account unrelated to the exchange of money.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/sundry-info/credit-notes-overview
- name: discounts
  description: A Discount can be used to reduce the price of a Rate or Sundry by the predefined value.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/setup-discounts/discount
- name: dwelling
  description: "Area Dwelling Options determine the Dwelling Length, Dwelling Type and Dwelling Slide that can be accommodated on the Area."
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/area-info/area-dwelling-options
- name: finance
  description: 'Calls to retrieve financial mapping data '
- name: gl account codes
  description: A General Ledger Account Code is a unique code or number assigned to each account in the financial system's chart of accounts.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/general-ledger-account-codes-info/general-ledger-account-code-setup
- name: group allotments
  description: "Group Allotments are blocks of inventory with set rates that can be used by event parties, groups or companies.<br><br> Group Allotments enable individual reservations created by guests attending an event or part of a self-paying tour to access reserved inventory and selected Rate Types. <br><br> Group Allotments can also be used to reserve or guarantee inventory to a regular Tour Group, Company or Travel Agent."
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/group-allotments/create-group-allotments
- name: guests
  description: A Guest Profile is the record of guest information for a person who has booked or stayed at the property.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/guests/add-guest-profiles
- name: guest status
  description: The Guest Status Lookup Table can be used to create a list of guest types or categories that can be selected on the Guest Details of a reservation for reporting purposes.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/lookup-tables/guest-status
- name: guest types
  description: The guest type refers to the setup of the Guest Profile
- name: health check
  description: Use the health check endpoint to check the API's health status
- name: inventory grouping
  description: ""
- name: invoices
  description: A Tax Invoice is an itemised invoice of taxable charges on an account with a unique Invoice Number.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/tax-invoice-information/tax-invoice
- name: labels
  description: System Labels determine the core terminology displayed in RMS and can be customised to suit individual customer requirements. These custom names are refleted on the user defined fields
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/system-labels-all/configure-system-labels
- name: loyalty
  description: Loyalty Levels enable properties using the Guest Rewards module to set varying reward point tiers for enrolled guests.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/guest-rewards-module/loyalty-levels
- name: mandatory fields
  description: Retrieve the mandatory fields associated with the guest and reservation objects (This will be configured by the client). Fields setup as Mandatory on Save will require a partner to enter information prior to being able to save changes to new or existing reservations.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/field-maintenance-info/field-maintenance-overview
- name: market types
  description: Market Type is a Lookup Table.
- name: market segments
  description: Market Segment is a Lookup Table that can be used to record and report on revenue sources by market.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/lookup-tables/setup-market-segments
- name: master
  description: Retrieve a list of master records from RMS
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/enterprise-setup/setup-city-masters
- name: meal plan
  description: Meal Plan is available as part of the base RMS subscription and allows the association of meal selection to the guest record.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/lookup-tables/meal-plan
- name: membership types
  description: Retrieve a list of membership types
- name: message centre
  description: The Message Centre enables REST API partners to send messages to the RMS message centre to notify guest or users
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/message-centre-info/message-centre
- name: origins
  description: Origin is a Lookup Table that can be included as an option on the reservation record.
- name: payment modes
  description: A Payment Mode identifies the method of payment on a reservation and determines the Bill To options for each Reservation Account Type.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/accounts-recievable-all-setup/payment-mode?
- name: properties
  description: The term Property is used to identify a particular place of business.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/setup/add-a-new-property
- name: rates
  description: "Rates determine the pricing used on a reservation and can be setup to calculate based on a variety of factors including day of the week, number of guests or length of stay. <br><br>Additional rate options include dynamic pricing adjustments based on occupancy and time, packages, additional guests and derived rates."
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/rate-setup/rates-overview
- name: reasons
  description: Reasons can be setup for different areas of RMS and provided at during scenario such as cancellation of a reservation
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/lookup-tables/setup-a-void-reason
- name: reports
  description: Reports provide users with in depth breakdown of the relevant selected data
  externalDocs:
    description: Find out more
    url: https://rms-help-centre.helpjuice.com/reports
- name: reservations
  description: Reservations provides central management of individual bookings and their guests in RMS. Fields displayed on the Reservation Screen can be customised by the RMS user.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/reservations-information/reservations
- name: reservation types
  description: Reservation Types are a user definable list that can be used to categorise different reservations.
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/lookup-tables/setup-reservation-types
- name: restrictions
  description: restrictions are rules that can be applied to Rates at various levels the way rates work
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/control-panel-restrictions/control-panel-restrictions
- name: requirements
  description: Retrieve a list of requirements
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/accounting-setup/create-a-requirement
- name: security profiles
  description: Retrieve a list of security profiles
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/security-profile-info/security-profile
- name: sundries
  description: Retrieve a list of sundries
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/sundry-charges/setup-a-sundry-charge
- name: titles
  description: Retrieve a list of titles
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/setup/titles
- name: traces
  description: "To add, edit and remove traces"
- name: transactions
  description: Retrieve and create transactions
  externalDocs:
    description: Find out more
    url: https://helpcentre.rmscloud.com/accounting
- name: transfers
  description: Retrieve a list of different lookup tables associated with transfers
- name: users
  description: Retrieve a list of users
- name: VIP codes
  description: Retrieve a list of VIP Codes
- name: webhooks
  description: "You can subscribe to specified webhooks by providing an endpoint, where once the event occurs will receive a web request for your subscription with the basic object. <br><br> You can subscribe to any of the following Webhooks: Area Status (clean, dirty, etc), guest creation, guest modification, mealplan creation, mealplan modification, reservation creation, reservation modification, reservation status updates (Exclusive to; unconfirmed, confirmed, arrived, departed, cancelled), account balance modification."
paths:
  /clienturl/{rmsClientId}:
    get:
      tags:
      - connecting and authentication
      summary: Retrieve the client specific URL for accessing the RMS API
      description: "**Purpose**:<br>This endpoint retrieves the client’s specific baseUrl to be used for all subsequent API calls. By directing traffic to the correct host server from the outset, it avoids unnecessary redirects and reduces the risk of performance issues or failed requests due to incorrect routing. This ensures faster response times and more stable API connectivity.<br><br>**Suggested Refresh Strategy**:<br>It is recommended to refresh the clientUrl just before refreshing the authToken, ensuring that the current clientUrl is used for all API calls, including the token refresh. This ensures that you're always using the most up-to-date client URL for your API interactions.<br><br>**Note**:<br>While it is rare for a client’s URL to change, in the event that it does, please ensure you are refreshing the clientUrl to avoid issues with incorrect routing."
      operationId: getClientURL
      parameters:
      - name: rmsClientId
        in: path
        description: Id of RMS Client to retrieve the API Server URL
        required: true
        schema:
          type: integer
          format: int32
        example: 11281
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: https://testrestapi2.rmscloud.com
      security: []
  /authToken:
    post:
      tags:
      - connecting and authentication
      summary: Create an authentication token
      description: "For testing purposes, please use the following example format and replace 'Module type' with the one you have been advised for your Live credentials.<br><br>Live agent credentials will not work with the test database '11281'.<br>For Test API credentials please contact apisupport@rmscloud.com<BR>Tokens have an expiry of 24 hours. Token expiry times are displayed in UTC.<br><br> Note: To determine if a database is multi-property, check the rmsClientId in the response of the authToken request.<br>If the rmsClientId matches the clientId for the allowed properties, it is a standalone database.<br>If the rmsClientId differs, it is a multi-property database, and the rmsClientId represents the parentId.<br> [authToken Schema](https://restapidocs.rmscloud.com/images/token1.png)"
      operationId: createAuthToken
      requestBody:
        $ref: '#/components/requestBodies/authTokenRequest'
      responses:
        "201":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authTokenResponse'
            application/pdf:
              schema:
                type: string
                format: binary
              examples:
                Image:
                  summary: This diagram explains the different components that make up the authToken and how to obtain them.
                  externalValue: http://example.com/examples/example.pdf
        "401":
          description: No auth header or blank token in auth header / Token retrieved but is expired > ReadTokenHeaderException / Expired Token Exception
        "403":
          description: Invalid Credentials / Insufficient module access / Failure to retrieve connection info from token > InvalidTokenRequest
      security: []
  /accounts/search:
    post:
      tags:
      - accounts
      summary: Retrieve account information
      description: "This endpoint does not support reservation accounts.<br> For reservation accounts, use the /reservations/search endpoint.<br> For POS and Cash, the accountEntityId is equivalent to the propertyIds account."
      operationId: postAccountsSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/accountsSearchRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountsSearchResponse'
  /accounting/foreignExchangeRates:
    get:
      tags:
      - accounts
      summary: Retrieve a clients foreign exchange rates this is a test
      operationId: getForeignExchangeRates
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/foreignExchangeRates'
    post:
      tags:
      - accounts
      summary: Add a new foreign exchange rate to RMS
      operationId: postForeignExchangeRates
      requestBody:
        $ref: '#/components/requestBodies/foreignExchangeRates'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/foreignExchangeRates'
  /accounting/foreignExchangeRates/{id}:
    put:
      tags:
      - accounts
      summary: Update an existing a new foreign exchange rate to RMS
      operationId: putForeignExchangeRates
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/foreignExchangeRates'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/foreignExchangeRates'
  /accountTypes:
    get:
      tags:
      - account types
      summary: Retrieve a list of account types
      operationId: getAcccountTypes
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountTypes'
  /agents/search:
    post:
      tags:
      - agents
      summary: "Perform an advanced search for all agent types; Online Agents, Travel Agents, Wholesalers & Group Allotments"
      description: "<Due to agents being associated with multiple properties operating in different time zones, the modified dates for these records will be returned in UTC"
      operationId: postAgentSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      requestBody:
        $ref: '#/components/requestBodies/advancedSearchRequest'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/agentFull'
  /agents/{agentId}/rates/assignments:
    get:
      tags:
      - agents
      summary: Retrieve rates assigned to a travel agent or wholesaler
      operationId: getAgentRatesAssignments
      parameters:
      - name: agentId
        in: path
        description: The Id of the relevant travelAgent or wholeSaler
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/travelAgentsRatesAssignmentsFull'
  /agents/{agentId}/rates/{rateId}/assignments:
    post:
      tags:
      - agents
      summary: Assign rates to a travel agent or wholesaler
      operationId: postAgentRatesAssignments
      parameters:
      - name: agentId
        in: path
        description: The Id of the relevant travelAgent or wholeSaler
        required: true
        schema:
          type: integer
          format: int32
      - name: rateId
        in: path
        description: The Id of the rate
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/ratesAssignmentsBasic'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/travelAgentsRatesAssignmentsFull'
  /agents/{agentId}/rates/{rateId}/assignments/{assignmentId}:
    put:
      tags:
      - agents
      summary: Update a rate assignment for a travel agent or wholesaler
      operationId: putAgentRatesAssignments
      parameters:
      - name: agentId
        in: path
        description: The Id of the relevant travelAgent or wholeSaler
        required: true
        schema:
          type: integer
          format: int32
      - name: rateId
        in: path
        description: The Id of the rate
        required: true
        schema:
          type: integer
          format: int32
      - name: assignmentId
        in: path
        description: The Id of the relevant rate assignment
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/ratesAssignmentsBasic'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/travelAgentsRatesAssignmentsFull'
    delete:
      tags:
      - agents
      summary: Delete a rate assignment for a travel agent or wholesaler
      operationId: deleteAgentRatesAssignments
      parameters:
      - name: agentId
        in: path
        description: The Id of the relevant travelAgent or wholeSaler
        required: true
        schema:
          type: integer
          format: int32
      - name: rateId
        in: path
        description: The Id of the rate
        required: true
        schema:
          type: integer
          format: int32
      - name: assignmentId
        in: path
        description: The Id of the relevant rate assignment
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResult'
  /agents/{id}/allotments:
    get:
      tags:
      - agents
      summary: Retrieve a list of travel agent and wholesale allotments; by Id
      operationId: getAgentsAllotments
      parameters:
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentAllotments'
  /agents/{id}/accounts:
    get:
      tags:
      - agents
      summary: "Retrieve a Online Agent, Travel Agent or Wholesaler Account id. This information is displayed at a property level"
      operationId: getAgentAccounts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountBasic'
      deprecated: false
  /agents/{id}/commissions:
    get:
      tags:
      - agents
      summary: Retrieve a travelAgent or WholeSalers commissions
      operationId: getAgentsCommissions
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentsIdCommissions'
  /agents/{id}/createPropertyAccount:
    post:
      tags:
      - agents
      summary: "If an Agent has never charged back to their account id before at a particular property, it will not exist in RMS. This feature will allow you to create an account id for the specified Agent id at a specified property"
      operationId: postAgentAccountId
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountBasic'
      deprecated: false
  /agents/{id}/rates:
    get:
      tags:
      - agents
      summary: Retrieve a agent's rates
      operationId: getAgentRatesById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/travelAgentRateBasic'
      deprecated: false
  /auditTrail/search:
    post:
      tags:
      - audit trail
      summary: Retrieve Reservation audit information
      description: ""
      operationId: getReservationsAuditTrails
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/auditTrailSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/auditTrailBasic'
  /auditTrail/rates/search:
    post:
      tags:
      - audit trail
      summary: Retrieve Rates audit information
      description: ""
      operationId: getAuditTrailsForRates
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/auditTrailRateSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/auditTrailBasic'
  /areas:
    get:
      tags:
      - areas
      summary: Retrieve a list of areas
      description: "<br> <br> Max occupants can be set at a category level and at an Area Level. When calculating max occupants adults and children do count toward max occupants, but infants do not."
      operationId: getAreas
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      - name: modifiedSince
        in: query
        description: Limit results to records created or modified since this date (property local time)
        required: false
        schema:
          type: string
          format: date-time
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              example:
              - areaLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/areaLite
              - areaBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/areaBasic
              - areaFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/areaFull
      deprecated: false
  /areas/cleanStatuses:
    get:
      tags:
      - areas
      summary: Return a list of system default area clean statuses
      operationId: getAreasCleanStatuses
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/areaCleanStatuses'
      deprecated: false
  /areas/cleanStatuses/custom:
    get:
      tags:
      - areas
      summary: Return custom area clean statuses for a property
      operationId: getAreasCleanStatusesCustom
      parameters:
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/areaCleanStatusesCustom'
      deprecated: false
  /areas/search:
    post:
      tags:
      - areas
      summary: Perform an advanced area search
      operationId: postAreaSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/areaSearchRequest'
      responses:
        "200":
          description: Elements passed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              example:
              - areaLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/areaLite
              - areaBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/areaBasic
              - areaFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/areaFull
  /areas/{id}:
    get:
      tags:
      - areas
      summary: Retrieve an Area by id
      operationId: getAreasById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: areaName
        in: query
        description: The name of the area to return
        required: false
        schema:
          type: string
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              example:
              - areaLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/areaLite
              - areaBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/areaBasic
              - areaFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/areaFull
      deprecated: false
  /areas/{id}/attributes:
    get:
      tags:
      - areas
      summary: Retrieve the attributes associated with an area
      operationId: getAreaAttributesById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/attributeFull'
      deprecated: false
  /areas/attributes/search:
    post:
      tags:
      - areas
      summary: Pass an array of area Id's to retrieve the attributes associated with an area
      operationId: getattributesByAreaIds
      requestBody:
        $ref: '#/components/requestBodies/ids'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/attributeCollection'
  /areas/{id}/cleanStatus:
    put:
      tags:
      - areas
      summary: Update the clean status of an area
      operationId: putUpdateAreaCleanStatus
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        description: Only these statuses will be accepted
        required: false
        explode: false
        schema:
          type: string
          enum:
          - maintenance
          - vacantClean
          - vacantDirty
          - vacantInspect
      - name: customCleanStatusId
        in: query
        description: The Id of the customAreaStatus
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: "success: true"
      deprecated: false
  /areas/{id}/configuration:
    get:
      tags:
      - areas
      summary: Retrieve the configuration associated with an area
      operationId: getAreaConfiguration
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: "success: true"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/areaConfiguration'
      deprecated: false
  /areas/configuration/search:
    post:
      tags:
      - areas
      summary: Pass an array of area Id's to retrieve the configuration associated with an area
      operationId: getConfigurationByAreaIds
      requestBody:
        $ref: '#/components/requestBodies/ids'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/areaConfiguration'
  /areas/grouping:
    get:
      tags:
      - areas
      summary: Retrieve a list of grouping available to an area
      operationId: getAreaGrouping
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/grouping'
      deprecated: false
  /areas/{id}/dwellings:
    get:
      tags:
      - areas
      summary: Get the dwelling options associated with an area
      operationId: getAreaDwellingOptions
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/areaDwelling'
      deprecated: false
  /areas/{id}/images:
    get:
      tags:
      - areas
      summary: Retrieve the image URL's associated with a area
      operationId: getAreaImagesById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/image'
      deprecated: false
  /areas/{id}/interconnecting:
    get:
      tags:
      - areas
      summary: Retrieve the interconnecting areas associated with a specified area
      operationId: getInterconnectingAreasByAreaId
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/areaBasic'
      deprecated: false
  /areas/{id}/owner:
    get:
      tags:
      - areas
      summary: Retrieve the owner associated with an area (This is only applicable to properties using owner accounting)
      operationId: getOwnerRecordByAreaId
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestBasic'
      deprecated: false
  /areas/{id}/requirements:
    get:
      tags:
      - areas
      summary: Retrieve the requirements associated with an area
      operationId: getRequirementsByAreaId
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/requirementBasic'
      deprecated: false
  /areas/requirements/search:
    post:
      tags:
      - areas
      summary: Pass an array of area Id's to retrieve the requirements associated with an area
      operationId: getRequirementsByAreaIds
      requestBody:
        $ref: '#/components/requestBodies/ids'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/requirementBasic'
  /attributes:
    get:
      tags:
      - attributes
      summary: Retrieve a list of all attributes
      operationId: getAttributes
      parameters:
      - name: associatedTo
        in: query
        description: Only these asscociations will be accepted
        required: false
        explode: false
        schema:
          type: string
          enum:
          - all
          - area
          - property
          - category
          - dwelling
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/attributeFull'
  /availabilityRateGrid:
    post:
      tags:
      - availability
      summary: Retrieve a properties availability and rate information to present in a calendar grid
      description: "**Rate Calculation**<br>Retrieves the base rate values for each room type and date, without considering pax details or availability constraints. This endpoint provides raw rate data and does not account for dynamic pricing or booking restrictions.<br><br>This call supports retrieving up to 14 days of availability per request. However, you may issue multiple calls in parallel, as long as they remain within the defined rate limits. (Refer to the rate limiting section of the documentation for details.)<br> <br>**Use Case**<br>Intended to be used for presenting in a calendar grid.<br> <br>**AgentID**<br>The agentId parameter in this call refers to the ID of an existing distribution channel the property is connected to.To retrieve a list of connected channels, use the GET /onlineAgents endpoint. Confirm with the client which channel should be used, then include that channel’s ID in the agentId field of this call.<br> <br>**RateID**<br>To determine the correct rateId for a given agent, use the GET /agents/{id}/rates endpoint.<br> <br>**Estimated Rates**<br>If the includeEstimatedRates parameter is set to true, the response will include an estimated rate value.<br>Note that this may differ from the final quote returned by a booking check. Estimated rates can be identified in the response by the flag estimatedRate: true.<br>(This property is only returned if includeEstimatedRates is set to true.)"
      operationId: getAvailabilityRateGrid
      parameters:
      - name: includeEstimatedRates
        in: query
        description: "When set to true this option will return an estimated rate value, this value may not reflect the same value as the final quote check. Estimated rates can be identified in the response by the value 'estimatedRate: True'"
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        $ref: '#/components/requestBodies/availabilityRateGridRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/availabilityRateGridResponse'
  /rates/grid:
    post:
      tags:
      - availability
      summary: Retrieve a properties availability and rate information based on pax for an itinerary
      description: "**Rate Calculation**<br>Returns rate values based on the specified pax. Does not validate that the provided agentId has access to the specified rates and room categories. Rates may vary depending on the number and type of pax, as well as the property's pricing rules. While the returned rates may be valid for the selected room category, they are not guaranteed to be bookable — for example, if the request does not satisfy minimum or maximum night stay requirements.<br> <br>**Use Case**<br>Intended to be used for an itinerary with specific stay dates.<br> <br>**AgentID**<br>The agentId parameter in this call refers to the ID of an existing distribution channel the property is connected to.To retrieve a list of connected channels, use the GET /onlineAgents endpoint. Confirm with the client which channel should be used, then include that channel’s ID in the agentId field of this call.<br> <br>**RateID**<br>To determine the correct rateId for a given agent, use the GET /agents/{id}/rates endpoint.<br> <br>**Estimated Rates**<br>If the includeEstimatedRates parameter is set to true, the response will include an estimated rate value.<br>Note that this may differ from the final quote returned by a booking check. Estimated rates can be identified in the response by the flag estimatedRate: true.<br>(This property is only returned if includeEstimatedRates is set to true.)<br><br>**Allotment Association ID**<br>Used to return availability for a Group, Travel Agent, or Wholesaler when combined with the ID of the corresponding allotment set in the Group Allotment ID field."
      operationId: getRateGrid
      requestBody:
        $ref: '#/components/requestBodies/rateGridRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/availabilityRateGridResponse'
  /rates/grid/quick:
    post:
      tags:
      - availability
      summary: Retrieve a properties availability and rate information based on pax for an itinerary. This call mirrors the RMS Quick Quote Screen.
      description: "**Rate Calculation**<br>Returns rate values based on the specified pax. Validates that the provided agentId has access to the specified rates and room categories. Rates may vary depending on the number and type of pax, as well as the property's pricing rules. While the returned rates may be valid for the selected room category, they are not guaranteed to be bookable — for example, if the request does not satisfy minimum or maximum night stay requirements.<br> <br>**Use Case**<br>Intended to be used for an itinerary with specific stay dates.<br> <br>**AgentID**<br>The agentId parameter in this call refers to the ID of an existing distribution channel the property is connected to.To retrieve a list of connected channels, use the GET /onlineAgents endpoint. Confirm with the client which channel should be used, then include that channel’s ID in the agentId field of this call.<br> <br>**RateID**<br>To determine the correct rateId for a given agent, use the GET /agents/{id}/rates endpoint.<br> <br>**Estimated Rates**<br>If the includeEstimatedRates parameter is set to true, the response will include an estimated rate value.<br>Note that this may differ from the final quote returned by a booking check. Estimated rates can be identified in the response by the flag estimatedRate: true.<br>(This property is only returned if includeEstimatedRates is set to true.)<br><br>**Allotment Association ID**<br>Used to return availability for a Group, Travel Agent, or Wholesaler when combined with the ID of the corresponding allotment set in the Group Allotment ID field."
      operationId: getRateGridQuick
      requestBody:
        $ref: '#/components/requestBodies/rateGridRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/availabilityRateGridResponse'
  /availabilityGrid:
    post:
      tags:
      - availability
      summary: Retrieve availability
      operationId: getAvilablilityGrid
      requestBody:
        $ref: '#/components/requestBodies/availabilityGridRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/availabilityGridResponse'
  /availableAddOns:
    post:
      tags:
      - availability
      summary: Retrieve a list of available add-ons for a given add-on Type for a defined date range
      operationId: getAvilableAddOns
      requestBody:
        $ref: '#/components/requestBodies/addOnAvailabilityRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/addOnArea'
  /availableAreas:
    post:
      tags:
      - availability
      summary: Retrieve a list of available areas for a given category for a defined date range.
      description: "If no available area is returned this will be due to no continuous area being available in the client's database. <br> <br> Please refer to the Knowledge article for more information: https://helpcentre.rmscloud.com/quote-reservation-troubleshoot/single-area-not-available-in-the-category"
      operationId: getAvilableAreas
      requestBody:
        $ref: '#/components/requestBodies/availableAreaRequest'
      responses:
        "200":
          description: successful operation <br> <br> Please Note - The response body has a field called 'cleanstatus'. This reflects the areas clean status at the time of the call. It does not reflect the clean status for future dates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/areaLite'
  /availableFacilities:
    post:
      tags:
      - availability
      summary: Retrieve a list of available categories for a defined date
      description: "This call allows you to retrieve up to 1 days availability per call, however you can pass multiple calls in parallel within the rate limit restrictions (see rate limiting section of documentation for more info on rate limits). <br> <br> The agent ID in the availabilityrategrid call refers to the ID of existing channels the property is connected too. <br> <br> You will need to use the 'GET/onlineAgents' call to retrieve the list of connected channels at the property, confirm with the client which one they would like to use, then use the ID for that channel in the 'agentId' field of the availabilityrategrid call."
      operationId: getAvailableFacilities
      requestBody:
        $ref: '#/components/requestBodies/rateGridRequestFacility'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rateGridFacility'
  /availabilityPush:
    options:
      tags:
      - availability push
      summary: "Allow RMS to provide you with Live availability, rates and inventory. - This is not a working API call and is for documentational purposes only"
      description: |-
        This call is for documentation purposes only. Please review the details below.<br><br>
        If your integration needs to show more than 14 days of availability to customers, RMS recommends listing you as a channel to enable Live ARI (Availability, Rates, Inventory). To achieve this, you'll need to build a local cache to host the data we provide.<br><br>
        **How it works:**<br> Customers will connect to your channel listing in the RMS channel manager using a username/password provided by you. They will complete mapping, specifying the rates and categories to be included in the ARI update.<br><br>
        RMS will maintain a 365-day rolling ARI sync. Changes to ARI in RMS will trigger real-time updates to your specified endpoint.<br><br>
        **Steps:**<br> 1. Submit a ticket via the partner portal to request ARI PUSH.<br> 2. Specify the endpoint for receiving ARI updates (note- this endpoint will be used for all customer connections).
      operationId: availabilityPushInfo
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rateGridARIPushResponse'
  /availabilityPushVersion2:
    options:
      tags:
      - availability push
      summary: "Allow RMS to provide you with Live availability, rates and inventory. - This is not a working API call and is for documentational purposes only"
      description: |-
        In version 2 of the availabilityPushInfo endpoint, the key update is the support for multiple periods in both additionals configuration and person base pricing.<br><br> Here’s a quick breakdown of the changes:<br><br>
        Multiple Periods for Additionals<br> In version 1, additionals (extra person charges) were defined with a single set of pricing rules.<br> In version 2, you can configure different pricing for additionals across multiple date ranges, allowing more granular control over extra person fees.<br><br>
        Multiple Periods for Person Base Pricing<br> In version 1, the base price for a category was static per rate setup.<br> In version 2, base pricing can now vary across different periods, enabling more flexible rate structures depending on the season, promotions, or specific date-based pricing strategies.<br><br>    **How it works:**<br> Customers will connect to your channel listing in the RMS channel manager using a username/password provided by you. They will complete mapping, specifying the rates and categories to be included in the ARI update.<br><br>
        RMS will maintain a 365-day rolling ARI sync. Changes to ARI in RMS will trigger real-time updates to your specified endpoint.<br><br>
        **Steps:**<br> 1. Submit a ticket via the partner portal to request ARI PUSH.<br> 2. Specify the endpoint for receiving ARI updates (note- this endpoint will be used for all customer connections).
      operationId: availabilityPushInfoVersion2
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rateGridARIPushResponseVersion2'
  /bookingSources:
    get:
      tags:
      - booking sources
      summary: Retrieve a list of booking sources
      operationId: getBookingSources
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/bookingSourceBasic'
  /bookingSources/grouping:
    get:
      tags:
      - booking sources
      summary: Retrieve a list of grouping available to booking sources
      operationId: getBookingSourceGrouping
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/grouping'
      deprecated: false
  /boomgates/history:
    post:
      tags:
      - boomgates
      summary: Create a new boomgate history record
      operationId: boomgatesHistory
      requestBody:
        $ref: '#/components/requestBodies/boomgatesHistory'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResult'
  /boomgate/status:
    put:
      tags:
      - boomgates
      summary: Update the registration access status
      operationId: putBoomgatesReservationStatus
      parameters:
      - name: accessNumber
        in: query
        description: The access number
        required: true
        schema:
          type: string
      - name: status
        in: query
        description: only these statuses will be excepted
        required: true
        explode: false
        schema:
          type: string
          enum:
          - in
          - out
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/regoAccess'
  /boomgate/zones:
    get:
      tags:
      - boomgates
      summary: Retrieve a boomgate zones
      operationId: getBoomgateZones
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/zones'
  /boomgates/search:
    post:
      tags:
      - boomgates
      summary: Perform and advanced search for boomgate rego access
      operationId: searchBoomgateRegoAccess
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/regoAccessSearchRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/regoAccessArrayResponse'
  /cancellationPolicies:
    get:
      tags:
      - cancellation policies
      summary: Get a properties cancellation policies
      operationId: getCancellationPolicies
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/cancellationPolicy'
  /cancellationPolicies/{cancelPolicyId}/rules:
    get:
      tags:
      - cancellation policies
      summary: Get a properties cancellation policy rules
      operationId: getCancellationPolicyIdRules
      parameters:
      - name: cancelPolicyId
        in: path
        description: The Id of the cancellation Policy
        required: true
        schema:
          type: integer
          format: int32
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancellationPoliciesRules'
  /categories:
    get:
      tags:
      - categories
      summary: Retrieve a list of categories
      description: "The room type holds the room description, number of guests it can accommodate, price, etc. Your property may have multiple rooms (or units) that all are of the same room type. You can add and edit room types and units in Settings -> Accommodation. A room type named “Double room”. <br> <br> Any reference to Room Type, Site Type, Dock Type will be referred to as Category. Categories are created by the property and all fields are not necessary configured with information. If a particular field is required for your integration and you receive a null value you will need to ask the property directly to populate this. <br> <br> Max occupants’ can be set at a category level and at an Area Level. When calculating max occupants adults and children do count toward max occupants, but infants do not."
      operationId: getCategories
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      - name: modifiedSince
        in: query
        description: Limit results to records created or modified since this date (property local time)
        required: false
        schema:
          type: string
          format: date-time
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              example:
              - categoryLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/categoryLite
              - categoryBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/categoryBasic
              - categoryFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/categoryFull
      deprecated: false
  /categories/grouping:
    get:
      tags:
      - categories
      summary: Retrieve a list of grouping available to a category
      operationId: getCategoriesGrouping
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/grouping'
      deprecated: false
  /categories/housekeeping:
    post:
      tags:
      - categories
      summary: Pass an array of category Id's to retrieve the housekeeping configuration
      operationId: getHousekeepingByCategoryIds
      requestBody:
        $ref: '#/components/requestBodies/ids'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/categoryHousekeeping'
  /categories/{id}:
    get:
      tags:
      - categories
      summary: Retrieve a Category by id
      operationId: getCategoriesById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              example:
              - categoryLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/categoryLite
              - categoryBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/categoryBasic
              - categoryFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/categoryFull
      deprecated: false
  /categories/{id}/areas:
    get:
      tags:
      - categories
      summary: Retrieve the areas associated with a category
      operationId: getCategoriesAreas
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/areaLite'
      deprecated: false
  /categories/{id}/attributes:
    get:
      tags:
      - categories
      summary: Retrieve the attributes associated with a category
      operationId: getCategoryAttributes
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/attributeFull'
      deprecated: false
  /categories/{id}/discounts:
    get:
      tags:
      - categories
      summary: Retrieve the discounts associated with a category
      operationId: getCategoriesDiscounts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/discountLite'
      deprecated: false
  /categories/{id}/dwellings:
    get:
      tags:
      - categories
      summary: Get the dwelling options associated with a category
      operationId: getCategoriesDwellingOptions
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categoriesDwellingOptions'
      deprecated: false
  /categories/{id}/images:
    get:
      tags:
      - categories
      summary: Retrieve the image URL's associated with a category
      operationId: getCategoryImages
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/image'
      deprecated: false
  /categories/{id}/onlineOptions:
    get:
      tags:
      - categories
      summary: Retrieve the Online options associated with a category
      operationId: getCategoryOnlineOptions
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/categoryOnlineOptions'
      deprecated: false
  /categories/{id}/taxes:
    get:
      tags:
      - categories
      summary: Retrieve the taxes associated with a category
      operationId: getCategoyTaxes
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/taxes'
      deprecated: false
  /categories/requirements/search:
    post:
      tags:
      - categories
      summary: Pass an array of category Id's to retrieve the requirements associated with the categories
      operationId: getRequirementsByCategoryIds
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/ids'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/requirementsByCategory'
  /companies:
    get:
      tags:
      - companies
      summary: Retrieve a list of companies
      operationId: getCompanies
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: modifiedSince
        in: query
        description: Limit results to records created or modified since this date (property local time)
        required: false
        schema:
          type: string
          format: date-time
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
              example:
              - CompanyLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/companyLite/example
              - CompanyBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/companyBasic/example
              - CompanyFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/companyFull/example
    put:
      tags:
      - companies
      summary: Update an existing company
      operationId: updateCompany
      requestBody:
        $ref: '#/components/requestBodies/company'
      responses:
        "201":
          description: basic successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/companyBasic'
    post:
      tags:
      - companies
      summary: Add a new company
      operationId: addCompany
      requestBody:
        $ref: '#/components/requestBodies/company'
      responses:
        "201":
          description: basic successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/companyBasic'
  /companies/{companyId}/rates/assignments:
    get:
      tags:
      - companies
      summary: Retrieve rates assigned to a company
      operationId: getCompanyRatesAssignments
      parameters:
      - name: companyId
        in: path
        description: The Id of the relevant company
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/companiesRatesAssignmentsFull'
  /companies/{companyId}/rates/{rateId}/assignments:
    post:
      tags:
      - companies
      summary: Assign rates to a company
      operationId: postCompanyRatesAssignments
      parameters:
      - name: companyId
        in: path
        description: The Id of the relevant company
        required: true
        schema:
          type: integer
          format: int32
      - name: rateId
        in: path
        description: The Id of the rate
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/ratesAssignmentsBasic'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/companiesRatesAssignmentsFull'
  /companies/{companyId}/rates/{rateId}/assignments/{assignmentId}:
    put:
      tags:
      - companies
      summary: Update a rate assignment for a company
      operationId: putCompanyRatesAssignments
      parameters:
      - name: companyId
        in: path
        description: The Id of the relevant company
        required: true
        schema:
          type: integer
          format: int32
      - name: rateId
        in: path
        description: The Id of the rate
        required: true
        schema:
          type: integer
          format: int32
      - name: assignmentId
        in: path
        description: The Id of the relevant rate assignment
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/ratesAssignmentsBasic'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/companiesRatesAssignmentsFull'
    delete:
      tags:
      - companies
      summary: Delete a rate assignment for a company
      operationId: deleteCompanyRatesAssignments
      parameters:
      - name: companyId
        in: path
        description: The Id of the relevant company
        required: true
        schema:
          type: integer
          format: int32
      - name: rateId
        in: path
        description: The Id of the rate
        required: true
        schema:
          type: integer
          format: int32
      - name: assignmentId
        in: path
        description: The Id of the relevant rate assignment
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResult'
  /companies/{id}/createPropertyAccount:
    post:
      tags:
      - companies
      summary: "If a Company has never charged back to their account id before at a particular property, it will not exist in RMS. This feature will allow you to create an account id for the specified Copmapny id at a specified property"
      operationId: postCompanyAccountId
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountBasic'
      deprecated: false
  /companies/grouping:
    get:
      tags:
      - companies
      summary: Retrieve a list of grouping available to companies
      operationId: getCompanyGroupings
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/grouping'
      deprecated: false
  /companies/search:
    post:
      tags:
      - companies
      summary: Perfrom an advanced search for companies
      operationId: postCompanySearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      requestBody:
        $ref: '#/components/requestBodies/advancedSearchRequest'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/companyFull'
  /companies/{id}:
    get:
      tags:
      - companies
      summary: Retrieve a company's details
      operationId: getCompanyById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
              example:
              - CompanyLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/companyLite/example
              - CompanyBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/companyBasic/example
              - CompanyFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/companyFull/example
    patch:
      tags:
      - companies
      summary: Update an existing company without the need to pass a whole object
      operationId: patchCompanies
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/companyPatch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/companyFull'
  /companies/{id}/accounts:
    get:
      tags:
      - companies
      summary: Retrieve an AccountId associated with A Company
      operationId: getCompanyAccounts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountBasic'
      deprecated: false
  /companies/{id}/accountsReceivable:
    get:
      tags:
      - companies
      summary: Retrieve Accounts Receivable info associated with A Company
      operationId: getCompanyAccountsReceivable
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/creditHoldBasic'
      deprecated: false
    post:
      tags:
      - companies
      summary: Create Accounts Receivable info associated with A Company
      operationId: postCompanyAccountsReceivablearId
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/creditHoldBasic'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/creditHoldBasic'
      deprecated: false
  /companies/{id}/accountsReceivable/{arId}:
    put:
      tags:
      - companies
      summary: Update Accounts Receivable info associated with A Company
      operationId: putCompanyAccountsReceivable
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: arId
        in: path
        description: The Id of the Accounts Receivable Record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/creditHoldBasic'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/creditHoldBasic'
      deprecated: false
  /companies/{id}/contacts:
    get:
      tags:
      - companies
      summary: Retrieve a company's contacts
      operationId: getCompanyContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
    put:
      tags:
      - companies
      summary: Update a company's contacts
      operationId: updateCompanyContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/contact'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
    post:
      tags:
      - companies
      summary: Create a company's contact
      operationId: addCompanyContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/contact'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
  /companies/{id}/notes:
    get:
      tags:
      - companies
      summary: Retrieve a company's notes
      operationId: getCompanyNotes
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notesResponse'
    post:
      tags:
      - companies
      summary: Add company notes
      operationId: postCompanyNotes
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/notes'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notesResponse'
  /companies/{id}/notes/{noteId}:
    put:
      tags:
      - companies
      summary: Update a company's note
      operationId: updateCompanyNotes
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: noteId
        in: path
        description: The ID of the note
        required: true
        schema:
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/notes'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notesResponse'
  /companies/{id}/rates:
    get:
      tags:
      - companies
      summary: Retrieve a company's rates
      operationId: getCompanyRates
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/chargeTypeLite'
  /countries:
    get:
      tags:
      - countries
      summary: Retrieve a list of countries
      operationId: getCountries
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/country'
  /creditNotes:
    get:
      tags:
      - credit notes
      summary: Retrieve a list of credit notes
      operationId: getCreditNotes
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/creditNote'
  /discounts:
    get:
      tags:
      - discounts
      summary: Retrieve a list of active discounts
      operationId: getDiscounts
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
  /discounts/{id}/validationOptions:
    get:
      tags:
      - discounts
      summary: Retrieve the validation options associated to a single discounts
      operationId: getDiscountValidationOptions
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/discountValidation'
  /discounts/validationOptions/search:
    post:
      tags:
      - discounts
      summary: Perform an advanced discount validation search
      operationId: postDiscountValidationOptionsSearch
      requestBody:
        $ref: '#/components/requestBodies/discountValidationSearch'
      responses:
        "200":
          description: Elements passed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/discountValidation'
  /dwellingLengths:
    get:
      tags:
      - dwelling
      summary: Retrieve a list of dwelling lengths
      operationId: getDwellingLengths
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dwellingLength'
  /dwellingTypes:
    get:
      tags:
      - dwelling
      summary: Retrieve a list of dwelling types
      operationId: getDwellingTypes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dwellingType'
  /dwellingTypesPropertyRestriction:
    get:
      tags:
      - dwelling
      summary: Retrieve a list of dwelling types
      operationId: getDwellingTypesPropertyRestriction
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dwellingTypesPropertyRestriction'
  /dwellingSlides:
    get:
      tags:
      - dwelling
      summary: Retrieve a list of dwelling slides
      operationId: getDwellingSlides
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dwellingSlide'
  /towing:
    get:
      tags:
      - dwelling
      summary: Retrieve a list of towing types
      operationId: getTowing
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/towing'
  /financialInterface/setup:
    post:
      tags:
      - finance
      summary: To Retrieve Financial Interface Mapping Setup
      operationId: postFinancialInterfaceSetup
      requestBody:
        $ref: '#/components/requestBodies/financialInterfaceSetup'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/financialInterfaceSetupResponse'
  /financialInterface/tcodes:
    post:
      tags:
      - finance
      summary: To Retrieve Financial TCode Mapping Setup
      operationId: postFinancialInterfaceTcodes
      requestBody:
        $ref: '#/components/requestBodies/financialInterfaceTcodes'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/financialInterfaceTcodesResponse'
  /glAccountCodes:
    get:
      tags:
      - gl account codes
      summary: Retrieve a list of GL account codes
      operationId: getGlAccountCodes
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/glCodeBasic'
    post:
      tags:
      - gl account codes
      summary: Create a new GL Account code
      operationId: createGlCode
      requestBody:
        $ref: '#/components/requestBodies/glCodeCreation'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/glCodeCreation'
  /glAccountCodes/grouping:
    get:
      tags:
      - gl account codes
      summary: Retrieve a list of GL account codes groupings
      operationId: getGlAccountCodesGrouping
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/grouping'
  /glAccountCodes/{id}:
    get:
      tags:
      - gl account codes
      summary: Retrieve a list of GL account codes by id
      operationId: getGlAccountCodesById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/glCodeBasic'
    put:
      tags:
      - gl account codes
      summary: Update an exisiting GL Account code
      operationId: updateGlCode
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/glCodeCreation'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/glCodeCreation'
  /guests:
    put:
      tags:
      - guests
      summary: Update an existing guest
      operationId: updateGuest
      parameters:
      - name: ignoreMandatoryFieldWarnings
        in: query
        description: "When set to false this option will return any warnings prompted by blank mandatory fields in the RMS UI, restricting you from updating or creating a record"
        required: true
        schema:
          type: boolean
          default: false
      requestBody:
        $ref: '#/components/requestBodies/guest'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestBasic'
    post:
      tags:
      - guests
      summary: Add a new guest
      operationId: addGuest
      parameters:
      - name: ignoreMandatoryFieldWarnings
        in: query
        description: "When set to false this option will return any warnings prompted by blank mandatory fields in the RMS UI, restricting you from updating or creating a record"
        required: true
        schema:
          type: boolean
          default: false
      requestBody:
        $ref: '#/components/requestBodies/guest'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestBasic'
  /guests/search:
    post:
      tags:
      - guests
      summary: Retrieve an advanced guest search
      description: "If you recieve two records wit hthe same guest ID, the reason for this is that the guest has two different account ID's.This occurs when a guest is created within a central database so it would have an account at two or more different properties within that database. <br> <br> If you are searching for guest account ID’s within an enterprise database, we recommend you add the specific property ID (“accountPropertyIds”) to your search parameters, to get a correct result."
      operationId: postGuestSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/guestSearch'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestFull'
  /guests/{id}:
    get:
      tags:
      - guests
      operationId: getGuestsById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
              example:
              - guestLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/guestLite/example
              - guestBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/guestBasic/example
              - guestFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/guestFull/example
    patch:
      tags:
      - guests
      summary: Update an existing guest without the need to pass a whole object
      description: This call allows you to update any field within the guest record and you only need to pass the fields and values you wish to update. This can be used instead of the PUT function where you would need to retrieve and pass a whole object to make changes.
      operationId: updateAGuest
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: ignoreMandatoryFieldWarnings
        in: query
        description: "When set to false this option will return any warnings prompted by blank mandatory fields in the RMS UI, restricting you from updating or creating a record"
        required: true
        schema:
          type: boolean
          default: false
      requestBody:
        $ref: '#/components/requestBodies/guestPatch'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestFull'
  /guests/{id}/gdprPrivacyOptIn:
    put:
      tags:
      - guests
      summary: "Update an existing guests GDPR’s privacy setting - Please use the following knowledge base for more info: https://helpcentre.rmscloud.com/gdpr/privacy-policy-requirements-for-gdpr"
      operationId: updateGuestGdprPrivacy
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: optIn
        in: query
        description: The option to update a guests gdpr Privacy
        required: true
        schema:
          type: boolean
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestBasic'
  /guests/{id}/createPropertyAccount:
    post:
      tags:
      - guests
      summary: "If a Guest has never charged back to their account id before at a particular property, it will not exist in RMS. This feature will allow you to create an account id for the specified Guest id at a specified property."
      operationId: postGuestAccountId
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountBasic'
      deprecated: false
  /guests/{id}/dwelling:
    put:
      tags:
      - guests
      summary: Assign dwelling options to a guests profile.
      operationId: putGuestDwelling
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/guestDwelling'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestFull'
      deprecated: false
  /guests/{id}/accounts:
    get:
      tags:
      - guests
      summary: Retrieve the account id associated with A Guest
      operationId: getGuestsAccounts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountBasic'
      deprecated: false
  /guests/{id}/contacts:
    get:
      tags:
      - guests
      summary: Retrieve guest contact
      operationId: getGuestContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
    post:
      tags:
      - guests
      summary: Create guest contact
      operationId: addGuestContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/contact'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
  /guests/{id}/contacts/{id}:
    put:
      tags:
      - guests
      summary: Update guest contacts
      operationId: putUpdateGuestContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/contact'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
    patch:
      tags:
      - guests
      summary: Update guest contacts without the need to pass a whole object
      operationId: patchUpdateGuestContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/contact'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
  /guests/{id}/contracts:
    get:
      tags:
      - guests
      summary: Retrieve the contracts associated with A Guest/Owner
      operationId: getGuestsContracts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestContract'
      deprecated: false
  /guests/{id}/loyaltyPoints:
    get:
      tags:
      - guests
      summary: Retrieve the loyalty points associated with A Guest
      operationId: getGuestsLoyaltyPoints
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestLoyaltyPoints'
      deprecated: false
  /guests/{id}/loyaltyEnrollment:
    put:
      tags:
      - guests
      summary: "Update an existing guests profile to be enrolled in the RMS loyalt program. Please use the following knowledge base for more info: https://helpcentre.rmscloud.com/guest-rewards-module/enrol-a-guest-onto-guest-rewards"
      operationId: updateGuestsLoyaltyEnrollment
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: enroll
        in: query
        description: The option to enrol a guest in the loyalty program
        required: true
        schema:
          type: boolean
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestFull'
      deprecated: false
  /guests/contracts/search:
    post:
      tags:
      - guests
      summary: Pass an array of guest Id's to retrieve the contracts associated with A Guest/Owner
      operationId: searchGuestsContracts
      requestBody:
        $ref: '#/components/requestBodies/guestArraySearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestContracts'
  /guests/{id}/correspondenceSignature:
    get:
      tags:
      - guests
      summary: Retrieve the signature associated with A Guest from the guest portal
      operationId: getGuestsCorrespondenceSignature
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/correspondenceSignature'
      deprecated: false
  /guests/{id}/image:
    get:
      tags:
      - guests
      summary: Retrieve the image associated with A Guest
      operationId: getGuestsImage
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: expiry
        in: query
        description: "The expiry date you pass here will set the expirey dte/time against the link returned. (This time is set in UTC). Format example: \"2020-02-25 00:00:00\""
        required: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/image'
      deprecated: false
  /guests/{id}/mealCard:
    get:
      tags:
      - guests
      summary: Retrieve a guests meal card information
      operationId: getGuestsMealCard
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mealCard'
  /guests/mealCard/search:
    post:
      tags:
      - guests
      summary: Pass an array of guest Id's to retrieve a guests meal card information
      operationId: searchGuestsMealCard
      parameters:
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      requestBody:
        $ref: '#/components/requestBodies/guestIdArraySearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mealCard'
  /guests/{id}/rmsPayPayment:
    get:
      tags:
      - rmsPay
      summary: This call allows you to retrieve the payment details for an rmsPay session
      description: Payment details will only be provided for successful transactions.<br> Session status will be available for 15 minutes following session creation
      operationId: getRmsPayPaymentSession
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: sessionId
        in: query
        description: The Id of the relevant rmsPay session
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/guestsIdRMSPayPaymentSession'
    post:
      tags:
      - rmsPay
      summary: 'This call allows you to make a RMSPay Payment against a guest. '
      description: "Processing an RMSPay payment has to be done in 3 steps: <br> <br> 1. Use this call to process a payment via the RMSPay Gateway. <br> <br> 2. You would then need to grab the redirect URL, to obtain the payment details (card details, merchant reference, token reference etc) <br> <br> 3. Then use these details on the POST/transactions/receipt call to pass this payment into RMS. <br> <br> In the RMS Token Request, there are optional field called locale and allowPaymentMethods. <br> <br> The 'locale' field renders the payment screen in local language - The available options for locale are <br> Chinese - Simplified = zh_CN<br> Chinese - Traditional = zh_TW<br> Danish (Web SDK 1.3.1 and later) = da_DK<br> Dutch = nl_NL<br> English - US = en_US<br> French = fr_FR<br> German = it_IT<br> Italian = it_IT<br> Japanese (Web SDK 1.6.5 and later) = ja_JP<br> Norwegian (Web SDK 1.5.0 and later) = no_NO<br> Polish (Web SDK 1.3.0 and later) = pl_PL<br> Portuguese = pt_BR<br> Spanish = es_ES<br> Swedish = sv_SE<br> <br> The 'allowPaymentMethods' field restricts the card type the guest can use - The available card options for allowPaymentMethods are <br> Visa = visa<br> Mastercard = mc<br> American Express = amex<br> <br> notifyURL - If used, we will send a notification of success/failure to the URL provided in this field<br>"
      operationId: GuestrmsPayPayment
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/rmsPayTokenRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rmsPayTokenResponse'
  /guests/{id}/rmsPayToken:
    post:
      tags:
      - rmsPay
      summary: This call allows you to add a CC Token to be associated with a guest. In order to pass RMS a token you must create the token via the same payment gateway used by the property using the credentials they provide you. The guest must be associated with a reservation to assign it a token.
      description: "In the RMS Token Request, there are optional field called locale and allowPaymentMethods. <br> <br> The 'locale' field renders the payment screen in local language - The available options for locale are <br> Chinese - Simplified = zh_CN<br> Chinese - Traditional = zh_TW<br> Danish (Web SDK 1.3.1 and later) = da_DK<br> Dutch = nl_NL<br> English - US = en_US<br> French = fr_FR<br> German = it_IT<br> Italian = it_IT<br> Japanese (Web SDK 1.6.5 and later) = ja_JP<br> Norwegian (Web SDK 1.5.0 and later) = no_NO<br> Polish (Web SDK 1.3.0 and later) = pl_PL<br> Portuguese = pt_BR<br> Spanish = es_ES<br> Swedish = sv_SE<br> <br> The 'allowPaymentMethods' field restricts the card type the guest can use - The available card options for allowPaymentMethods are <br> Visa = visa<br> Mastercard = mc<br> American Express = amex<br> <br> notifyURL - If used, we will send a notification of success/failure to the URL provided in this field<br>"
      operationId: addGuestrmsPayToken
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/rmsPayTokenRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rmsPayTokenResponse'
  /guests/{id}/rmsPayToken/preAuth/{resId}:
    post:
      tags:
      - rmsPay
      summary: 'This call allows you to make a RMSPay Pre-auth against a reservation. '
      description: "Processing an RMSPay pre-auth has to be done in 2 steps: <br> <br> 1. Use this call to process a pre-auth via the RMSPay Gateway. <br> <br> 2. You would then need to grab the redirect URL, to obtain the payment details (card details, merchant reference, token reference etc) <br> <br> In the RMS Token Request, there are optional field called locale and allowPaymentMethods. <br> <br> The 'locale' field renders the payment screen in local language - The available options for locale are <br> Chinese - Simplified = zh_CN<br> Chinese - Traditional = zh_TW<br> Danish (Web SDK 1.3.1 and later) = da_DK<br> Dutch = nl_NL<br> English - US = en_US<br> French = fr_FR<br> German = it_IT<br> Italian = it_IT<br> Japanese (Web SDK 1.6.5 and later) = ja_JP<br> Norwegian (Web SDK 1.5.0 and later) = no_NO<br> Polish (Web SDK 1.3.0 and later) = pl_PL<br> Portuguese = pt_BR<br> Spanish = es_ES<br> Swedish = sv_SE<br> <br> The 'allowPaymentMethods' field restricts the card type the guest can use - The available card options for allowPaymentMethods are <br> Visa = visa<br> Mastercard = mc<br> American Express = amex<br> <br> notifyURL - If used, we will send a notification of success/failure to the URL provided in this field<br>"
      operationId: rmsPayTokenPreAuth
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: resId
        in: path
        description: The Id of the reservation
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/rmsPayTokenRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rmsPayTokenResponse'
  /guests/{id}/rmsPayToken/preAuthExistingToken:
    post:
      tags:
      - rmsPay
      summary: This call enables you to generate a pre-authorization token using an existing token.
      operationId: rmsPayPreAuthExistingToken
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/guestsIdRMSPayTokenPreAuthExistingToken'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResult'
  /guests/{id}/rmsPayToken/search:
    post:
      tags:
      - rmsPay
      summary: This call allows you to search a CC Token associated with a guest. In order to retrieve RMS a token you must pass the merchant reference used when the token was created
      operationId: searchGuestRmsPayToken
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/rmsPayTokenSearchRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestRMSPayToken'
  /rmsPay/terminals:
    get:
      tags:
      - rmsPay
      summary: This will return a list of rmsPay terminals for the property
      operationId: getRmsPayTerminals
      parameters:
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rmsPayTerminals'
  /rmsPay/terminals/abort:
    patch:
      tags:
      - rmsPay
      summary: Cancel the in-progress terminal payment
      operationId: postRmsPayTerminalsAbort
      parameters:
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      - name: terminalId
        in: query
        description: The Id of the relevant rmsPay terminal
        required: true
        schema:
          type: integer
          format: int32
      - name: stationNumber
        in: query
        description: The station number for the the relevant rmsPay terminal
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rmsPayTerminalsAbort'
  /rmsPay/terminals/preauth:
    post:
      tags:
      - rmsPay
      summary: Create a preauth using the rmspay terminal
      description: "After a sale, post a receipt to the reservations account using the /transactions/receipt API.<br>notifyURL - If used, a notification of success/failure wil be sent to the URL provided in this field"
      operationId: postRmsPayTerminalsPreAuth
      requestBody:
        $ref: '#/components/requestBodies/rmsPayTerminalsPreAuth'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rmsPayTerminalsTokenResponse'
  /rmsPay/terminals/sale:
    post:
      tags:
      - rmsPay
      summary: Create a RMSPay terminal payment
      description: "After a sale, post a receipt to the reservations account using the /transactions/receipt API.<br>notifyURL - If used, a notification of success/failure wil be sent to the URL provided in this field"
      operationId: postRmsPayTerminalsSale
      requestBody:
        $ref: '#/components/requestBodies/rmsPayTerminalsSale'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rmsPayTerminalsSaleResponse'
  /rmsPay/terminals/token:
    post:
      tags:
      - rmsPay
      summary: Create a credit card token with RMSPay terminal
      description: "A $1.00 pre-auth will be taken when creating a token with RMSpay terminal.<br> To post a receipt to the reservations account use the /transactions/receipt API.<br>notifyURL - If used, a notification of success/failure wil be sent to the URL provided in this field"
      operationId: postRmsPayTerminalsToken
      requestBody:
        $ref: '#/components/requestBodies/rmsPayTerminalsToken'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rmsPayTerminalsTokenResponse'
  /rmsPay/terminals/status:
    get:
      tags:
      - rmsPay
      summary: This will return the last known status for an rmsPay terminal
      description: "Retreive latest status of a terminal. This serves as a safeguard in case of issues with the sale or token endpoints, allowing users to retrieve the most recent transaction details from the terminal."
      operationId: getRmsPayTerminalsStatus
      parameters:
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      - name: terminalId
        in: query
        description: The Id of the relevant rmsPay terminal
        required: true
        schema:
          type: integer
          format: int32
      - name: stationNumber
        in: query
        description: The station number for the the relevant rmsPay terminal
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rmsPayTerminalsStatus'
  /guests/{id}/sagePayToken:
    post:
      tags:
      - guests
      summary: This call allows you to add a CC Token to be associated with a guest. In order to pass RMS a token you must create the token via the same payment gateway used by the property using the credentials they provide you. The guest must be associated with a reservation to assign it a token.
      operationId: addGuestSagePayToken
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/guestTokenSagePay'
      responses:
        "200":
          description: successful operation
  /guests/{id}/token:
    post:
      tags:
      - guests
      summary: This call allows you to add a CC Token to be associated with a guest. In order to pass RMS a token you must create the token via the same payment gateway used by the property using the credentials they provide you. The guest must be associated with a reservation to assign it a token.
      operationId: addGuestToken
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/guestToken'
      responses:
        "200":
          description: successful operation
  /guests/{id}/token/preAuth:
    post:
      tags:
      - guests
      summary: This call allows you to add a pre-auth CC Token to be associated with a reservation. In order to pass RMS a token you must create the token via the same payment gateway used by the property using the credentials they provide you. The guest must be associated with a reservation to assign it a token.
      operationId: addGuestTokenPreAuth
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/guestsTokenPreAuth'
      responses:
        "200":
          description: successful operation
  /guests/{id}/loyaltyNightsEnrollment:
    post:
      tags:
      - guests
      summary: Enroll a guest in the RMS loyalty by Nights program
      operationId: enrollGuestNightsLoyalty
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/guestsLoyaltyNightsEnrollment'
  /guests/{id}/loyaltySpendEnrollment:
    post:
      tags:
      - guests
      summary: Enroll a guest in the RMS loyalty spend program
      operationId: enrollGuestSpendLoyalty
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestLoyaltySpendEnrolment'
  /guests/{id}/loyaltySpendHistory:
    get:
      tags:
      - guests
      summary: Retrieve a guests Loyalty Spend History information
      operationId: getGuestsLoyaltySpendHistory
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestLoyaltySpend'
  /guests/{id}/loyaltySpendBalance:
    get:
      tags:
      - guests
      summary: Retrieve a guests meal card information
      operationId: getGuestsLoyaltySpendBalance
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestLoyaltySpendBalance'
  /guests/{id}/giftcards:
    get:
      tags:
      - guests
      summary: Retrieve a guests gift card information
      operationId: getGuestsgiftcards
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestGiftCard'
  /guests/guestCredit/search:
    post:
      tags:
      - guests
      summary: Pass an array of guestsIds for guests credit information
      operationId: guestCreditSearch
      requestBody:
        $ref: '#/components/requestBodies/guestCreditSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestCreditSearchResponse'
  /guests/{id}/guestCredit:
    get:
      tags:
      - guests
      summary: Retrieve a guests credit information
      operationId: getGuestsCreditBalance
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestCredit'
  /guests/{id}/memberships:
    get:
      tags:
      - guests
      summary: Get list of memberships for a guest
      operationId: getGuestsMembrshipById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestMembershipBasic'
    post:
      tags:
      - guests
      summary: Create Guest Membership info associated with an Guest
      operationId: createAGuestMembership
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/guestMembershipBasic'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/guestMembershipBasic'
  /guests/{id}/memberships/{membershipId}:
    put:
      tags:
      - guests
      summary: Update Guest Membership info associated with an Guest
      operationId: updateAGuestMembership
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: membershipId
        in: path
        description: The Id of the membership record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/guestMembershipBasic'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/guestMembershipBasic'
    delete:
      tags:
      - guests
      summary: Delete a guests membership
      operationId: deleteGuestsMembership
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: membershipId
        in: path
        description: The Id of the membership record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResult'
  /roles:
    get:
      tags:
      - guests
      summary: Retrieve a list of Roles
      operationId: getRoles
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/roles'
  /guestStatuses:
    get:
      tags:
      - guest status
      summary: Retrieve a list of guest statuses
      operationId: getGuestStatuses
      parameters:
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestStatus'
  /guestTypes:
    get:
      tags:
      - guest types
      summary: Retrieve a list of guest statuses
      operationId: getGuestTypes
      parameters:
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestTypes'
  /groupAllotments:
    get:
      tags:
      - group allotments
      summary: Retrieve a list of group allotments
      description: "Due to agents being associated with multiple properties operating in different time zones, the modified dates for these records will be returned in UTC"
      operationId: getGroupAllotments
      parameters:
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: modifiedSince
        in: query
        description: Limit results to records created or modified since this date (property local time)
        required: false
        schema:
          type: string
          format: date-time
      - name: departureDate
        in: query
        description: Limit results to records departed since this date (property local time)
        required: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
              example:
              - groupAllotmentsLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/groupAllotmentsLite/example
              - groupAllotmentsBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/groupAllotmentsBasic/example
    put:
      tags:
      - group allotments
      summary: Update an existing group allotment
      operationId: updateGroupAllotments
      requestBody:
        $ref: '#/components/requestBodies/groupAllotments'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentsBasic'
    post:
      tags:
      - group allotments
      summary: Add a new group allotment
      operationId: addGroupAllotments
      requestBody:
        $ref: '#/components/requestBodies/groupAllotments'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentsBasic'
  /groupAllotments/{id}:
    get:
      tags:
      - group allotments
      summary: Retrieve a specific group allotment by Id
      operationId: getGroupAllotmentsById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
              example:
              - groupAllotmentsLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/groupAllotmentsLite/example
              - groupAllotmentsBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/groupAllotmentsBasic/example
  /groupAllotments/{id}/allotments:
    get:
      tags:
      - group allotments
      summary: Retrieve a list of group allotments; allotments by Id
      operationId: getGroupAllotmentsIdAllotments
      parameters:
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentsAllotments'
    post:
      tags:
      - group allotments
      summary: create an allotment against an existing group allotment
      operationId: createAnAllotment
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/categoryAllotment'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentDetails'
      deprecated: false
  /groupAllotments/{id}/allotments/{allotmentId}:
    put:
      tags:
      - group allotments
      summary: You can use this call to update an existing group allotment. The category allotment method cannot be used to change the category. It can only be used to adjust dates and the number allotted.
      operationId: updateGroupAllotmentsAllotments
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: allotmentId
        in: path
        description: The Id of the relevant Allotment
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/groupAllotmentCategoryAllotmentUpdates'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentsAllotments'
      deprecated: false
  /groupAllotments/{id}/groupOptions/{groupOptionId}:
    put:
      tags:
      - group allotments
      summary: You can use this call to update an existing group allotment. The category allotment method cannot be used to change the category. It can only be used to adjust dates and the number allotted.
      operationId: updateGroupAllotmentsAllotment
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: groupOptionId
        in: path
        description: The Id of the relevant group option id
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/groupAllotmentOptionPatch'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentsAllotments'
      deprecated: false
    patch:
      tags:
      - group allotments
      summary: You can use this call to update an existing group allotment options.<>
      operationId: updateGroupAllotmentsAllotmentOptions
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: groupOptionId
        in: path
        description: The Id of the relevant group option id
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/groupAllotmentOptionPatch'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentsAllotments'
      deprecated: false
  /groupAllotments/{id}/groupOptions/{groupOptionId}/allotments:
    post:
      tags:
      - group allotments
      summary: You can use this call to create a single allotment against a group allotment.
      operationId: CreateGroupAllotmentsAllotments
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: groupOptionId
        in: path
        description: The Id of the relevant group option id
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/groupAllotmentCategoryAllotmentCreation'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentsAllotments'
      deprecated: false
  /groupAllotments/{id}/groupOptions/{groupOptionId}/requirements:
    get:
      tags:
      - group allotments
      summary: get the requirement associated to a group allotment
      operationId: getRequirementsForAGroupAllotment
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: groupOptionId
        in: path
        description: The Id of the relevant group option id
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentRequirementArray'
      deprecated: false
    post:
      tags:
      - group allotments
      summary: You can use this call to create a single requirement against a group allotment.
      operationId: CreateGroupAllotmentsRequirement
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: groupOptionId
        in: path
        description: The Id of the relevant group option id
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/groupAllotmentRequirementCreation'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentRequirement'
      deprecated: false
  /groupAllotments/{id}/groupOptions/{groupOptionId}/requirements/{requirementId}:
    delete:
      tags:
      - group allotments
      summary: Remove a requirement from a group allotment
      operationId: removeRequirementToGroupAllotment
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: groupOptionId
        in: path
        description: The Id of the relevant group option id
        required: true
        schema:
          type: integer
          format: int32
      - name: requirementId
        in: path
        description: The Id of the relevant requirement
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
      deprecated: false
  /groupAllotments/{id}/groupOptions/{groupOptionId}/rates/assignments:
    get:
      tags:
      - group allotments
      summary: get the rates associated to a group allotment
      operationId: getGroupAllotmentsGroupOptionsRates
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: groupOptionId
        in: path
        description: The Id of the relevant group option id
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupAllotmentsGroupOptionsRates'
      deprecated: false
    put:
      tags:
      - group allotments
      summary: update the rates associated to a group allotment
      operationId: putGroupAllotmentsGroupOptionsRates
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: groupOptionId
        in: path
        description: The Id of the relevant group option id
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/groupAllotmentsGroupOptionsRates'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupAllotmentsGroupOptionsRates'
      deprecated: false
    delete:
      tags:
      - group allotments
      summary: update the rates associated to a group allotment
      operationId: deleteGroupAllotmentsGroupOptionsRates
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: groupOptionId
        in: path
        description: The Id of the relevant group option id
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/groupAllotmentsGroupOptionsRates'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupAllotmentsGroupOptionsRates'
      deprecated: false
  /groupAllotments/allotments/search:
    post:
      tags:
      - group allotments
      summary: Perfrom an advanced search for companies
      operationId: postAllotmentsSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/allotmentSearch'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentsAllotments'
  /groupAllotments/{id}/companies:
    get:
      tags:
      - group allotments
      summary: Retrieve a list of allowed companies by group allotment Id
      operationId: getGroupAllotmentsIdCompanies
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentCompanies'
    post:
      tags:
      - group allotments
      summary: Add allowed companies to a group allotment
      operationId: postGroupAllotmentsIdCompanies
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/companyIds'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentCompanies'
    delete:
      tags:
      - group allotments
      summary: Add allowed companies to a group allotment
      operationId: deleteGroupAllotmentsIdCompanies
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentCompanies'
  /groupAllotments/{id}/travelAgents:
    get:
      tags:
      - group allotments
      summary: Retrieve a list of allowed travel agents by group allotment Id
      operationId: getGroupAllotmentsIdTravelAgents
      parameters:
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentTravelAgents'
    post:
      tags:
      - group allotments
      summary: Add a travel agent to a group allotment
      operationId: postGroupAllotmentsIdTravelAgents
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/groupAllotmentAgentRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentTravelAgents'
    delete:
      tags:
      - group allotments
      summary: Delete a travel agent from a group allotment
      operationId: deleteGroupAllotmentsIdTravelAgents
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/groupAllotmentAgentRequest'
      responses:
        "200":
          description: successful operation
  /groupAllotments/{id}/wholesalers:
    get:
      tags:
      - group allotments
      summary: Retrieve a list of allowed wholesalers by group allotment Id
      operationId: getGroupAllotmentsIdWholesalers
      parameters:
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentWholesalers'
    post:
      tags:
      - group allotments
      summary: Add a wholesaler to a group allotment
      operationId: postGroupAllotmentsIdWholesalers
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/groupAllotmentAgentRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupAllotmentTravelAgents'
    delete:
      tags:
      - group allotments
      summary: Delete a wholesaler from a group allotment
      operationId: deleteGroupAllotmentsIdWholesalers
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/groupAllotmentAgentRequest'
      responses:
        "200":
          description: successful operation
  /healthcheck:
    get:
      tags:
      - health check
      summary: Use the health check endpoint to check the API's health status
      operationId: getHealthCheck
      responses:
        "200":
          description: successful operation
      deprecated: false
  /idTypes:
    get:
      tags:
      - idTypes
      summary: Retrieve a list of idTypes
      operationId: getIdTypes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idTypes'
      deprecated: false
  /inventoryGroupings/Search:
    post:
      tags:
      - inventory grouping
      summary: Retrieve a list of inventory groupings
      operationId: postInventoryGroupingsSearch
      requestBody:
        $ref: '#/components/requestBodies/inventoryGroupingsSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inventoryGroupings'
      deprecated: false
  /invoices/{id}/cancel:
    post:
      tags:
      - invoices
      summary: Cancel an invoice for an account
      operationId: postInvoiceCancel
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/invoiceCancel'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResult'
      deprecated: false
  /invoices/create:
    post:
      tags:
      - invoices
      summary: Create an invoice for an account
      operationId: postInvoiceCreate
      requestBody:
        $ref: '#/components/requestBodies/invoiceCreate'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/invoice'
      deprecated: false
  /invoices/search:
    post:
      tags:
      - invoices
      summary: Retrieve a list of invoices
      operationId: postInvoiceSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/invoiceSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/invoice'
      deprecated: false
  /invoices/{id}:
    get:
      tags:
      - invoices
      summary: Retrieve an invoice by passing its id
      operationId: getInvoiceById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/invoice'
      deprecated: false
  /invoices/email:
    post:
      tags:
      - invoices
      summary: Email an existing invoice
      operationId: postEmailInvoice
      requestBody:
        $ref: '#/components/requestBodies/invoiceEmail'
      responses:
        "200":
          description: successful operation
      deprecated: false
  /labels/area:
    get:
      tags:
      - labels
      summary: Retrieve a list of labels applied to area user defined fields
      operationId: getAreaLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/labelArea'
      deprecated: false
  /labels/accounting:
    get:
      tags:
      - labels
      summary: Retrieve a list of labels applied to accounts
      operationId: getAccountingLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/labelAccounting'
      deprecated: false
  /labels/additional:
    get:
      tags:
      - labels
      summary: Retrieve a list of labels applied to additional tariff charge fields
      operationId: getAdditionalLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/labelAdditional'
      deprecated: false
  /labels/asset:
    get:
      tags:
      - labels
      summary: Retrieve a list of labels applied to asset user defined fields
      operationId: getAssetLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/labelAsset'
      deprecated: false
  /labels/category:
    get:
      tags:
      - labels
      summary: Retrieve a list of labels applied to the category user defined fields
      operationId: getCategoryLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/labelCategory'
  /labels/guest:
    get:
      tags:
      - labels
      summary: Retrieve a list of labels applied to guest user defined fields
      operationId: getGuestLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/labelGuest'
      deprecated: false
  /labels/ibe:
    get:
      tags:
      - labels
      summary: Retrieve a list of labels applied to the IBE (Internet Booking Engine) fields
      operationId: getIbeLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/labelIbe'
      deprecated: false
  /labels/property:
    get:
      tags:
      - labels
      summary: Retrieve a list of labels applied to a properties user defined fields
      operationId: getpropertyLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/labelProperty'
      deprecated: false
  /labels/reservation:
    get:
      tags:
      - labels
      summary: Retrieve a list of labels applied to a reservations user defined fields
      operationId: getReservationLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/labelReservation'
      deprecated: false
  /labels/system:
    get:
      tags:
      - labels
      summary: Retrieve a list of labels applied to system term e.g. Category = Room Type
      operationId: getSystemLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/labelSystem'
      deprecated: false
  /loyaltyLevels:
    get:
      tags:
      - loyalty
      summary: Retrieve a list of loyalty levels
      operationId: getLoyaltyLevels
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/loyaltyLevel'
      deprecated: false
  /cityMasters:
    get:
      tags:
      - master
      summary: Retrieve a list of city master records
      operationId: getCityMasters
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/master'
  /competitorMasters:
    get:
      tags:
      - master
      summary: Retrieve a list of competitor master records
      operationId: getCompetitorMasters
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/master'
  /industryMasters:
    get:
      tags:
      - master
      summary: Retrieve a list of industry master records
      operationId: getIndustryMasters
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/master'
  /businessSegments:
    get:
      tags:
      - master
      summary: Retrieve a list of business segment records
      operationId: getBusinessSegments
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/master'
  /franchises:
    get:
      tags:
      - master
      summary: Retrieve a list of franchise records
      operationId: getFranchises
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/franchises'
  /mealPlans:
    get:
      tags:
      - meal plan
      summary: Retrieve a list of meal plan records
      operationId: getMealPlans
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mealPlan'
  /mealPlanSchedules/search:
    post:
      tags:
      - meal plan
      summary: Pass res Id's to retrieve a guests meal plan schedules
      operationId: postmealPlanSchedulesSearch
      parameters:
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      requestBody:
        $ref: '#/components/requestBodies/mealPlanSchedulesSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mealPlanSchedulesSearchResponse'
  /membershipTypes:
    get:
      tags:
      - membership types
      summary: Retrieve a list of membership types
      operationId: getMembershipTypes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/membershipType'
  /marketTypes:
    get:
      tags:
      - market types
      summary: Retrieve a list of market types
      operationId: getMarketTypes
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/marketTypes'
  /marketSegments:
    get:
      tags:
      - market segments
      summary: Retrieve a list of Market Segments
      operationId: getMarketSegments
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/segment'
  /marketSegments/{id}:
    get:
      tags:
      - market segments
      summary: Retrieve a Market Segments by id
      operationId: getMarketSegmentsById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/segment'
  /marketSegments/{id}/subMarketSegments:
    get:
      tags:
      - market segments
      summary: Retrieve a list of Sub Market Segments by id
      operationId: getSubMarketSegmentsById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/segment'
  /mandatoryFields:
    get:
      tags:
      - mandatory fields
      summary: Retrieve the mandatory fields associated with your user profile for a client
      operationId: getMandatoryFields
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mandatoryField'
  /messagecentre/guestportal/acknowledgement:
    post:
      tags:
      - message centre
      summary: Create a notifcation against the guest portal within the RMS message centre
      requestBody:
        $ref: '#/components/requestBodies/messageCentreGuestPortalNotification'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/messageCentreGuestPortalNotificationResponse'
  /onlineAgents:
    get:
      tags:
      - agents
      summary: Retrieve a list of online agents
      operationId: getOnlineAgents
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      - name: modifiedSince
        in: query
        description: Limit results to records created or modified since this date (property local time)
        required: false
        schema:
          type: string
          format: date-time
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
      deprecated: false
  /origins:
    get:
      tags:
      - origins
      summary: Retrieve a list of origin records
      operationId: getOrigins
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/origin'
  /paymentModes:
    get:
      tags:
      - payment modes
      summary: Retrieve a list of payment modes
      operationId: getPaymentModes
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/paymentModes'
  /properties:
    get:
      tags:
      - properties
      summary: Retrieve a list of property details
      operationId: getProperties
      parameters:
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
              example:
              - propertiesLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/propertiesLite/example
              - propertiesBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/propertiesBasic/example
              - guestFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/propertiesFull/example
  /properties/creditCards/fees/search:
    post:
      tags:
      - properties
      summary: Retrieve the credit card fees associated with any RMS property
      operationId: getPropertiesCreditCardFees
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/creditCardFeeSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/creditCardFee'
      deprecated: false
  /properties/grouping:
    get:
      tags:
      - properties
      summary: Retrieve a list of grouping available to properties
      operationId: getPropertiesGrouping
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/grouping'
      deprecated: false
  /properties/{id}:
    get:
      tags:
      - properties
      summary: Retrieve a properties details by id
      operationId: getPropertiesById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
              example:
              - propertiesLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/propertiesLite/example
              - propertiesBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/propertiesBasic/example
              - guestFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/propertiesFull/example
  /properties/{id}/acknowledgementQuestions:
    get:
      tags:
      - properties
      summary: Retrieve the acknowledgement Question associated with a property
      operationId: getPropertiesAcknowledgementQuestions
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/covidAckowledgement'
      deprecated: false
  /properties/{id}/addOnType:
    get:
      tags:
      - properties
      summary: Retrieve the addons associated with a property
      operationId: getPropertiesAddons
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/addOnCategory'
      deprecated: false
  /properties/{id}/attributes:
    get:
      tags:
      - properties
      summary: Retrieve the attributes associated with a property
      operationId: getPropertiesAttributes
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/attributeFull'
  /properties/{id}/categories:
    get:
      tags:
      - properties
      summary: Retrieve the categories associated with a property
      operationId: getPropertiescategories
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              example:
              - categoryLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/categoryLite
              - categoryBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/categoryBasic
              - categoryFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/categoryFull
  /properties/{id}/creditCards:
    get:
      tags:
      - properties
      summary: Retrieve the credit cards associated with an RMS property
      operationId: getPropertyCreditCards
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/creditCard'
      deprecated: false
  /properties/{id}/creditCards/fees:
    get:
      tags:
      - properties
      summary: Retrieve the credit card fees associated with an RMS property
      operationId: getPropertyCreditCardFees
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/creditCardFee'
      deprecated: false
  /properties/{id}/currency:
    get:
      tags:
      - properties
      summary: Retrieve the currencies accepted for a property
      operationId: getPropertiesCurrencies
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currency'
      deprecated: false
  /properties/{id}/discounts:
    get:
      tags:
      - properties
      summary: Retrieve the discounts associated with a property
      operationId: getPropertiesDiscounts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/discountLite'
      deprecated: false
  /properties/{id}/ibe/policiesAndSettings:
    get:
      tags:
      - properties
      summary: Retrieve the ibe policies and settings associated with a property
      operationId: getPropertiesIbePoliciesAndSettings
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/propertiesIbePoliciesAndSettings'
      deprecated: false
  /properties/{id}/images:
    get:
      tags:
      - properties
      summary: Retrieve the image URL's associated with a property
      operationId: getPropertiesImages
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/image'
      deprecated: false
  /properties/{id}/posEndOfDay:
    get:
      tags:
      - properties
      summary: Retrieve the Pont Of Sale end of day date associated with a property
      operationId: getposEndOfDay
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/propertiesPosEndOfDay'
      deprecated: false
    put:
      tags:
      - properties
      summary: Update the Pont Of Sale end of day date associated with a property
      operationId: putposEndOfDay
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/propertiesPosEndOfDayUpdate'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/propertiesPosEndOfDay'
      deprecated: false
  /properties/{id}/eBanquetEndOfDay:
    get:
      tags:
      - properties
      summary: Retrieve the eBanquet end of day date associated with a property
      operationId: geteBanquetEndOfDay
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/propertiesEBanquetEndOfDay'
      deprecated: false
    put:
      tags:
      - properties
      summary: Update the eBanquet end of day date associated with a property
      operationId: puteBanquetEndOfDay
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/propertiesEBanquetEndOfDayUpdate'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/propertiesEBanquetEndOfDay'
      deprecated: false
  /properties/{id}/settings/accounting:
    get:
      tags:
      - properties
      summary: Retrieve the accounting settings associated with a property
      operationId: getPropertiesAccountingSettings
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/propertiesAccounting'
      deprecated: false
  /properties/{id}/ibe/additionals:
    get:
      tags:
      - properties
      summary: "Retrieve the additionals enabled with the RMS IBE (Internet Booking Engine) for a property e.g. Pets, adults, children etc"
      operationId: getIbeAdditionals
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ibeAdditional'
      deprecated: false
  /properties/{id}/ibe/addOnType:
    get:
      tags:
      - properties
      summary: "Retrieve the add-ons associated with the RMS IBE (Internet Booking Engine) for a property e.g. Roll Out Beds, Bicycles for hire etc"
      operationId: getIbeAddons
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/addOnTypeLite'
      deprecated: true
  /properties/{id}/ibe/bookingSources:
    get:
      tags:
      - properties
      summary: Retrieve the booking sources associated with the RMS IBE (Internet Booking Engine) for a property
      operationId: getIbeBookingSources
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/itemLite'
      deprecated: false
  /properties/{id}/ibe/creditCard:
    get:
      tags:
      - properties
      summary: Retrieve the credit cards associated with the RMS IBE (Internet Booking Engine) for a property
      operationId: getIbeCreditCards
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/creditCard'
      deprecated: false
  /properties/{id}/ibe/fees:
    get:
      tags:
      - properties
      summary: Retrieve the fee's associated with a reservation made via the RMS IBE (Internet Booking Engine) for a property
      operationId: getIbeFees
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ibeReservationFees'
      deprecated: false
  /properties/{id}/ibe/policies:
    get:
      tags:
      - properties
      summary: "Retrieve the policies, information and Descriptions associated with a property"
      operationId: getIbePolicies
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/policy'
      deprecated: false
  /properties/{id}/ibe/requirements:
    get:
      tags:
      - properties
      summary: Retrieve the requirements associated with the RMS IBE (Internet Booking Engine) for a property
      operationId: getIbeRequirements
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ibeRequirement'
      deprecated: false
  /properties/{id}/ibe/settings:
    get:
      tags:
      - properties
      summary: Retrieve the settings associated with the RMS IBE (Internet Booking Engine) for a property
      operationId: getIbeSettings
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ibeSetting'
      deprecated: false
  /properties/{id}/settings/payments:
    get:
      tags:
      - properties
      summary: Retrieve the payment gateway settings for a property
      operationId: getSettingsPayments
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/propertiesSettingsPayments'
      deprecated: false
  /rates:
    get:
      tags:
      - rates
      summary: Retrieve a list of rates
      operationId: getRateTypes
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: lite
          enum:
          - lite
          - full
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
              example:
              - ratesLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/rateTypeLite
              - ratesFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/rateTypeFull
      deprecated: false
  /rates/configurations/search:
    post:
      tags:
      - rates
      summary: Retrieve Rate Type Configuration
      description: rateId or agentId will be required. If only the agentId is supplied the response will include assigned rate types for the specified agentId.
      requestBody:
        $ref: '#/components/requestBodies/ratesConfigurationsSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ratesConfigurationsSearchResponse'
  /rates/{id}:
    get:
      tags:
      - rates
      summary: Retrieve a rates information
      operationId: getRateTypesById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: lite
          enum:
          - lite
          - full
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
              example:
              - ratesLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/rateTypeLite
              - ratesFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/rateTypeFull
      deprecated: false
  /rateElements:
    get:
      tags:
      - rates
      summary: Retrieve a list of rate elements
      operationId: getRateElements
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
      deprecated: false
  /rates/grouping:
    get:
      tags:
      - rates
      summary: Retrieve a list of grouping available to rates types
      operationId: getRatesGrouping
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/grouping'
      deprecated: false
  /rates/tables:
    get:
      tags:
      - rates
      summary: Retrieve a list of rate tables
      operationId: getRatesTables
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rateTable'
      deprecated: false
  /rates/tables/search:
    post:
      tags:
      - rates
      summary: Retrieve a list of rate tables
      operationId: postSearchRatesTables
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/rateTablesSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rateTable'
  /rates/additionals/search:
    post:
      tags:
      - rates
      summary: Retrieve a list of rate lookups
      description: Due to the nature of this call there are three posible responsese depending on the configuration of the additionas against the rate in RMS.
      requestBody:
        $ref: '#/components/requestBodies/rateTablesAdditionalsSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rateTableAddtionals'
  /rates/packages/search:
    post:
      tags:
      - rates
      summary: Retrieve a list of rate packages
      operationId: getRatesPackagesSearch
      requestBody:
        $ref: '#/components/requestBodies/ratePackagesSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rateTablePackage'
  /rates/periods:
    get:
      tags:
      - rates
      summary: Retrieve a list of rate periods
      operationId: getRatesPeriods
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ratePeriod'
      deprecated: false
  /rates/lookups/search:
    post:
      tags:
      - rates
      summary: Retrieve a list of rate lookups
      operationId: postSearchLookups
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/rateLookupsRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rateLookups'
  /rates/rateQuote:
    post:
      tags:
      - rates
      summary: Retrieve a price quote for a reservation
      requestBody:
        $ref: '#/components/requestBodies/quoteRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quoteResponse'
  /rates/rateQuote/quick:
    post:
      tags:
      - rates
      summary: Retrieve a price quote for a reservation. This mirrors the RMS Quick Quote Screen.
      requestBody:
        $ref: '#/components/requestBodies/quoteRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quoteResponse'
  /rates/rateAdjustment:
    post:
      tags:
      - rates
      summary: Make an adjustment to a rates value and restriction in RMS
      requestBody:
        $ref: '#/components/requestBodies/rateAdjustmentRequest'
      responses:
        "200":
          description: successful operation
  /rates/{id}/propertyRules/{propertyId}:
    get:
      tags:
      - rates
      summary: Retrieve Property Rate Rules
      operationId: getPropertyRules
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: propertyId
        in: path
        description: The ID of the Property
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/propertyRules'
      deprecated: false
  /rates/propertyRules/search:
    post:
      tags:
      - rates
      summary: Retrieve Property Rate Rules using advanced search
      operationId: postPropertyRules
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/propertyRulesSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/propertyRules'
      deprecated: false
  /reasons:
    get:
      tags:
      - reasons
      summary: Retrieve a list of reasons
      operationId: getReasons
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: reasonType
        in: query
        description: Only these statuses will be accepted
        required: false
        explode: false
        schema:
          type: string
          enum:
          - AssetAssociatedToChanged
          - CancelInvoice
          - ChangeOfArrivedRoom
          - ChangeOfChargeType
          - ClosedOpportunityStage
          - Discount
          - ExtraDoorKeyCut
          - FixReservation
          - Housekeeping
          - InActive
          - MaintenanceBooking
          - ManualOverride
          - PencilBooking
          - ReinstateRes
          - RejectImageUpload
          - ReservationCancelled
          - ReservationUpgrade
          - ResNoShow
          - ReverseExpensePayment
          - ReverseReceipt
          - ReverseRefund
          - RevertRes
          - TransferToAccount
          - VoidingTransaction
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reason'
  /reasons/{id}:
    get:
      tags:
      - reasons
      summary: Retrieve a reasons by id
      operationId: getReasonsById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: full successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reason'
  /relationships:
    get:
      tags:
      - relationships
      summary: Retrieve a list of relationships
      operationId: getRelationships
      responses:
        "200":
          description: full successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/relationships'
  /reports/areaIncomeSummary:
    post:
      tags:
      - reports
      summary: Build the Area Income Summary report
      description: |-
        Please note below Reservation Status values:
        - 0 = Unconfirmed
        - 1 = Confirmed
        - 2 = Arrived
        - 3 = Departed
        - 4 = Cancelled
        - 5 = Maintenance
        - 6 = Quote
        - 7 = StopSell
        - 8 = OwnerOccupied
        - 9 = NoShow
        - 10 = Pencil
      operationId: getTheAreaIncomeSummaryReport
      requestBody:
        $ref: '#/components/requestBodies/reportAreaIncomeSummaryBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportAreaIncomeSummaryResponse'
  /reports/auditTrail:
    post:
      tags:
      - reports
      summary: Build the Audit Trail report
      operationId: getTheAuditTrailReport
      requestBody:
        $ref: '#/components/requestBodies/reportsAuditTrail'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportsAuditTrailResponse'
  /reports/cash:
    post:
      tags:
      - reports
      summary: Build the Cash summary report
      operationId: getTheCashReport
      requestBody:
        $ref: '#/components/requestBodies/reportsCashChargeBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportsCashChargeResponse'
  /reports/charge:
    post:
      tags:
      - reports
      summary: Build the Charge summary report
      operationId: getTheChargeReport
      requestBody:
        $ref: '#/components/requestBodies/reportsCashChargeBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportsCashChargeResponse'
  /reports/debtorsLedger:
    post:
      tags:
      - reports
      summary: Build the Debtors Ledger report
      operationId: getTheDebtorsLedgerReport
      requestBody:
        $ref: '#/components/requestBodies/reportsDebtorsLedgerBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportsDebtorsLedgerResponse'
  /reports/expensesAreaSummary:
    post:
      tags:
      - reports
      summary: Build the Expense Summary by area report
      operationId: getTheExpensesAreaSummaryReport
      requestBody:
        $ref: '#/components/requestBodies/reportExpensesAreaSummaryBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportExpensesAreaSummaryResponse'
  /reports/flash:
    post:
      tags:
      - reports
      summary: Build the Flash Report
      operationId: postReportsFlash
      requestBody:
        $ref: '#/components/requestBodies/reportsFlash'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportsFlashResponse'
  /reports/historyForecast:
    post:
      tags:
      - reports
      summary: Build History and Forecast reporting
      operationId: gethistoryForecastReport
      requestBody:
        $ref: '#/components/requestBodies/reportHistoryForecast'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportHistoryForecast'
  /reports/npsResults:
    post:
      tags:
      - reports
      summary: Build the NPS Results report
      operationId: npsResultsReport
      requestBody:
        $ref: '#/components/requestBodies/reportNpnResultsBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportNpnResults'
  /reports/nightAudit:
    post:
      tags:
      - reports
      summary: Build the 1st page of the Night Audit report
      operationId: nightAuditReport
      requestBody:
        $ref: '#/components/requestBodies/reportNightAudit'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportNightAuditReport'
  /reports/occupancy:
    post:
      tags:
      - reports
      summary: Build occupancy reporting
      operationId: occupancyReport
      requestBody:
        $ref: '#/components/requestBodies/reportOccupancyBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportOccupancy'
  /reports/occupancyByArea:
    post:
      tags:
      - reports
      summary: Build occupancy reporting with a break down by area
      operationId: occupancyReportbyArea
      requestBody:
        $ref: '#/components/requestBodies/reportOccupancyByAreaBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportOccupancyByArea'
  /reports/occupancyRevenueComparison:
    post:
      tags:
      - reports
      summary: Build the occupancy revenue comparison report
      operationId: occupancyRevenueComparisonReport
      requestBody:
        $ref: '#/components/requestBodies/reportOccupancyRevenueComparisonBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportOccupancyRevenueComparison'
  /reports/pace:
    post:
      tags:
      - reports
      summary: Build the pace report
      operationId: paceReport
      requestBody:
        $ref: '#/components/requestBodies/reportPaceBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportPace'
  /reports/pathfinder:
    post:
      tags:
      - reports
      summary: Build the pathfinder report
      operationId: pathfinderReport
      requestBody:
        $ref: '#/components/requestBodies/reportParthfinderBuild'
      responses:
        "200":
          description: successful operation
  /reports/performanceII:
    post:
      tags:
      - reports
      summary: Build the performance II report
      operationId: performanceIIReport
      requestBody:
        $ref: '#/components/requestBodies/reportPerformanceIIBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reportPerformanceII'
  /reports/revenueAndExpense:
    post:
      tags:
      - reports
      summary: Build the revenue and expense report. This report is specific to Owner/Trust accounting properties in the United Arab Emirates
      description: NOTE - This report is specific to Owner/Trust accounting properties in the United Arab Emirates and reports on trust/owner income and expenses
      operationId: revenueAndExpenseReport
      requestBody:
        $ref: '#/components/requestBodies/reportRevenueAndExpenseBuild'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/revenueAndExpenseResponse'
  /reservations:
    put:
      tags:
      - reservations
      summary: Update an existing reservation
      description: "**Note**:<br> To update the guestId for a reservation, you will need to:<br>1.Add the new guest using: PUT /reservations/{id}/addGuest <br>2.Remove the guest being replaced using: PUT /reservations/{id}/removeGuest"
      operationId: updateReservation
      parameters:
      - name: ignoreMandatoryFieldWarnings
        in: query
        description: "When set to false this option will return any warnings prompted by blank mandatory fields in the RMS UI, restricting you from updating or creating a record"
        required: true
        schema:
          type: boolean
          default: false
      - name: preventRateRecalculation
        in: query
        description: When set to true the rate will not be recalculated.
        required: true
        schema:
          type: boolean
          default: false
      requestBody:
        $ref: '#/components/requestBodies/reservation'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationBasic'
    post:
      tags:
      - reservations
      summary: Add a new reservation.
      description: "All reservations will drop in with the status 'unconfirmed', you can use the call 'PUT/reservations/{id}/status' to update this status. <br> <br> To keep our API fast we have not exposed every field in RMS when creating or making changes to reservations. If a mandatory field warning is returned where the field is not exposed in this object you can use the parameter 'ignoreMandatoryFieldWarnings'. <br><br>Rate Override Example <br> If you have a $100 package on your reservation, this is the expected behavior - <br>If you pass $500 in the base rate override, you’d have $500 in the base rate and $100 in the package.<br>If you pass $500 in the total rate override, you’d have $400 in the base rate and $100 in the package."
      operationId: addReservation
      parameters:
      - name: ignoreMandatoryFieldWarnings
        in: query
        description: "When set to false this option will return any warnings prompted by blank mandatory fields in the RMS UI, restricting you from updating or creating a record"
        required: true
        schema:
          type: boolean
          default: false
      - name: useIbeDepositRules
        in: query
        description: When set to false the ibe deposit rules will not be used.
        required: false
        schema:
          type: boolean
          default: true
      requestBody:
        $ref: '#/components/requestBodies/reservation'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationBasic'
    patch:
      tags:
      - reservations
      summary: Update an array of existing reservations without the need to pass a whole object
      description: This call allows you to update any field within the reservation record and you only need to pass the fields and values you wish to update. This can be used instead of the PUT function where you would need to retrieve and pass a whole object to make changes.
      operationId: updateReservations
      parameters:
      - name: ignoreMandatoryFieldWarnings
        in: query
        description: "When set to false this option will return any warnings prompted by blank mandatory fields in the RMS UI, restricting you from updating or creating a record"
        required: true
        schema:
          type: boolean
          default: false
      - name: preventRateRecalculation
        in: query
        description: When set to true the rate will not be recalculated.
        required: true
        schema:
          type: boolean
          default: false
      requestBody:
        $ref: '#/components/requestBodies/reservationsPatch'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationFull'
  /reservations/search:
    post:
      tags:
      - reservations
      summary: Perform an advanced reservation search
      description: "When requesting room move headers, you will need to include the below parameters <br> includeRoomMoveHeaders: true <br> includeGroupMasterReservations: includeGroupMasters"
      operationId: postReservationSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/reservationSearch'
      responses:
        "200":
          description: Elements passed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationFull'
  /reservations/{id}:
    get:
      tags:
      - reservations
      summary: Retrieve a reservation by id
      operationId: getReservationById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
              example:
              - reservationLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationLite/example
              - reservationBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationBasic/example
              - reservationFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationFull/example
    patch:
      tags:
      - reservations
      summary: Update an existing reservation without the need to pass a whole object
      description: "This call allows you to update any field within the reservation record and you only need to pass the fields and values you wish to update. This can be used instead of the PUT function where you would need to retrieve and pass a whole object to make changes.<br><br>**Note**:<br> To update the guestId for a reservation, you will need to:<br>1.Add the new guest using: PUT /reservations/{id}/addGuest <br>2.Remove the guest being replaced using: PUT /reservations/{id}/removeGuest"
      operationId: updateAReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: ignoreMandatoryFieldWarnings
        in: query
        description: "When set to false this option will return any warnings prompted by blank mandatory fields in the RMS UI, restricting you from updating or creating a record"
        required: true
        schema:
          type: boolean
          default: false
      - name: preventRateRecalculation
        in: query
        description: When set to true the rate will not be recalculated.
        required: true
        schema:
          type: boolean
          default: false
      requestBody:
        $ref: '#/components/requestBodies/reservationPatch'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationFull'
  /reservations/group:
    post:
      tags:
      - reservations
      summary: Add a new group reservation
      operationId: addReservationGroup
      parameters:
      - name: useIbeDepositRules
        in: query
        description: When set to false the ibe deposit rules will not be used.
        required: false
        schema:
          type: boolean
          default: true
      requestBody:
        $ref: '#/components/requestBodies/reservationGroup'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationBasic'
      deprecated: false
  /reservations/group/quote:
    post:
      tags:
      - reservations
      summary: Add a new group reservation with the status set to quote
      operationId: addReservationGroupQuote
      requestBody:
        $ref: '#/components/requestBodies/reservationGroup'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationBasic'
      deprecated: false
  /reservations/{id}/addReservationToGroup/{resIdToAdd}:
    put:
      tags:
      - reservations
      summary: To add a reservation to a new/existing group
      operationId: addReservationToGroup
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: resIdToAdd
        in: path
        description: The Id of the reservation thats being added to new/existing group
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "201":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationFull'
      deprecated: false
  /reservations/quote:
    post:
      tags:
      - reservations
      summary: Add a new quote reservation
      operationId: addReservationQuote
      parameters:
      - name: ignoreMandatoryFieldWarnings
        in: query
        description: "When set to false this option will return any warnings prompted by blank mandatory fields in the RMS UI, restricting you from updating or creating a record"
        required: true
        schema:
          type: boolean
          default: false
      requestBody:
        $ref: '#/components/requestBodies/reservation'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationBasic'
      deprecated: false
  /reservations/{id}/commissions:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations commission
      operationId: getReservationsCommissions
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservationsIdCommissions'
  /reservations/pencil:
    post:
      tags:
      - reservations
      summary: Add a new pencil reservation
      description: "Pencil Reservations place a temporary hold on availability with minimal guest information and will automatically cancel once the expiry time is reached.<br><br>**Status Conversions**:<br><br>**Unconfirmed**– The reservation will first be updated to Unconfirmed, indicating that no pre-payment has been posted to the reservation account.<br>**Note**:Once a reservation is in Unconfirmed status, you can update key fields such as the number of adults/children, rate type, travel agent, and other required details. Charges and receipts can also be processed at this stage.<br><br>**Confirmed** – The reservation status will update to Confirmed when a receipt is created on the reservation account, signifying the guest’s verified intention to stay at the property."
      operationId: addReservationPencil
      requestBody:
        $ref: '#/components/requestBodies/reservationPencil'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationPencil'
      deprecated: false
  /reservations/group/pencil:
    post:
      tags:
      - reservations
      summary: Add a new group pencil reservation
      description: "Group Pencil Reservations call allows you to create a group (multi-reservation) in Pencil status, placing a temporary hold on availability with minimal guest information and will automatically cancel once the expiry time is reached.<br><br>**Status Conversions**:<br><br>Updating the status of the Group Pencil Reservation (groupReservationId) will automatically update the status of all associated sibling reservations.<br><br>**Unconfirmed**– The reservation will first be updated to Unconfirmed, indicating that no pre-payment has been posted to the reservation account.<br>**Note**:Once a reservation is in Unconfirmed status, you can update key fields such as the number of adults/children, rate type, travel agent, and other required details. Charges and receipts can also be processed at this stage.<br><br>**Confirmed** – The reservation status will update to Confirmed when a receipt is created on the reservation account, signifying the guest’s verified intention to stay at the property."
      operationId: addGroupReservationPencil
      requestBody:
        $ref: '#/components/requestBodies/reservationGroupPencil'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservationGroupPencilResponse'
      deprecated: false
  /reservations/maintenance:
    put:
      tags:
      - reservations
      summary: Update an existing maintenance reservation
      operationId: updateReservationMaintenance
      requestBody:
        $ref: '#/components/requestBodies/maintenance'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/maintenance'
      deprecated: false
    post:
      tags:
      - reservations
      summary: Add a new maintenance reservation
      operationId: addReservationMaintenance
      requestBody:
        $ref: '#/components/requestBodies/maintenance'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/maintenance'
      deprecated: false
  /reservations/maintenance/{id}:
    get:
      tags:
      - reservations
      summary: Retrieve a maintenance reservations information
      operationId: getReservationMaintenance
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/maintenance'
    delete:
      tags:
      - reservations
      summary: Remove a maintenance reservations
      operationId: deleteReservationMaintenance
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
  /reservations/{id}/status:
    put:
      tags:
      - reservations
      summary: Change a reservation's status
      operationId: putReservationStatus
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: preventRateRecalculation
        in: query
        description: When set to true the rate will not be recalculated.
        required: true
        schema:
          type: boolean
          default: false
      requestBody:
        $ref: '#/components/requestBodies/reservationStatus'
      responses:
        "201":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationBasic'
  /reservations/{id}/addGuest:
    put:
      tags:
      - reservations
      summary: Add a guest to a reservation
      operationId: addGuestToAnExistingReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: guestId
        in: query
        description: The Id of the relevant guest
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
      deprecated: false
  /reservations/{id}/removeGuest:
    put:
      tags:
      - reservations
      summary: Remove a guest from a reservation
      operationId: removeAGuestToAnExistingReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: guestId
        in: query
        description: The Id of the relevant guest
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
      deprecated: false
  /reservations/{id}/setPrimaryGuest:
    put:
      tags:
      - reservations
      summary: Set the primary guest on a reservation
      operationId: setThePrimaryGuestOnAnExistingReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: guestId
        in: query
        description: The Id of the relevant guest
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
      deprecated: false
  /reservations/autoAllocateAreas:
    post:
      tags:
      - reservations
      summary: Automatically allocate an area to a reservation
      operationId: autoAllocateAreas
      requestBody:
        $ref: '#/components/requestBodies/autoAllocateAreaRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/autoAllocateAreaResponse'
  /reservations/{id}/dailyRates/override:
    post:
      tags:
      - reservations
      summary: Override the daily rates for a reservation
      description: "Updates the base rate only and does not include package components or taxes.<br> Requires baseRate amount greater than '0'. <br> Daily rates for reservations with departed status cannot be updated.  <br> reasonId is optional and can be included when a reason is configured for 'reasonType': 'ManualOverride'. <br>To retrieve a full list of reasonIds, use GET /reasons."
      operationId: overrideReservationDailyRates
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/reservationsDailyRatesOverride'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dailyRateBasicArray'
  /reservations/{id}/discountOverride:
    put:
      tags:
      - reservations
      summary: Override an existing discount on a reservation
      operationId: overrideReservationDiscount
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: ignoreMandatoryFieldWarnings
        in: query
        description: "When set to false this option will return any warnings prompted by blank mandatory fields in the RMS UI, restricting you from updating or creating a record"
        required: true
        schema:
          type: boolean
          default: false
      requestBody:
        $ref: '#/components/requestBodies/reservationsDiscountOverride'
      responses:
        "200":
          description: Ok
  /reservations/discounts/search:
    post:
      tags:
      - reservations
      summary: Retrieve avaialble discounts for a reservation
      operationId: reservationDiscountsSearch
      parameters:
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: lite
          enum:
          - lite
          - full
      requestBody:
        $ref: '#/components/requestBodies/reservationsDiscountsSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservationsDiscountsSearchResponseFull'
  /reservations/{id}/document:
    post:
      tags:
      - reservations
      summary: Add a document to the correspondence tab on a reservation
      operationId: addADocumentToReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/reservationDocumentation'
      responses:
        "200":
          description: successful operation
      deprecated: false
  /reservations/{id}/packages:
    get:
      tags:
      - reservations
      summary: This will bring a breakdown of packages against a reservation
      operationId: getPackagesForAReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationPackageArray'
      deprecated: false
  /reservations/packages/search:
    post:
      tags:
      - reservations
      summary: This will return a breakdown of packages against a list of reservations
      description: There is a limit of 500 resIds per request
      operationId: postReservationsPackagesSearch
      requestBody:
        $ref: '#/components/requestBodies/reservationsPackagesSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservationsPackagesResponse'
      deprecated: false
  /reservations/{id}/requirement:
    post:
      tags:
      - reservations
      summary: Add a requirement to a reservation
      operationId: addRequirementToReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/reservationRequirement'
      responses:
        "200":
          description: successful operation
      deprecated: false
  /reservations/{id}/requirement/{requirementId}:
    delete:
      tags:
      - reservations
      summary: Remove a requirement to a reservation
      operationId: removeRequirementToReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: requirementId
        in: path
        description: The Id of the relevant requirement
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
      deprecated: false
  /reservations/{id}/requirements:
    get:
      tags:
      - reservations
      summary: get the requirement associated to a reservation
      operationId: getRequirementForAReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservationsRequirementGetResponse'
      deprecated: false
  /reservations/requirements/search:
    post:
      tags:
      - reservations
      summary: Pass an array of reservation Id's to retrieve the associated reservations actual account information
      operationId: searchReservationsForRequirements
      requestBody:
        $ref: '#/components/requestBodies/reservationArraySearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationRequirementArray'
  /reservations/arriving:
    get:
      tags:
      - reservations
      summary: "Retrieve a list of the reservations that you have arriving each day, this does not include reservations that have already arrived"
      operationId: getReservationArriving
      parameters:
      - name: areaId
        in: query
        description: The Id of the area to return
        required: false
        schema:
          type: integer
          format: int32
      - name: areaName
        in: query
        description: The name of the area to return
        required: false
        schema:
          type: string
      - name: catId
        in: query
        description: The Id of the category to return
        required: false
        schema:
          type: integer
          format: int32
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
              example:
              - reservationLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationLite/example
              - reservationBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationBasic/example
              - reservationFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationFull/example
  /reservations/departing:
    get:
      tags:
      - reservations
      summary: "Retrieve a list of all reservations that are leaving today, this will not include reservations that have already left"
      operationId: getReservationDeparting
      parameters:
      - name: areaId
        in: query
        description: The Id of the area to return
        required: false
        schema:
          type: integer
          format: int32
      - name: areaName
        in: query
        description: The name of the area to return
        required: false
        schema:
          type: string
      - name: catId
        in: query
        description: The Id of the category to return
        required: false
        schema:
          type: integer
          format: int32
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
              example:
              - reservationLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationLite/example
              - reservationBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationBasic/example
              - reservationFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationFull/example
  /reservations/inHouse:
    get:
      tags:
      - reservations
      summary: Retrieve a list of all reservations currently arrived
      description: This call returns reservations with the status arrived that have an arrival date <= 'today' and a departure date that is >= today.
      operationId: getReservationInHouse
      parameters:
      - name: areaId
        in: query
        description: The Id of the area to return
        required: false
        schema:
          type: integer
          format: int32
      - name: areaName
        in: query
        description: The name of the area to return
        required: false
        schema:
          type: string
      - name: catId
        in: query
        description: The Id of the category to return
        required: false
        schema:
          type: integer
          format: int32
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
              example:
              - reservationLite:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationLite/example
              - reservationBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationBasic/example
              - reservationFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/reservationFull/example
  /reservations/{id}/actualAccount:
    get:
      tags:
      - reservations
      summary: Retrieve a reservation’s financial information
      operationId: getReservationActualAccount
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: includeSecondary
        in: query
        description: When set to true this option will return an the secondary currency value
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actualAccountArray'
  /reservations/actualAccount/search:
    post:
      tags:
      - reservations
      summary: Pass an array of reservation Id's to retrieve the associated reservations actual account information
      description: "When the travel agent's commissionType is set to UseAgentCommission you will need to retrieve the commission amount from the endpoint travelAgent{id}/Commissions."
      operationId: searchReservationsForActualAccount
      parameters:
      - name: includeSecondary
        in: query
        description: When set to true this option will return an the secondary currency value
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        $ref: '#/components/requestBodies/reservationArraySearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actualAccountArray'
  /reservations/{id}/rateOnGroup:
    put:
      tags:
      - reservations
      summary: Assign tarif on master for groupMaster reservation
      operationId: updateRateOnGroup
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/reservationsRateOnGroup'
      responses:
        "200":
          description: successful operation
  /reservations/{id}/reservationAddOn:
    get:
      tags:
      - reservations
      summary: Retrieve a reservation add-on information
      operationId: getReservationReservationAddOn
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationAddOn'
    put:
      tags:
      - reservations
      summary: Add an add-on to an existing reservation
      operationId: updateAnAddOnAgainstAReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/reservationAddOn'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationAddOn'
    post:
      tags:
      - reservations
      summary: Add an add-on to an existing reservation
      operationId: addAnAddOnToAReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/reservationAddOn'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationAddOn'
  /reservations/{id}/removeReservationAddOn:
    put:
      tags:
      - reservations
      summary: Remove an add-on from an existing reservation
      operationId: removeAnAddOnFromAReservation
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: reservationAddOnId
        in: query
        description: The Id of the add on relationship with the reservation
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
  /reservations/{id}/auditTrail:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations audit information
      operationId: getReservationReservationAuditTrail
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationAuditTrail'
  /reservations/bedConfigurations/search:
    post:
      tags:
      - reservations
      summary: Retrieve the bed configuration for a list of reservations
      operationId: reservationsBedConfigurationsSearch
      requestBody:
        $ref: '#/components/requestBodies/reservationsBedConfigurationsSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservationsBedConfigurationsResponse'
  /reservations/{id}/bedConfiguration:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations bed configuration
      operationId: getReservationBedConfiguration
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/bedConfiguration'
  /reservations/{id}/billTo:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations account mapping information
      operationId: getReservationBillTo
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationBillToArray'
      deprecated: false
  /reservations/billTo/search:
    post:
      tags:
      - reservations
      summary: Pass an array of reservation Id's to retrieve the associated reservations account mapping information
      operationId: searchReservationsForBillToInformation
      requestBody:
        $ref: '#/components/requestBodies/reservationArraySearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationBillToArray'
  /reservations/{id}/correspondence:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations correspondence information
      operationId: getReservationCorrespondence
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/correspondence'
  /reservations/correspondence/search:
    post:
      tags:
      - reservations
      summary: Pass an array of reservation Id's to retrieve the associated reservations correspondence information
      operationId: searchReservationsForCorrespondenceInformation
      requestBody:
        $ref: '#/components/requestBodies/reservationArraySearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/correspondence'
  /reservations/{id}/existingToken:
    get:
      tags:
      - reservations
      summary: Identify if a reservation has a CC token associated with it
      operationId: getReservationExistingToken
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/existingToken'
  /reservations/{id}/guests:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations guest information
      operationId: getReservationGuests
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/guestBasic'
  /reservations/guestMovements/search:
    post:
      tags:
      - reservations
      summary: Retrieve a Reservations Guest Movements Advanced Search
      description: This endpoint provides two functionalities- <br> 1.Retrieve a list of all guests associated with a reservation.<br> 2.Search for reservations by primary and secondary guests.<br><br> You can specify the model type as either basic or full.
      operationId: postGuestMovementSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      requestBody:
        $ref: '#/components/requestBodies/guestMovementsSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
              example:
              - guestMovementBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/guestMovementBasic/example
              - guestMovementFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/guestMovementFull/example
  /reservations/{id}/guestMovement:
    get:
      tags:
      - reservations
      summary: Retrieve a Reservations Guest Movements
      operationId: getGuestsMovement
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
              example:
              - guestMovementBasic:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/guestMovementBasic/example
              - guestMovementFull:
                  $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/guestMovementFull/example
  /reservations/{id}/holds:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations hold information
      operationId: getReservationHolds
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationHold'
    put:
      tags:
      - reservations
      summary: Update a Hold record against a reservation
      operationId: putReservationHolds
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/reservationHold'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationHold'
    post:
      tags:
      - reservations
      summary: Create a Hold record against a reservation
      operationId: postReservationHolds
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/reservationHold'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationHold'
  /reservations/holds/search:
    post:
      tags:
      - reservations
      summary: Retrieve a the hold information with reservations
      operationId: postReservationHoldsSearch
      requestBody:
        $ref: '#/components/requestBodies/reservationArraySearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationHoldArray'
  /reservations/housekeeping/search:
    post:
      tags:
      - reservations
      summary: Retrieve housekeeping information with reservations
      operationId: postReservationHouskeepingsSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/reservationHousekeepingSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservationHousekeepingArray'
  /reservations/{id}/housekeeping:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations housekeeping information
      operationId: getReservationHousekeeping
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/housekeeping'
  /reservations/{id}/housekeeping/resetSchedule:
    post:
      tags:
      - reservations
      summary: to reset a reservations housekeeping schedule
      operationId: postReservationHousekeepingResetSchedule
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/resetHousekeepingRequest'
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
  /reservations/linens/search:
    post:
      tags:
      - reservations
      summary: Retrieve the linens configuration for a list of reservations
      operationId: reservationsLinensSearch
      requestBody:
        $ref: '#/components/requestBodies/reservationsLinensSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservationsLinensResponse'
  /reservations/{id}/linen:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations linen information
      operationId: getReservationLinen
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resLinen'
  /reservations/{id}/projectedAccount:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations projected account information
      description: "This call calculates projected revenue minus posted credits but excludes add-ons, transfers, and charge redirections.<br><br>For the full projected balance as displayed in RMS, use:<br>GET /reservations/{id}/projectedBalance"
      operationId: getReservationProjectedAccount
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/projectedAccount'
      deprecated: false
  /reservations/{id}/projectedBalance:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations projected balance
      description: "The Projected Balanace includes the Total Rate, Requirements, Add-Ons, and Transfers, while accounting for any Receipts or Credit Notes on the Reservation Account. This balance aligns with the Proforma Tax Invoice."
      operationId: getReservationProjectedBalance
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/projectedBalance'
      deprecated: false
  /reservations/{id}/dailyRates:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations daily rate information
      operationId: getReservationDailyRates
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dailyRate'
      deprecated: false
  /reservations/dailyRates/search:
    post:
      tags:
      - reservations
      summary: Retrieve the daily Rates associated with reservations
      description: Daily breakdown of sibling reservations will be returned when request is made using Res Master ID.<br>Res Master ID will not be included in response body.
      operationId: searchReservationsForDailyRates
      requestBody:
        $ref: '#/components/requestBodies/reservationArraySearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dailyRateBasicArray'
  /reservations/rateQuotes:
    post:
      tags:
      - reservations
      summary: Retrieve the rates breakdown for a list of reservations
      description: The list of reservation IDs is limited to a maximum of 15. <br> Res Master ID is not supported and may return discrepancies.
      operationId: postReservationsRatequotes
      requestBody:
        $ref: '#/components/requestBodies/reservationsRateQuotes'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservationsRateQuotesResponse'
  /reservations/{id}/dailyRevenue:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations daily revenue information
      operationId: getReservationDailyRevenue
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dailyRevenue'
      deprecated: false
  /reservations/dailyRevenue/search:
    post:
      tags:
      - reservations
      summary: Retrieve the daily revenue associated with reservations
      operationId: searchReservationsForDailyRevenue
      requestBody:
        $ref: '#/components/requestBodies/reservationArraySearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dailyRevenueArray'
  /reservations/{id}/regoAccess:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations registration access information
      operationId: getReservationRegoAccess
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/regoAccess'
    put:
      tags:
      - reservations
      summary: Update a reservations registration access information
      operationId: updateReservationRegistrationAccess
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/reservationRegoAccess'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/regoAccess'
    post:
      tags:
      - reservations
      summary: Create a reservations registration access information
      operationId: createReservationRegistrationAccess
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/reservationRegoAccess'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/regoAccess'
  /reservations/regoAccess/search:
    post:
      tags:
      - reservations
      summary: Perform and advanced search for reservations rego access
      operationId: searchReservationRegoAccess
      requestBody:
        $ref: '#/components/requestBodies/reservationArraySearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/regoAccessArrayResponse'
  /reservations/{id}/transfers:
    get:
      tags:
      - reservations
      summary: Retrieve a reservations transfer information
      operationId: getReservationTransfers
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transfer'
    put:
      tags:
      - reservations
      summary: Retrieve a reservations transfer information
      operationId: updateReservationTransfers
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/transfer'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transfer'
    post:
      tags:
      - reservations
      summary: Retrieve a reservations transfer information
      operationId: createReservationTransfers
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/transfer'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transfer'
    delete:
      tags:
      - reservations
      summary: Retrieve a reservations transfer information
      operationId: deleteReservationTransfers
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: TransferId
        in: query
        description: The Id of the relevant transfer record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
  /reservations/{id}/transferBalance:
    post:
      tags:
      - reservations
      summary: To transfer reservation balance to guest account
      operationId: transferBalance
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/transferBalance'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actualAccountBasic'
  /reservations/{id}/mealPlanSchedules:
    put:
      tags:
      - reservations
      summary: To upgrade meal plan schedules
      operationId: mealPlanSchedulesUpgrade
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/mealPlanSchedulesUpgrade'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mealPlanSchedulesSearchResponse'
  /reservationTypes:
    get:
      tags:
      - reservation types
      summary: Retrieve a list of reservation types
      operationId: getReservationTypes
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resType'
      deprecated: false
  /reservationTypes/{id}:
    get:
      tags:
      - reservation types
      summary: Retrieve a reservation type by id
      operationId: getReservationTypesById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resType'
      deprecated: false
  /reservationTypes/{id}/subResTypes/:
    get:
      tags:
      - reservation types
      summary: Retrieve a list of sub reservation types associated to a reservation type
      operationId: getSubReservationTypesById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resTypeSub'
      deprecated: false
  /reservations/warnings:
    post:
      tags:
      - reservations
      summary: Retrieve warnings related to a specific reservation
      description: This call is useful to retrieve RMS configuration that manage reservations and need to inform users about potential conflicts or issues that could affect the booking process.
      operationId: getReservationsWarnings
      requestBody:
        $ref: '#/components/requestBodies/reservation'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservationsWarnings'
  /restrictions:
    post:
      tags:
      - restrictions
      summary: Add restrictions
      operationId: postRestrictions
      requestBody:
        $ref: '#/components/requestBodies/restrictionsPost'
      responses:
        "200":
          description: successful operation
  /restrictions/search:
    post:
      tags:
      - restrictions
      summary: Perform an advanced restrictions search
      operationId: postRestrictionsSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/restrictionSearch'
      responses:
        "200":
          description: Elements passed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/restriction'
  /requirements/master:
    post:
      tags:
      - requirements
      summary: Create a new Requirement
      operationId: createARequirement
      requestBody:
        $ref: '#/components/requestBodies/requirementMasterCreation'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/requirementMasterCreation'
  /requirements/master/{id}:
    get:
      tags:
      - requirements
      summary: Retrieve a list of requirements by Id
      operationId: getRequirements
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/requirementMasterCreation'
    put:
      tags:
      - requirements
      summary: Update an existing Requirement
      operationId: updateARequirement
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/requirementMasterCreation'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/requirementMasterCreation'
  /requirements:
    get:
      tags:
      - requirements
      summary: Retrieve a list of all requirements
      operationId: getSearchRequirements
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/requirement'
      deprecated: false
  /requirements/{id}:
    get:
      tags:
      - requirements
      summary: Retrieve requirement by ID
      operationId: getRequirementsById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/requirement'
      deprecated: false
  /requirements/grouping:
    get:
      tags:
      - requirements
      summary: Retrieve a list of grouping available to requirements
      operationId: getRequirementsGrouping
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/grouping'
      deprecated: false
  /requirements/{id}/images:
    get:
      tags:
      - requirements
      summary: Retrieve the image URL's associated with a requirement
      operationId: getRequirementsImages
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/requirementImage'
      deprecated: false
  /requirements/{id}/validationDates:
    get:
      tags:
      - requirements
      summary: Retrieve a requirements availability validation rules
      operationId: getRequirementValidationDates
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/requirementValidationDates'
      deprecated: false
  /securityProfiles:
    get:
      tags:
      - security profiles
      summary: Retrieve a list of security profiles
      operationId: getsecurityProfile
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/securityProfile'
  /securityProfiles/{id}:
    get:
      tags:
      - security profiles
      summary: Retrieve a security profile by id
      operationId: getsecurityProfileById
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/securityProfile'
  /specialEvents/Search:
    post:
      tags:
      - special events
      summary: Retrieve a list of special events
      operationId: postSpecialEventsSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/specialEventsSearch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/specialEventsSearchResponse'
  /sundries:
    get:
      tags:
      - sundries
      summary: Retrieve a list of sundires
      operationId: getSundries
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sundry'
    post:
      tags:
      - sundries
      summary: Create a new sundry
      operationId: createSundry
      requestBody:
        $ref: '#/components/requestBodies/sundryCreation'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sundryCreation'
  /sundries/{id}:
    get:
      tags:
      - sundries
      summary: Retrieve a list of sundries by id
      operationId: getSundriesById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: full successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sundry'
    put:
      tags:
      - sundries
      summary: Update an exisiting sundry
      operationId: updateSundry
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/sundryCreation'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sundryCreation'
  /sundries/grouping:
    get:
      tags:
      - sundries
      summary: Retrieve a list of grouping available to sundries
      operationId: getSundriesGrouping
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/grouping'
      deprecated: false
  /titles:
    get:
      tags:
      - titles
      summary: Retrieve a list of titles
      operationId: getTitles
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/title'
      deprecated: false
  /traces:
    get:
      tags:
      - traces
      summary: Get List of Traces
      operationId: getTraces
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/traces'
    post:
      tags:
      - traces
      summary: Add a new trace
      operationId: postTraces
      requestBody:
        $ref: '#/components/requestBodies/tracesRequest'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/traces'
  /traces/{id}:
    put:
      tags:
      - traces
      summary: Update an existing trace
      operationId: putTraces
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/tracesRequest'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/traces'
    delete:
      tags:
      - traces
      summary: Delete an existing trace
      operationId: deleteTrace
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
      deprecated: false
  /traces/departments:
    get:
      tags:
      - traces
      summary: Retrieve a list of departments
      operationId: getTracesDepartments
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/departments'
      deprecated: false
  /traces/templates:
    get:
      tags:
      - traces
      summary: Retrieve a list of trace templates
      operationId: getTracesTemplates
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tracesTemplates'
      deprecated: false
    post:
      tags:
      - traces
      summary: Add a new trace
      operationId: postTracesTemplates
      requestBody:
        $ref: '#/components/requestBodies/tracesTemplatesRequest'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/traces'
  /traces/templates/{id}:
    put:
      tags:
      - traces
      summary: Update an existing traces template
      operationId: putTracesTemplates
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/tracesTemplatesRequest'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tracesTemplates'
  /transactions/search:
    post:
      tags:
      - transactions
      summary: Retrieve an advanced transaction search
      operationId: postTransactionSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/transactionSearch'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
  /transactions/allocations/search:
    post:
      tags:
      - transactions
      summary: Retrieve a receipts transaction allocation data
      description: "This endpoint is used to retrieve the allocation details of a receipt transaction.<br><br>**Notes**:<br>RMS automatically allocates receipts to charges based on the accounting date, prioritizing older charges before newer ones.<br>RMS users also have the option to manually allocate receipts to specific charges.<br>glCodeId: 1 refers to the suspense receipt. It identifies the posted receipt and represents the total amount received. To determine if there is any remaining credit, subtract the total of the allocated transaction amounts from the suspense receipt total.<br><br>**Parameters**:<br>transactionsId: The ID of the transaction of type 'receipt'.<br>destinationTransactionId: The ID of the transaction to which the receipt has been allocated.<br><br>To retrieve full transaction details, use the transactions/search endpoint."
      operationId: postTransactionsAllocationSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/transactionsAllocationsSearch'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionsAllocation'
  /transactions/{id}:
    get:
      tags:
      - transactions
      summary: Retrieve a list of transactions by id
      operationId: getTransactionsById
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: full successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
  /transactions/charge:
    post:
      tags:
      - transactions
      summary: Create a new charge
      description: "The amount posted to an account that has not yet been paid is a 'charge'; for example, if $100 bottle of wine is charged back to room, you will use POST/transactions/charge. This would create a $100 charge on the account, which means the amount owed on the account becomes -$100"
      operationId: addTransactionsCharge
      requestBody:
        $ref: '#/components/requestBodies/transactionCharge'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
  /transactions/charges:
    post:
      tags:
      - transactions
      summary: Post an array of charges
      operationId: addTransactionsCharges
      requestBody:
        $ref: '#/components/requestBodies/transactionCharges'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
  /transactions/{id}/comments:
    put:
      tags:
      - transactions
      summary: Update comments for a transaction
      operationId: updateTransactionsComments
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/transactionsComments'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResult'
  /transactions/creditNote:
    post:
      tags:
      - transactions
      summary: Create a new credit note
      operationId: addTransactionsCreditNote
      requestBody:
        $ref: '#/components/requestBodies/transactionCreditNote'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
  /transactions/giftCard:
    post:
      tags:
      - transactions
      summary: Redeem a guests gift card
      operationId: addTransactionsGiftCard
      requestBody:
        $ref: '#/components/requestBodies/transactionGuestCreditAndGiftCard'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
  /transactions/guestCredit:
    post:
      tags:
      - transactions
      summary: Redeem a guests credit
      operationId: addTransactionsGuestCredit
      requestBody:
        $ref: '#/components/requestBodies/transactionGuestCredit'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
  /transactions/guestCredits:
    post:
      tags:
      - transactions
      summary: Redeem an array of guests credit
      operationId: addTransactionsGuestCredits
      requestBody:
        $ref: '#/components/requestBodies/transactionGuestCredits'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionGuestCreditsResponse'
  /transactions/receipt:
    post:
      tags:
      - transactions
      summary: Create a new receipt
      description: This call should be used when payment is received to show that payment on an account<br><br>NOTE -<br> This can also be used to pay off A/R invoices by passing the “invoiceId” with the A/R invoice number<br> The receipt date cannot be less than the system accounting date
      operationId: addTransactionsReceipt
      requestBody:
        $ref: '#/components/requestBodies/transactionReceipt'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
  /transactions/refund:
    post:
      tags:
      - transactions
      summary: Process a refund
      description: "  This call is used when refunding payments to a customer. For the refund to process, the original account charge must first be voided to put the account in credit. <br> If refunding a credit card receipt that interacts with an integrated payment gateway, the following properties are required:<br> - accountId<br> - cardId<br> - amount<br> - receiptType: CreditCard<br> - source<br> - useRmsAccountingDateForPostingDate: true<br> - transactionReference<br> - assignedTransactionId<br> - allowOnlinePayment: true<br> <br> This call can also be used for RMSPay Refunds."
      operationId: addTransactionsRefund
      requestBody:
        $ref: '#/components/requestBodies/transactionRefund'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
  /transactions/reverseReceipt:
    post:
      tags:
      - transactions
      summary: Reverse a receipt
      description: This call is used when you are required to remove a reciept without wanting to void the original charge
      operationId: addTransactionsReverseReceipt
      requestBody:
        $ref: '#/components/requestBodies/transactionreverseReceipt'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
  /transactions/void:
    post:
      tags:
      - transactions
      summary: Mark a transaction as void
      description: "If the wrong account was charged and needs to be reversed, you will use POST /transactions/void; this will void the incorrect charge."
      operationId: addTransactionsVoid
      requestBody:
        $ref: '#/components/requestBodies/transactionVoid'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
      deprecated: false
  /transactions/voids:
    post:
      tags:
      - transactions
      summary: Mark an array of transactions as void
      description: "If more than one charge was posted to the wrong account and needs to be reversed, you will use POST /transactions/voids; this will void the incorrect charges."
      operationId: addTransactionsVoids
      requestBody:
        $ref: '#/components/requestBodies/transactionsVoids'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transactionFull'
      deprecated: false
  /travelAgents:
    get:
      tags:
      - agents
      summary: Retrieve a list of travel agents
      description: "Due to agents being associated with multiple properties operating in different time zones, the modified dates for these records will be returned in UTC"
      operationId: getTravelAgents
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: modifiedSince
        in: query
        description: Limit results to records created or modified since this date (property local time)
        required: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
      deprecated: false
    put:
      tags:
      - agents
      summary: Update an existing travel agent
      operationId: updateTravelAgent
      requestBody:
        $ref: '#/components/requestBodies/agentBasic'
      responses:
        "201":
          description: basic successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/agentBasic'
    post:
      tags:
      - agents
      summary: Add a new travel agent
      operationId: addTravelAgent
      requestBody:
        $ref: '#/components/requestBodies/agentBasic'
      responses:
        "201":
          description: basic successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/agentBasic'
  /travelAgents/{id}:
    get:
      tags:
      - agents
      summary: Retrieve a single Travel Agent
      operationId: getTravelAgent
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/agentBasic'
    patch:
      tags:
      - agents
      summary: Update an existing Travel Agent or Wholesaler without the need to pass a whole object
      operationId: patchTravelAgent
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/agentPatch'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/agentFull'
  /travelAgents/{id}/accountsReceivable:
    get:
      tags:
      - agents
      summary: Retrieve Accounts Receivable info associated with an Agent
      operationId: getAgentAccountsReceivable
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/creditHoldBasic'
      deprecated: false
    post:
      tags:
      - agents
      summary: Create Accounts Receivable info associated with an Agent
      operationId: postAgentAccountsReceivablearId
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/creditHoldBasic'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/creditHoldBasic'
      deprecated: false
  /travelAgents/{id}/accountsReceivable/{arId}:
    put:
      tags:
      - agents
      summary: Update Accounts Receivable info associated with an Agent
      operationId: putAgentAccountsReceivable
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: arId
        in: path
        description: The Id of the Accounts Receivable Record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/creditHoldBasic'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/creditHoldBasic'
      deprecated: false
  /travelAgents/{id}/contacts:
    get:
      tags:
      - agents
      summary: Retrieve a travel agents contacts
      operationId: getTravelAgentContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
    put:
      tags:
      - agents
      summary: Update a travel agents contacts
      operationId: updateTravelAgentContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/contact'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
    post:
      tags:
      - agents
      summary: Create a travel agent contact
      operationId: addTravelAgentContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/contact'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
  /travelAgents/{id}/notes:
    get:
      tags:
      - agents
      summary: Retrieve a Agent's notes
      operationId: getTravelAgentNotes
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notesResponse'
    post:
      tags:
      - agents
      summary: Add Agent notes
      operationId: postTravelAgentNotes
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/notes'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notesResponse'
  /travelAgents/{id}/notes/{noteId}:
    put:
      tags:
      - agents
      summary: Update a Travel Agent's note
      operationId: updateTravelAgentNotes
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      - name: noteId
        in: path
        description: The ID of the note
        required: true
        schema:
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/notes'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notesResponse'
  /dropoffLocations:
    get:
      tags:
      - transfers
      summary: Retrieve a list of dropoff locations
      operationId: getDropoffLocations
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transferType'
      deprecated: false
  /pickupLocations:
    get:
      tags:
      - transfers
      summary: Retrieve a list of pickup locations
      operationId: getpickupLocations
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transferType'
      deprecated: false
  /transportTypes:
    get:
      tags:
      - transfers
      summary: Retrieve a list of transport types
      operationId: getTransportTypes
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transferType'
      deprecated: false
  /users/search:
    post:
      tags:
      - users
      summary: Perfrom an advanced user search
      operationId: postUserSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/userSearch'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/userProfile'
  /users/{id}:
    get:
      tags:
      - users
      summary: Retrieve a users profile information by id
      operationId: GetAUsersProfileInfoById
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/userProfile'
      deprecated: false
  /users/partnerUserId:
    get:
      tags:
      - users
      summary: Retrieve the partner's user id
      operationId: GetPartnerUserId
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemLiteUser'
              example:
                id: 2
                name: RMS Test Public Agent
      deprecated: false
  /users/securityProfiles/search:
    post:
      tags:
      - users
      summary: Perform an advanced user security profile search
      operationId: postUserSecurityProfileSearch
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/userSecurityProfileSearch'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/userSecurityProfile'
  /users/{id}/securityProfiles:
    get:
      tags:
      - users
      summary: Retrieve a users security profile information by id
      operationId: GetAUsersSecurityProfileInfoById
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/userSecurityProfile'
      deprecated: false
  /users/{id}/auditTrail:
    get:
      tags:
      - users
      summary: Retrieve a users audit Trail information by id
      operationId: GetAUsersAuditTrailInfoById
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/userAuditTrail'
      deprecated: false
  /VIPCodes:
    get:
      tags:
      - VIP codes
      summary: Retrieve a list of VIP Codes
      operationId: getVIPCodes
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VIPcodes'
  /webhooks:
    get:
      tags:
      - webhooks
      summary: Retrieve a list of your webhook subscriptions
      operationId: GetWebhookSubsciptions
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: propertyId
        in: query
        description: Only records referencing this property ID will be returned
        required: true
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/webhookSubscriptionResponse'
      deprecated: false
    post:
      tags:
      - webhooks
      summary: Subscribe to a specific event
      description: "**Endpoint Requirements**:<br>Standard ports only<br>HTTPS onlyPublicly accessible URL<br>A 200 OK response is expected to confirm successful receipt of the notification. If a failure response is returned, the system will not retry the notification.<br><br>**Information**:<br> -Webhook events are not triggered in the training database.<br>-In multi-property databases, rmsClientId represents the parent ID.<br>-For guest webhooks, use propertyId: 0 unless the guest record is explicitly assigned to a specific property. By default, guest records are shared across all properties in an enterprise (multi-property) database.<br>-For accountBalanceModification webhooks, a valid propertyId must be specified (e.g., propertyId: 1). Events will not trigger if propertyId is set to 0.<br>-Headers:You can define custom key-value pairs for headers. If set on a subscription, these custom headers will override the default Basic Auth header (which uses the agent ID and password encoded in Base64).<br><br>Refer to the webhook subscription schema for supported event types, including:<br>Reservations<br>Guests<br>Group Allotments<br>Area cleanStatus<br>...and more"
      operationId: postWebhookSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_body'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhookSubscriptionResponse'
      deprecated: false
  /webhooks/{id}:
    put:
      tags:
      - webhooks
      summary: Update an existing webhook subscription
      operationId: putWebhookSubscriptions
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/webhookSubscription'
      responses:
        "200":
          description: Elements to pass
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/webhookSubscriptionResponse'
      deprecated: false
    delete:
      tags:
      - webhooks
      summary: Delete an existing webhook subscription
      operationId: postWebhookReservationRoomMoves
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
      deprecated: false
  /wholesalers:
    get:
      tags:
      - agents
      summary: Retrieve a list of wholesalers
      description: "Due to agents being associated with multiple properties operating in different time zones, the modified dates for these records will be returned in UTC"
      operationId: getWholesalers
      parameters:
      - name: limit
        in: query
        description: Limit the results to this number of records
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: modelType
        in: query
        description: Only these fields will be returned
        required: false
        explode: false
        schema:
          type: string
          default: basic
          enum:
          - basic
          - lite
          - full
      - name: offset
        in: query
        description: The number of records to skip before returning results
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: modifiedSince
        in: query
        description: Limit results to records created or modified since this date (property local time)
        required: false
        schema:
          type: string
          format: date-time
      - name: sort
        in: query
        description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
      deprecated: false
    put:
      tags:
      - agents
      summary: Update an existing wholesaler
      operationId: updateWholesaler
      requestBody:
        $ref: '#/components/requestBodies/agentBasic'
      responses:
        "201":
          description: basic successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/agentBasic'
    post:
      tags:
      - agents
      summary: Add a new wholesaler
      operationId: addWholesaler
      requestBody:
        $ref: '#/components/requestBodies/agentBasic'
      responses:
        "201":
          description: basic successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/agentBasic'
  /wholesalers/{id}/contacts:
    get:
      tags:
      - agents
      summary: Retrieve a wholesalers contacts
      operationId: getWholesalersContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
    put:
      tags:
      - agents
      summary: Update a wholesaler contacts
      operationId: updateWholesalersContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/contact'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
    post:
      tags:
      - agents
      summary: Create a wholesaler contact
      operationId: addWholesalersContacts
      parameters:
      - name: id
        in: path
        description: The Id of the relevant record
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        $ref: '#/components/requestBodies/contact'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
components:
  schemas:
    authTokenRequest:
      required:
      - agentId
      - agentPassword
      - clientId
      - clientPassword
      - moduleType
      type: object
      properties:
        agentId:
          type: integer
          format: int32
        agentPassword:
          type: string
        clientId:
          type: integer
          description: Request the Live credentials for this from the client
          format: int32
        clientPassword:
          type: string
          description: "Request the Live credentials for this from the client, when requesting this use the wording 'Web Service password'"
        moduleType:
          type: array
          items:
            type: string
        useTrainingDatabase:
          type: boolean
          description: When set to 'True' this will allow you to connect to a copy of the customers data instead of their production data
          default: false
      description: Used:<br>POST /authToken
      example:
        agentId: 123
        agentPassword: xxx
        clientId: 345
        clientPassword: xxx
        useTrainingDatabase: false
        moduleType:
        - kiosk
    authTokenResponse:
      type: object
      properties:
        allowedProperties:
          type: array
          items:
            $ref: '#/components/schemas/allowedProperties'
        expiryDate:
          type: string
          format: date-time
        rmsClientId:
          type: integer
          format: int32
        token:
          type: string
      description: Used:<br>POST /authToken
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZ2lkIjoiMTUiLCJjbGlk
        expiryDate: 2024-07-13 00:14:42
        rmsClientId: 11281
        allowedProperties:
        - clientName: API Test Database
          clientId: 11281
        - clientName: Test property 1
          clientId: 11282
        - clientName: Test property 2
          clientId: 11283
        - clientName: Test property 3
          clientId: 11284
    allowedProperties:
      type: object
      properties:
        clientName:
          type: string
        clientId:
          type: integer
          format: int32
      description: Not Used
    accountsSearch:
      required:
      - accountClass
      type: object
      properties:
        accountClass:
          type: string
          enum:
          - POS
          - Cash
          - Company
          - TravelAgent
          - Guest
        accountEntityIds:
          type: array
          items:
            type: integer
        propertyIds:
          type: array
          items:
            type: integer
        ids:
          type: array
          items:
            type: integer
      description: Used:<br>POST /accountSearch
      example:
        accountClass: POS
        accountEntityIds:
        - 1
        - 3
        propertyIds:
        - 1
        ids: []
    accountsSearchResponse:
      type: object
      properties:
        id:
          type: integer
        accountClass:
          type: string
        propertyId:
          type: integer
        accountEntityId:
          type: integer
      example:
      - id: 379272
        accountClass: TravelAgent
        propertyId: 3
        accountEntityId: 3012
      - id: 379293
        accountClass: Guest
        propertyId: 5
        accountEntityId: 165544
    foreignExchangeRates:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        description:
          type: string
        exchangeRate:
          type: integer
          format: decimal
        propertyId:
          type: integer
          format: int32
        Symbol:
          type: string
      example:
        id: 1
        code: USD
        description: US Dollars
        exchangeRate: 1.5
        propertyId: 1
        Symbol: $
    accountTypes:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      description: Used:<br>GET /accountTypes
      example:
        id: 1
        name: test
    advancedSearchRequest:
      type: object
      properties:
        accountIds:
          type: array
          items:
            type: integer
            format: int32
        agentType:
          type: string
          enum:
          - travelAgent
          - onlineAgent
          - wholeSaler
          - groupAllotment
        createdFrom:
          type: string
          format: date-time
        createdTo:
          type: string
          format: date-time
        externalReferenceId:
          type: string
        iataNumber:
          type: string
        idFrom:
          type: integer
          format: int32
        idTo:
          type: integer
          format: int32
        ids:
          type: array
          items:
            type: integer
            format: int32
        modifiedFrom:
          type: string
          format: date-time
        modifiedTo:
          type: string
          format: date-time
        name:
          type: string
        userDefined1:
          maxLength: 20
          type: string
        userDefined2:
          maxLength: 50
          type: string
        userDefined3:
          maxLength: 50
          type: string
        userDefined4:
          maxLength: 50
          type: string
        userDefined5:
          maxLength: 50
          type: string
      description: Used:<br>POST /agents/search<br>POST /companies/search
      example:
        ids:
        - 12
        - 5
        - 702
        idFrom: 6
        idTo: 12
        accountIds:
        - 1242
        - 5985
        - 702
        agentType: onlineAgent
        createdFrom: 2018-09-25 00:00:00
        createdTo: 2018-09-27 00:00:00
        externalReferenceId: "65148"
        iataNumber: 6568GH
        modifiedFrom: 2018-09-25 00:00:00
        modifiedTo: 2018-09-27 00:00:00
        name: RMS Book Now
        userDefined1: String 20
        userDefined2: String 50
        userDefined3: String 50
        userDefined4: String 50
        userDefined5: String 50
    agentFull:
      type: object
      properties:
        abn:
          type: string
          description: Australian Business Number
        accountId:
          type: integer
          format: int32
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        agentType:
          type: string
          enum:
          - travelAgent
          - onlineAgent
          - wholeSaler
          - groupAllotment
        availableToFranchise:
          type: boolean
        billingNote:
          type: string
        bookingSourceId:
          type: integer
          format: int32
        chargeBack:
          type: boolean
        city:
          type: string
        cityMasterId:
          type: integer
          format: int32
        cityMasterName:
          type: string
        competitorMasterId:
          type: integer
          format: int32
        competitorMasterName:
          type: string
        countryId:
          type: string
        createdById:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        creditHold:
          type: boolean
        email:
          type: string
        externalRefId:
          type: string
        fax:
          type: string
        franchiseId:
          type: integer
          format: int32
        glCodeID:
          type: integer
          format: int32
        iataNumber:
          type: string
        id:
          type: integer
          format: int32
        inActive:
          type: boolean
        inactiveReason:
          type: string
        industryMasterId:
          type: integer
          format: int32
        marketSegmentId:
          type: integer
          format: int32
        modifiedById:
          type: integer
        modifiedDate:
          type: string
          format: date-time
        name:
          type: string
        notes:
          type: string
        parentId:
          type: integer
          format: int32
        phone:
          type: string
        postcode:
          type: string
        salesSource:
          type: string
        state:
          type: string
        subMarketSegmentId:
          type: integer
          format: int32
        tradingAs:
          type: string
        userDefined1:
          maxLength: 20
          type: string
        userDefined2:
          maxLength: 50
          type: string
        userDefined3:
          maxLength: 50
          type: string
        userDefined4:
          maxLength: 50
          type: string
        userDefined5:
          maxLength: 50
          type: string
      description: Return is based on ModelType.<br>Used:<br>GET /onlineAgents<br>GET /travelAgents<br>GET /wholesalers<br>
      example:
        abn: tr34937874937
        address1: "Level 4, 1230 Nepean Hwy"
        address2: ""
        address3: ""
        agentType: onlineAgent
        availableToFranchise: false
        billingNote: Always address bills to Bianca
        bookingSourceId: 7
        chargeBack: false
        city: Cheltenham
        cityMasterId: 1
        cityMasterName: Bangkok
        competitorMasterId: 2
        competitorMasterName: Need Group
        countryId: 2
        createdById: 45
        createdDate: 2018-09-13 00:00:00
        creditHold: false
        email: fake@test.com.au
        externalRefId: 4
        fax: 25654 54568
        franchiseId: 0
        glCodeID: 8
        iatnNumber: t895
        id: 3
        inactive: false
        inactiveReason: out of business
        industryMasterId: 4
        marketSegmentId: 3
        modifiedById: 6
        modifiedDate: 2018-09-27 00:00:00
        name: GuestLink
        notes: Office is on holidays in July
        parentId: 1
        phone: 03 1234 56987
        postcode: 2364a
        salesSource: Bega
        state: Vic
        subMarketSegmentId: 1
        tradingAs: Company
        userDefined1: string 20
        userDefined2: string 50
        userDefined3: string 50
        userDefined4: string 50
        userDefined5: string 50
    travelAgentsRatesAssignmentsFull:
      type: object
      properties:
        id:
          type: integer
          format: int32
        travelAgentsId:
          type: integer
          format: int32
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        rateId:
          type: integer
          format: int32
        rateName:
          type: string
        propertyId:
          type: integer
          format: int32
        propertyName:
          type: string
      example:
        id: 7
        travelAgentId: 1
        fromDate: 2024-08-02 00:00:00
        toDate: 2024-12-02 00:00:00
        rateId: 1
        rateName: BAR
        propertyId: 1
        propertyName: Test Property 1
    ratesAssignmentsBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        fromDate:
          type: string
          format: date-time
        propertyId:
          type: integer
          format: int32
        rateId:
          type: integer
          format: int32
        toDate:
          type: string
          format: date-time
      example:
        id: 7
        fromDate: 2024-08-02 00:00:00
        propertyId: 1
        rateId: 1
        toDate: 2024-12-02 00:00:00
    successResult:
      type: object
      properties:
        success:
          type: boolean
      example:
        success: true
    agentAllotments:
      type: object
      properties:
        name:
          type: string
        groupAllotmentId:
          type: integer
          format: int32
        groupOptionId:
          type: integer
          format: int32
        availableFor:
          type: array
          items:
            type: string
        daysBeforeRelease:
          type: integer
          format: int32
        releaseDate:
          type: string
          format: date-time
        releaseMethod:
          type: string
        discountId:
          type: integer
          format: int32
        discountReasonId:
          type: integer
          format: int32
        doNotSellAboveAllotment:
          type: boolean
        fromDate:
          type: string
          format: date-time
        groupStatus:
          type: string
        guaranteed:
          type: boolean
        setPermanently:
          type: boolean
        toDate:
          type: string
          format: date-time
        categoryAllotment:
          type: array
          items:
            $ref: '#/components/schemas/agentAllotments_categoryAllotment'
        allowUpgradesOutsideofAllotments:
          type: boolean
        holdOriginalSuiteTypeAvailabilityCount:
          type: boolean
        reportingADR:
          type: array
          items:
            $ref: '#/components/schemas/agentAllotments_reportingADR'
      example:
      - name: Travel Agent Allotments 05da6737-92ce-4db0-ac82-8a
        groupAllotmentId: 4175
        groupOptionId: 192
        availableFor:
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
        - Sunday
        daysBeforeRelease: 1
        releaseDate: 1900-01-01 00:00:00
        releaseMethod: DaysBefore
        discountId: 0
        discountReasonId: 0
        doNotSellAboveAllotment: false
        fromDate: 2026-08-25 00:00:00
        groupStatus: NotSet
        guaranteed: true
        setPermanently: false
        toDate: 2026-08-28 00:00:00
        categoryAllotment:
        - propertyId: 1
          categoryId: 20
          categoryName: Studio
          allotment: 1
          allotmentId: 99266
          fromDate: 2026-08-25 00:00:00
          toDate: 2026-08-28 00:00:00
        - propertyId: 1
          categoryId: 23
          categoryName: One Bedroom Suite
          allotment: 2
          allotmentId: 99283
          fromDate: 2026-08-25 00:00:00
          toDate: 2026-08-28 00:00:00
        allowUpgradesOutsideofAllotments: false
        holdOriginalSuiteTypeAvailabilityCount: false
        reportingADR:
        - categoryId: 20
          reportingADR: 0.0
        - categoryId: 23
          reportingADR: 0.0
    accountBasic:
      type: object
      properties:
        accountClass:
          type: string
        id:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
      description: "Used:<br>GET /agents/{id}/accounts<br>POST /agents/{id}/createPropertyAccount<br>GET /companies/{id}/accounts<br>POST /companies/{id}/createPropertyAccount<br>GET /guests/{id}/accounts<br>POST /guests/{id}/createPropertyAccount"
      example:
        accountClass: Guest
        id: 12345
        propertyId: 1
    agentsIdCommissions:
      type: object
      properties:
        agentId:
          type: integer
        sundryId:
          type: integer
        collectType:
          type: string
          enum:
          - property
          - agent
        commissionType:
          type: string
          enum:
          - UsePercentage
          - UseDailyDollarAmount
          - NoCommission
          - UseTotalDollarAmount
        commission:
          type: number
          format: float
        includeServiceChargesInCalculation:
          type: boolean
        commissions:
          type: array
          items:
            $ref: '#/components/schemas/agentsIdCommissions_commissions'
      example:
        agentId: 2673
        sundryId: 1373
        collectType: property
        commissionType: UsePercentage
        commission: 10.0
        includeServiceChargesInCalculation: true
        commissions:
        - sundryId: 1444
          commissionType: UseTotalDollarAmount
          propertyId: 1
          includeServiceChargesInCommissionCalculation: false
          rateCommissions:
          - rateTypeId: 1439
            rateName: My Derived Rate
            collectType: property
            commission: 5.0
            noGreaterThan: 500.0
            multiplier: 0.0
          - rateTypeId: 1433
            rateName: BAR USD
            collectType: property
            commission: 8.0
            noGreaterThan: 500.0
            multiplier: 0.0
    travelAgentRateBasic:
      type: object
      properties:
        countryId:
          type: integer
          format: int32
        fromDate:
          type: string
          format: date-time
        propertyId:
          type: integer
          format: int32
        propertyName:
          type: string
        rateId:
          type: integer
          format: int32
        rateName:
          type: string
        toDate:
          type: string
          format: date-time
        town:
          type: string
      description: "Used:<br>GET /agents/{id}/rates<br>"
      example:
        countryId: 7
        fromDate: 2018-08-02 00:00:00
        propertyId: 1
        propertyName: Property 1
        rateId: 1
        rateName: BAR
        toDate: 2019-12-02 00:00:00
        town: Melbourne
    auditTrailSearch:
      type: object
      properties:
        auditTrailIdFrom:
          type: integer
          format: int32
        auditTrailIdTo:
          type: integer
          format: int32
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        fieldModified:
          type: string
          enum:
          - Arrive
          - Depart
          - Category
          - Area
          - Adults
          - Children
          - Infants
          - RateType
          - Company
          - Status
          - Surname
          - Given
          - Mobile
          - Email
          - Email2
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        rateIds:
          type: array
          items:
            type: integer
            format: int32
        reservationIds:
          type: array
          items:
            type: integer
            format: int32
      description: Used:<br>POST /auditTrail/search<br>
      example:
        auditTrailIdFrom: 1
        auditTrailIdTo: 10
        dateFrom: 2020-09-27 00:00:00
        dateTo: 2020-09-28 00:00:00
        fieldModified: depart
        propertyIds:
        - 1
        - 2
        reservationIds:
        - 1234
        - 1546
    auditTrailBasic:
      type: object
      properties:
        createdDate:
          type: string
          format: date-time
        entityId:
          type: string
        fieldModified:
          type: string
        fieldModifiedId:
          type: integer
          format: int32
        guestId:
          type: integer
          format: int32
        holdId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        newValue:
          type: string
        oldValue:
          type: string
        reason:
          type: string
        reservationId:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        username:
          type: string
        view:
          type: string
      description: Used:<br>POST /auditTrail/search<br>POST /auditTrail/rates/search
      example:
        createdDate: 2020-09-01 00:00:00
        entityId: "5"
        fieldModified: room
        fieldModifiedId: "3"
        guestId: 55895
        holdId: 0
        id: 12435
        newValue: "3"
        oldValue: "12"
        reason: room upgrade
        reservationId: 12685
        userId: 8
        username: test
        view: Reservation
    auditTrailRateSearch:
      type: object
      properties:
        auditTrailIdFrom:
          type: integer
          format: int32
        auditTrailIdTo:
          type: integer
          format: int32
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        rateIds:
          type: array
          items:
            type: integer
            format: int32
        reservationIds:
          type: array
          items:
            type: integer
            format: int32
      description: Used:<br>POST /auditTrail/rates/search
      example:
        auditTrailIdFrom: 1610828
        auditTrailIdTo: 1610828
        dateFrom: 2023-03-13 00:00:00
        dateTo: 2023-03-14 00:00:00
        rateIds:
        - 2490
    areaLite:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        name:
          type: string
        propertyId:
          type: integer
          format: int32
      description: "Return is based on ModelType.<br>Used:<br>GET /areas<br>POST /areas/search<br>GET /areas/{id}<br>GET /categories/{id}/areas"
      example:
        categoryId: 3
        id: 7
        name: Room 3
        propertyId: 1
    areaBasic:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        cleanStatus:
          type: string
          format: enum - Vacant Dirty - Vacant Clean - Occupied - Vacant Inspect - Maintenance
        description:
          type: string
        extension:
          type: string
        guestDescription:
          type: string
        id:
          type: integer
          format: int32
        inactive:
          type: boolean
        interconnecting:
          type: boolean
        keyNo1:
          type: string
        keyNo2:
          type: string
        name:
          type: string
        maxOccupants:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
      description: "Return is based on ModelType.<br>Used:<br>GET /areas<br>POST /areas/search<br>GET /areas/{id}<br>GET /areas/{id}/interconnecting<br>GET /categories/{id}/areas"
      example:
        categoryId: 2
        cleanStatus: Clean
        description: "Spacious, bright and outward facing rooms measuring 300 m2 and totally refurbished. The room comes with a modern, fully equipped bathroom finished in top quality bronze coloured ceramics and an independent entrance."
        extension: "101"
        guestDescription: ""
        id: 7
        inactive: true
        interconnecting: true
        keyNo1: ""
        keyNo2: ""
        name: Room 3
        maxOccupants: 4
        propertyId: 1
    areaFull:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        areaStats:
          type: boolean
        categoryId:
          type: integer
          format: int32
        cleanStatus:
          type: string
        createdDate:
          type: string
          format: date-time
        customCleanStatusId:
          type: integer
          format: int32
        description:
          type: string
        extension:
          type: string
        externalRef:
          type: string
        glCodeId:
          type: integer
          format: int32
        googleMapLink:
          type: string
        guestDescription:
          type: string
        id:
          type: integer
          format: int32
        inactive:
          type: boolean
        interconnecting:
          type: boolean
        keyNumber1:
          type: string
        keyNumber2:
          type: string
        name:
          type: string
        maxOccupants:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        postcode:
          type: string
        printStatement:
          type: boolean
        propertyId:
          type: integer
          format: int32
        state:
          type: string
        statisticsStatus:
          type: boolean
        town:
          type: string
        userDefined1:
          maxLength: 100
          type: string
        userDefined2:
          maxLength: 20
          type: string
        userDefined3:
          maxLength: 20
          type: string
        userDefined4:
          maxLength: 20
          type: string
        userDefined5:
          maxLength: 20
          type: string
        userDefined6:
          maxLength: 20
          type: string
        userDefined7:
          maxLength: 20
          type: string
        userDefined8:
          maxLength: 20
          type: string
        userDefined9:
          maxLength: 20
          type: string
        userDefined10:
          maxLength: 20
          type: string
      description: "Return is based on ModelType.<br>Used:<br>GET /areas<br>POST /areas/search<br>GET /areas/{id}<br>GET /areas/{id}/interconnecting<br>GET /categories/{id}/areas"
      example:
        addressLine1: 16 Yonge Street
        addressLine2: West
        addressLine3: ' Northshier'
        areaStats: true
        categoryId: 2
        cleanStatus: Clean
        createdDate: 2018-09-27 00:00:00
        customCleanStatusId: 1
        description: "Spacious, bright and outward facing rooms measuring 300 m2 and totally refurbished. The room comes with a modern, fully equipped bathroom finished in top quality bronze coloured ceramics and an independent entrance."
        extension: "101"
        externalRef: Ie29374
        glCodeId: null
        googleMapLink: null
        guestDescription: null
        id: 7
        inactive: true
        interconnecting: true
        keyNo1: null
        keyNo2: null
        name: Room 3
        maxOccupants: 4
        modifiedDate: null
        postcode: "3015"
        printStatement: true
        propertyId: 1
        state: NSW
        statisticsStatus: true
        town: Atlanta
        userDefined1: string 100
        userDefined2: string 20
        userDefined3: string 20
        userDefined4: string 20
        userDefined5: string 20
        userDefined6: string 20
        userDefined7: string 20
        userDefined8: string 20
        userDefined9: string 20
        userDefined10: string 20
    areaCleanStatuses:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          enum:
          - vacantClean
          - vacantDirty
          - vacantInspect
          - occupied
          - maintenance
      description: Return a list of system default area clean statuses
      example:
      - id: 0
        name: vacantClean
      - id: 1
        name: vacantDirty
      - id: 2
        name: vacantInspect
      - id: 3
        name: occupied
      - id: 4
        name: maintenance
    areaCleanStatusesCustom:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dirty:
          type: boolean
      description: Return custom area clean statuses
      example:
      - id: 1
        name: status1
        dirty: false
      - id: 2
        name: status2
        dirty: false
      - id: 3
        name: status3
        dirty: true
    areaSearchRequest:
      type: object
      properties:
        areaNames:
          type: array
          items:
            type: string
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        cleanStatuses:
          type: array
          description: Valid Reservation Status
          items:
            type: string
            enum:
            - VacantClean
            - VacantDirty
            - Occupied
            - VacantInspect
            - Maintenance
        createdFrom:
          type: string
          format: date-time
        createdTo:
          type: string
          format: date-time
        extensions:
          type: array
          items:
            type: string
        externalReferences:
          type: array
          items:
            type: string
        guestDescriptions:
          type: array
          items:
            type: string
        idFrom:
          type: integer
          format: int32
        ids:
          type: array
          items:
            type: integer
            format: int32
        idTo:
          type: integer
          format: int32
        inactive:
          type: boolean
        interconnecting:
          type: boolean
        keyNumbers:
          type: array
          items:
            type: string
        modifiedFrom:
          type: string
          format: date-time
        modifiedTo:
          type: string
          format: date-time
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        reservationIds:
          type: array
          items:
            type: integer
            format: int32
      description: Used:<br>POST /areas/search
      example:
        areaNames:
        - 01 012
        - 01 013
        categoryIds:
        - 4
        - 5
        - 6
        cleanStatuses:
        - VacantClean
        - VacantDirty
        createdFrom: 2019-11-17 00:00:00
        createdTo: 2019-11-29 00:00:00
        extensions:
        - "101"
        - 302a
        externalReferences:
        - Cal
        - 10a
        guestDescriptions:
        - room 4
        - room 5
        idFrom: 10
        ids:
        - 4
        - 12
        - 15
        idTo: 20
        inactive: true
        interconnecting: false
        keyNumbers:
        - 11a
        - 12a
        modifiedFrom: 2020-11-29 00:00:00
        modifiedTo: 2020-12-02 00:00:00
        propertyIds:
        - 1
        - 3
        - 4
        reservationIds:
        - 10
        - 20
    attributeFull:
      type: object
      properties:
        associatedTo:
          type: string
        availableToIbe:
          type: boolean
          description: Only Applies to Property and category attributes
        id:
          type: integer
          format: int32
        name:
          type: string
      description: "Used:<br>GET /areas/{id}/attributes<br>GET /attributes<br>GET /categories/{id}/attributes<br>GET /properties/{id}/attributes<br>"
      example:
        associatedTo: Property
        availableToIbe: true
        id: 1
        name: Minibar
    ids:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
      description: Used:<br>POST /areas/requirements/search<br>POST /areas/attributes/search<br>POST /areas/configuration/search<br>POST /categories/requirements/search<br>
      example:
        ids:
        - 10
    attributeCollection:
      type: object
      properties:
        areaId:
          type: integer
          format: int32
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/attributes'
        categoryId:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
      description: Used:<br>POST /areas/attributes/search
      example:
        areaId: 5
        attributes:
        - id: 1
          name: Minibar
          associatedTo: Property
          availableToIbe: true
        categoryId: 1
        propertyId: 1
    attributes:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        associatedTo:
          type: string
        availableToIbe:
          type: boolean
          description: Only Applies to Property and category attributes
      description: Not Used
      example:
      - id: 1
        name: Minibar
        associatedTo: Property
        availableToIbe: true
      - id: 2
        name: Balcony
        associatedTo: Property
        availableToIbe: true
    areaConfiguration:
      type: object
      properties:
        childrenAllowed:
          type: boolean
        expiryDate:
          type: string
          format: date-time
        floor:
          type: string
        id:
          type: integer
          format: int32
        latitude:
          type: string
        length:
          type: number
        longitude:
          type: string
        name:
          type: string
        numberOfBedrooms:
          type: integer
          format: int32
        numberOfFullBaths:
          type: integer
          format: int32
        numberOfHalfBaths:
          type: integer
          format: int32
        numberOfShowers:
          type: integer
          format: int32
        petsAllowed:
          type: string
          enum:
          - notSet
          - "true"
          - "false"
        smokingAllowed:
          type: string
          enum:
          - notSet
          - "true"
          - "false"
        squareMeters:
          type: number
        width:
          type: number
      description: "Used:<br>GET /areas/{id}/configuration<br>GET /areas/configuration/search"
      example:
        childrenAllowed: Not Set
        expiryDate: 2020-10-27 00:00:00
        floor: B3
        id: 1
        latitude: "-37.840935"
        length: 20.0
        longitude: "144.946457"
        name: room 5
        numberOfBedrooms: 1
        numberOfFullBaths: 1
        numberOfHalfBaths: 0
        numberOfShowers: 1
        petsAllowed: true
        smokingAllowed: true
        squareMeters: 300
        width: 15.0
    grouping:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    areaDwelling:
      type: object
      properties:
        dwellingLength:
          type: array
          items:
            $ref: '#/components/schemas/dwellingLength'
        dwellingSlide:
          type: array
          items:
            $ref: '#/components/schemas/dwellingSlide'
        dwellingType:
          type: array
          items:
            $ref: '#/components/schemas/dwellingType'
      description: "Used:<br>GET /areas/{id}/dwellings"
      example:
        dwellingLength:
        - id: 3
          name: 6 ft
        - id: 4
          name: 7 ft
        dwellingSlide:
        - id: 7
          name: Double decker
        - id: 8
          name: Single decker
        dwellingType:
        - id: 1
          name: Passenger
        - id: 2
          name: Tourist
    dwellingLength:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 3
        name: 6 ft
    dwellingSlide:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: Passenger
    dwellingType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 7
        name: Double decker
    image:
      type: object
      properties:
        caption:
          type: string
        displayOrder:
          type: integer
          format: int32
        'url:':
          type: string
      example:
        caption: Bathroom
        displayOrder: 5
        url: https://images.rmscloud.com/rmsoimages/6880/rmswin/rmsonlineimages/00000090.jpg
    guestBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        birthday:
          type: string
          format: date-time
        companyId:
          type: integer
          format: int32
        countryId:
          type: integer
          format: int32
        edmFilter1OptOut:
          type: boolean
        edmFilter2OptOut:
          type: boolean
        edmFilter3OptOut:
          type: boolean
        email:
          type: string
        email2:
          type: string
        emailOptOut:
          type: boolean
        guestAccountId:
          type: integer
          format: int32
        guestGiven:
          type: string
        guestSurname:
          type: string
        languageSpokenId:
          type: integer
          format: int32
        marketingOptOut:
          type: boolean
        mobile:
          type: string
        nationalityId:
          type: integer
          format: int32
        notes:
          type: string
        passportId:
          type: string
        phoneAH:
          type: string
        phoneOptOut:
          type: boolean
        postcode:
          type: string
        privacyOptIn:
          type: boolean
        propertyId:
          type: integer
          format: int32
        smsOptOut:
          type: boolean
        state:
          type: string
        title:
          type: string
        town:
          type: string
        userDefined1:
          type: string
        userDefined2:
          type: string
        userDefined3:
          type: string
        userDefined4:
          type: string
        userDefined5:
          type: string
        userDefined6:
          type: string
        userDefined7:
          type: string
        userDefined8:
          type: string
        userDefined9:
          type: string
        userDefined10:
          type: string
        userDefined11:
          type: string
        userDefined12:
          type: string
        userDefined13:
          type: boolean
        userDefined14:
          type: boolean
        userDefined15:
          type: string
          format: date-time
        userDefined16:
          type: string
          format: date-time
      example:
        id: 0
        addressLine1: 1540 Amsterdam Avenue
        addressLine2: south
        addressLine3: Westingham
        birthday: 1999-07-24 00:00:00
        companyId: 1
        countryId: 1
        edmFilter1OptOut: true
        edmFilter2OptOut: true
        edmFilter3OptOut: true
        email: test@rms.com.au
        email2: test@rms.com.au
        emailOptOut: true
        guestAccountId: 1234
        guestGiven: Smithers
        guestSurname: Westingham
        languageSpoken: French Canadian
        marketingOptOut: true
        mobile: +614 586 659 77
        nationalityId: 7
        notes: This is a nice guest
        passportId: E1234569
        phoneAH: 03 1245 6564
        phoneOptOut: true
        postcode: 1234E
        privacyOptIn: true
        propertyId: "1"
        smsOptOut: true
        state: Victoria
        title: Dr.
        town: Diggers
        userDefined1: Computer IP
        userDefined2: Mums address
        userDefined3: Phone
        userDefined4: Spare keys
        userDefined5: Calanders
        userDefined6: Tissues
        userDefined7: Bottles
        userDefined8: Headsets
        userDefined9: Pancakes
        userDefined10: Lip balm
        userDefined11: breakfast
        userDefined12: stationary kit
        userDefined13: true
        userDefined14: false
        userDefined15: 2018-08-25 17:25:00
        userDefined16: 2018-09-25 13:25:00
    requirementBasic:
      type: object
      properties:
        amount:
          type: number
          format: decimal
        adultAmount:
          type: number
          format: decimal
        chargeDailyIncludeToDate:
          type: boolean
        chargeRequiredDaily:
          type: boolean
        childAmount:
          type: number
          format: decimal
        code:
          type: string
        feeType:
          type: string
          default: PerPeriodFee
          enum:
          - PerPeriodFee
          - PerPersonFee
        groupingId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        infantAmount:
          type: number
          format: decimal
        masterRequirementId:
          type: integer
          format: int32
        monitorRequirement:
          type: boolean
        name:
          type: string
        note:
          type: string
        quantity:
          type: integer
          format: int32
        requiredDaily:
          type: boolean
        showInHousekeepersReport:
          type: boolean
        sundryId:
          type: integer
          format: int32
        secondUnitPrice:
          type: number
          format: decimal
        secondAdultAmount:
          type: number
          format: decimal
        secondChildAmount:
          type: number
          format: decimal
        secondInfantAmount:
          type: number
          format: decimal
        unitPrice:
          type: number
          format: decimal
        useSundryAmount:
          type: boolean
      description: "Used:<br>GET /areas/{id}/requirements<br>GET /areas/requirements/search"
      example:
        amount: 30.0
        adultAmount: 0.0
        chargeDailyIncludeToDate: false
        chargeRequiredDaily: false
        childAmount: 0.0
        code: A129e
        feeType: PerPeriodFee
        groupingId: 2
        id: 7
        infantAmount: 0.0
        secondUnitPrice": 0.0
        secondAdultAmount": 16.0
        secondChildAmount": 12.0
        secondInfantAmount": 5.0
        masterRequirementId: 7
        monitorRequirement: false
        name: Chapagne & Chochlates
        note: Make sure you check inventory for stock
        quantity: 2
        requiredDaily: false
        showInHouseKeepersReport: true
        sundryId: 8
        unitPrice: 15.0
        useSundryAmount: true
    availabilityRateGridRequest:
      type: object
      properties:
        agentId:
          type: integer
          format: int32
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        dateFrom:
          type: string
          description: A maximum of 14 days worth of data can be returned
          format: date-time
        dateTo:
          type: string
          description: A maximum of 14 days worth of data can be returned
          format: date-string
        propertyId:
          type: integer
          format: int32
        rateIds:
          type: array
          items:
            type: integer
            format: int32
      description: Used:<br>POST /availabilityRateGrid
      example:
        agentId: 1
        categoryIds:
        - 4
        - 3
        dateFrom: 2019-11-17 00:00:00
        dateTo: 2019-11-29 00:00:00
        propertyId: 1
        rateIds:
        - 1380
        - 1159
    availabilityRateGridResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/availabilityRateCategory'
      description: Used:<br>POST /availabilityRateGrid
      example:
        categories:
        - billingCategoryId: 0
          categoryId: 4
          name: Deluxe 004
          rates:
          - dayBreakdown:
            - availableAreas: 5
              closedOnArrival: false
              closedOnDeparture: false
              dailyRate: 5418.0
              maxStay: 0
              minStay: 0
              minStayOnArrival: 0
              theDate: 2023-08-15 00:00:00
              stopSell: false
            name: Testing Rate
            personBase: 0
            rateId: 1416
    availabilityRateCategory:
      type: object
      properties:
        billingCategoryId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        name:
          type: string
        rates:
          type: array
          items:
            $ref: '#/components/schemas/availabilityRateRate'
      description: Not Used.
    availabilityRateRate:
      type: object
      properties:
        dayBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/dayBreakdown'
        name:
          type: string
        personBase:
          type: integer
          format: int32
        rateId:
          type: integer
          format: int32
      description: Not Used.
    dayBreakdown:
      type: object
      properties:
        availableAreas:
          type: integer
          format: int32
        closedOnArrival:
          type: boolean
        closedOnDeparture:
          type: boolean
        dailyRate:
          type: number
          format: currency
        estimatedRate:
          type: boolean
        maxStay:
          type: integer
          format: int32
        minStay:
          type: integer
          format: int32
        minStayOnArrival:
          type: integer
          format: int32
        stopSell:
          type: boolean
        theDate:
          type: string
          format: date
      description: Used:<br>POST /availabilityRateGrid
      example:
        availableAreas: 5
        closedOnArrival: false
        closedOnDeparture: false
        dailyRate: 5418.0
        estimatedRate: false
        maxStay: 0
        minStay: 0
        minStayOnArrival: 0
        stopSell: false
        theDate: 2023-08-15 00:00:00
    rateGridRequest:
      required:
      - arrival
      - categoryIds
      - departure
      - rateIds
      type: object
      properties:
        adults:
          type: integer
        agentId:
          type: integer
          format: int32
        allotmentAssociationId:
          type: string
          enum:
          - NotSet
          - TravelAgent
          - Wholesaler
          - GroupAllotment
        arrival:
          type: string
          format: date-time
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        children:
          type: integer
          format: int32
        departure:
          type: string
          format: date-string
        groupAllotmentId:
          type: integer
          format: int32
        includeEstimatedRates:
          type: boolean
        includeHouseUseForAllotments:
          type: boolean
        includeZeroRates:
          type: boolean
        infants:
          type: integer
          format: int32
        rateIds:
          type: array
          items:
            type: integer
            format: int32
      description: Used:<br>POST /rates/grid
      example:
        adults: 2
        agentId: 0
        allotmentAssociationId: GroupAllotment
        arrival: 2023-08-15
        categoryIds:
        - 4
        children: 0
        departure: 2023-08-16
        groupAllotmentId: 2625
        includeEstimatedRates: false
        includeHouseUseForAllotments: true
        includeZeroRates: true
        infants: 0
        rateIds:
        - 1416
    availabilityGridRequest:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        dateFrom:
          type: string
          description: A maximum of 90 days worth of data can be returned
          format: date-time
        dateTo:
          type: string
          description: A maximum of 90 days worth of data can be returned
          format: date-time
        removeDirtyRoomsFromAvailabilityForToday:
          type: boolean
          description: Will remove any dirty areas from todays availability
        roomStatistics:
          type: string
          enum:
          - ignore
          - "true"
          - "false"
        availabilityFilter:
          type: string
          enum:
          - house
          - full
        agentId:
          type: integer
          format: int32
        allotmentId:
          type: integer
          format: int32
        allotmentAssociationId:
          type: string
          enum:
          - NotSet
          - TravelAgent
          - Wholesaler
      description: Used:<br>POST /availabilityGrid
    availabilityGridResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/availabilityCategory'
      description: Used:<br>POST /availabilityGrid
      example:
        categories:
        - availability:
          - count: 7
            theDate: 2021-11-05
          - count: 8
            theDate: 2021-11-06
          id: 4
          name: ""
        - availability:
          - count: 13
            theDate: 2021-11-05
          - count: 5
            theDate: 2021-11-06
          id: 5
          name: ""
    availabilityCategory:
      type: object
      properties:
        availability:
          type: array
          items:
            $ref: '#/components/schemas/availabilityDate'
        id:
          type: integer
          format: int32
        name:
          type: string
      description: Not Used.
    availabilityDate:
      type: object
      properties:
        count:
          type: integer
          format: int32
        theDate:
          type: string
          format: date
      description: Not Used.
    addOnAvailabilityRequest:
      type: object
      properties:
        addOnTypeIds:
          type: array
          items:
            type: integer
            format: int32
        dateFrom:
          type: string
          description: A maximum of 14 days worth of data can be returned
          format: date-time
        dateTo:
          type: string
          description: A maximum of 14 days worth of data can be returned
          format: date-string
      description: Used:<br>POST /availableAddOns
      example:
        addOnTypeIds:
        - 50
        - 51
        dateFrom: 2019-11-17 00:00:00
        dateTo: 2019-11-29 00:00:00
    addOnArea:
      type: object
      properties:
        addOnType:
          type: string
        addOnTypeId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        name:
          type: string
      description: Used:<br>POST /availableAddOns
      example:
        addOnType: Car Park
        addOnTypeId: 2
        id: 50
        name: Car Park
    availableAreaRequest:
      type: object
      properties:
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        dateFrom:
          type: string
          description: A maximum of 14 days worth of data can be returned
          format: date-time
        dateTo:
          type: string
          description: A maximum of 14 days worth of data can be returned
          format: date-string
        dwelling:
          $ref: '#/components/schemas/availableAreaRequest_dwelling'
        propertyId:
          type: integer
          format: int32
        useDefaultTimes:
          type: boolean
          description: "If passed in as True, the default category times will be used as the time portion of the dateFrom and dateTo values."
      description: Used:<br>POST /availableAreas<br>
      example:
        categoryIds:
        - 4
        - 3
        dateFrom: 2023-11-17 00:00:00
        dateTo: 2023-11-29 00:00:00
        dwelling:
          lengthId: 1
          slideId: 2
          typeId: 2
        propertyId: 0
        useDefaultTimes: true
    rateGridRequestFacility:
      type: object
      properties:
        adults:
          type: integer
          format: int32
        agentId:
          type: integer
          format: int32
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        children:
          type: integer
          format: int32
        dateFrom:
          type: string
          description: A maximum of 1 days worth of data can be returned
          format: date-time
        dateTo:
          type: string
          description: A maximum of 1 days worth of data can be returned
          format: date-string
        infants:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
      example:
        adults: 2
        agentId: 1
        categoryIds:
        - 9
        children: 0
        dateFrom: 2023-02-10 06:00:00
        dateTo: 2023-02-10 06:30:00
        infants: 0
        propertyId: 1
    rateGridFacility:
      type: object
      properties:
        timeIncrement:
          type: integer
          format: int32
        facilities:
          type: array
          items:
            $ref: '#/components/schemas/rateGridRateFacility'
      example:
        timeIncrement: 15
        facilities:
        - rateId: 1159
          rateName: "OTA Rate [Main]"
          categoryId: 9
          categoryName: Deluxe 009
          areas:
          - areaId: 36
            areaName: 01 036
            availability:
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
          - areaId: 37
            areaName: 01 037
            availability:
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
          - areaId: 107
            areaName: 01 107
            availability:
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
          - areaId: 109
            areaName: 01 109
            availability:
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
          - areaId: 110
            areaName: 01 110
            availability:
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
          - areaId: 111
            areaName: 01 111
            availability:
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 400
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
        - rateId: 1420
          rateName: Facility hourly
          categoryId: 9
          categoryName: Deluxe 009
          areas:
          - areaId: 36
            areaName: 01 036
            availability:
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
          - areaId: 37
            areaName: 01 037
            availability:
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
          - areaId: 107
            areaName: 01 107
            availability:
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
          - areaId: 109
            areaName: 01 109
            availability:
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
          - areaId: 110
            areaName: 01 110
            availability:
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
          - areaId: 111
            areaName: 01 111
            availability:
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:00:00
              dateTo: 2023-02-10 06:15:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:15:00
              dateTo: 2023-02-10 06:30:00
            - available: true
              rate: 2.5
              dateFrom: 2023-02-10 06:30:00
              dateTo: 2023-02-10 06:45:00
    rateGridRateFacility:
      type: object
      properties:
        rateId:
          type: integer
          format: int32
        rateName:
          type: string
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        areas:
          type: array
          items:
            $ref: '#/components/schemas/rateGridItemFacilityArea'
    rateGridItemFacilityArea:
      type: object
      properties:
        areaId:
          type: integer
          format: int32
        areaName:
          type: string
        availability:
          type: array
          items:
            $ref: '#/components/schemas/rateGridItemFacility'
    rateGridItemFacility:
      type: object
      properties:
        available:
          type: boolean
        rate:
          type: number
          format: currency
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
    rateGridARIPushResponse:
      type: object
      properties:
        areaId:
          type: string
          nullable: true
        clientId:
          type: integer
        categories:
          type: array
          items:
            $ref: '#/components/schemas/rateGridARIPushResponse_categories'
      example:
        areaId: null
        clientId: 11282
        categories:
        - categoryId: 1
          rates:
          - rateId: 1159
            personBase: 2
            dayBreakdown:
            - availableAreas: 0
              closedOnArrival: false
              closedOnDeparture: false
              dailyRate: 395.0
              dateFrom: 2024-06-29
              dateTo: 2024-06-29
              minStay: 0
              minStayOnArrival: 0
              maxStay: 0
              stopSell: false
            additionals:
              adults:
              - additionalCount: 1
                amount: 60.0
              - additionalCount: 2
                amount: 60.0
              children:
              - additionalCount: 1
                amount: 60.0
              - additionalCount: 2
                amount: 60.0
              infants:
              - additionalCount: 1
                amount: 60.0
              - additionalCount: 2
                amount: 60.0
              adultsBase:
                includeInBase: true
                personBase: 2
              childrenBase:
                includeInBase: false
                personBase: 0
              infantsBase:
                includeInBase: false
                personBase: 0
    rateGridARIPushResponseVersion2:
      type: object
      properties:
        areaId:
          type: integer
          nullable: true
        clientId:
          type: integer
        timestamp:
          type: string
          format: date-time
        categoryRates:
          type: array
          items:
            $ref: '#/components/schemas/rateGridARIPushResponseVersion2_categoryRates'
        additionals:
          type: array
          items:
            $ref: '#/components/schemas/rateGridARIPushResponseVersion2_additionals'
      example:
        areaId: null
        clientId: 11282
        timestamp: 2025-02-11 23:58:50Z
        categoryRates:
        - categoryId: 1
          rateId: 1447
          dayBreakdown:
          - personBase: 3
            availableAreas: 5
            closedOnArrival: false
            closedOnDeparture: false
            dailyRate: 333.0
            dateFrom: 2025-02-15
            dateTo: 2025-02-15
            minStay: 0
            minStayOnArrival: 0
            maxStay: 0
            stopSell: false
            additionalId: 1
          - personBase: 5
            availableAreas: 5
            closedOnArrival: false
            closedOnDeparture: false
            dailyRate: 320.0
            dateFrom: 2025-02-16
            dateTo: 2025-02-16
            minStay: 0
            minStayOnArrival: 0
            maxStay: 0
            stopSell: false
            additionalId: 0
          - personBase: 4
            availableAreas: 3
            closedOnArrival: false
            closedOnDeparture: false
            dailyRate: 200.0
            dateFrom: 2025-02-17
            dateTo: 2025-02-17
            minStay: 0
            minStayOnArrival: 0
            maxStay: 0
            stopSell: false
            additionalId: 2
          - personBase: 4
            availableAreas: 1
            closedOnArrival: false
            closedOnDeparture: false
            dailyRate: 200.0
            dateFrom: 2025-02-18
            dateTo: 2025-02-18
            minStay: 0
            minStayOnArrival: 0
            maxStay: 0
            stopSell: false
            additionalId: 2
          - personBase: 4
            availableAreas: 0
            closedOnArrival: false
            closedOnDeparture: false
            dailyRate: 200.0
            dateFrom: 2025-02-19
            dateTo: 2025-02-19
            minStay: 0
            minStayOnArrival: 0
            maxStay: 0
            stopSell: false
            additionalId: 2
        - categoryId: 2
          rateId: 1447
          dayBreakdown:
          - personBase: 3
            availableAreas: 1
            closedOnArrival: false
            closedOnDeparture: false
            dailyRate: 333.0
            dateFrom: 2025-02-15
            dateTo: 2025-02-19
            minStay: 0
            minStayOnArrival: 0
            maxStay: 0
            stopSell: false
            additionalId: 3
        additionals:
        - additionalId: 1
          adults:
          - additionalCount: 1
            amount: 3.33
          - additionalCount: 2
            amount: 3.34
          - additionalCount: 3
            amount: 3.35
          - additionalCount: 4
            amount: 3.36
          - additionalCount: 5
            amount: 3.37
          children:
          - additionalCount: 1
            amount: 1.11
          - additionalCount: 2
            amount: 1.12
          - additionalCount: 3
            amount: 1.13
          - additionalCount: 4
            amount: 1.14
          - additionalCount: 5
            amount: 1.15
          infants: []
          adultsBase:
            includeInBase: true
            personBase: 3
          childrenBase:
            includeInBase: false
            personBase: 0
          infantsBase: null
        - additionalId: 2
          adults:
          - additionalCount: 1
            amount: 3.0
          - additionalCount: 2
            amount: 6.0
          - additionalCount: 3
            amount: 9.0
          - additionalCount: 4
            amount: 12.0
          - additionalCount: 5
            amount: 15.0
          children:
          - additionalCount: 1
            amount: 2.0
          - additionalCount: 2
            amount: 4.0
          - additionalCount: 3
            amount: 6.0
          - additionalCount: 4
            amount: 8.0
          - additionalCount: 5
            amount: 10.0
          infants:
          - additionalCount: 1
            amount: 1.0
          - additionalCount: 2
            amount: 1.0
          - additionalCount: 3
            amount: 1.0
          - additionalCount: 4
            amount: 1.0
          - additionalCount: 5
            amount: 20.0
          adultsBase:
            includeInBase: true
            personBase: 4
          childrenBase:
            includeInBase: false
            personBase: 0
          infantsBase:
            includeInBase: false
            personBase: 0
        - additionalId: 3
          adults:
          - additionalCount: 1
            amount: 3.33
          - additionalCount: 2
            amount: 3.34
          - additionalCount: 3
            amount: 3.35
          - additionalCount: 4
            amount: 3.36
          - additionalCount: 5
            amount: 3.37
          children:
          - additionalCount: 1
            amount: 1.11
          - additionalCount: 2
            amount: 1.12
          - additionalCount: 3
            amount: 1.13
          - additionalCount: 4
            amount: 1.14
          - additionalCount: 5
            amount: 1.15
          infants: []
          adultsBase:
            includeInBase: true
            personBase: 3
          childrenBase:
            includeInBase: false
            personBase: 0
          infantsBase: null
    bookingSourceBasic:
      type: object
      properties:
        code:
          type: string
        id:
          type: integer
          format: int32
        inactive:
          type: boolean
        name:
          type: string
      description: "Used:<br>GET /bookingSources<br>GET /properties/{id}/ibe/bookingSources"
      example:
        code: 4 goh
        id: 1
        inactive: true
        name: Return Guest
    boomgatesHistory:
      required:
      - accessNumber
      - boomgateId
      - comment
      - theDate
      - valid
      type: object
      properties:
        accessNumber:
          type: string
        theDate:
          type: string
          format: date-time
        boomgateId:
          type: integer
        comment:
          type: string
        valid:
          type: boolean
      example:
        accessNumber: "632283"
        theDate: 2024-07-23 16:00:33
        boomgateId: 1
        comment: Gate
        valid: true
    regoAccess:
      type: object
      properties:
        id:
          type: integer
          format: int32
        accessNumber:
          type: string
        accessZone:
          type: string
        areaId:
          type: integer
          format: int32
        zoneId:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        expiryDate:
          type: string
          format: date-time
        modifiedDate:
          type: string
          format: date-time
        note:
          type: string
        regoNumber:
          type: string
        reservationId:
          type: integer
          format: int32
        status:
          type: string
          default: notSet
          enum:
          - notSet
          - in
          - out
      example:
        id: 383
        accessNumber: "5265"
        accessZone: All
        areaId: 95
        zoneId: 0
        createdDate: 2018-08-02 04:22:00
        expiryDate: 2018-09-25 17:25:00
        modifiedDate: 2018-09-05 13:25:00
        note: Car is Nice
        regoNumber: 698-IOU
        reservationId: 211897
        status: In
    zones:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: North Park
    regoAccessSearchRequest:
      type: object
      properties:
        expirationDateFrom:
          type: string
          format: date-time
        userType:
          type: string
          default: Reservation
          enum:
          - Reservation
          - AlternateUser
          - PassUser
      example:
        expirationDateFrom: 2019-01-16 00:00:00
        userType: AlternateUser
    regoAccessArrayResponse:
      type: object
      properties:
        reservationId:
          type: integer
          format: int32
        id:
          type: integer
        accessNumber:
          type: string
        accessZone:
          type: string
        areaId:
          type: integer
          format: int32
        arrivalDate:
          type: string
          format: date-time
        zoneId:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        expiryDate:
          type: string
          format: date-time
        modifiedDate:
          type: string
          format: date-time
        note:
          type: string
        regoNumber:
          type: string
        status:
          type: string
          default: notSet
          enum:
          - notSet
          - in
          - out
      example:
        reservationId: 163577
        regoAccess: null
        id: 383
        accessNumber: "5265"
        accessZone: All
        area_id: 34
        arrivalDate: 2018-09-22 14:00:00
        zoneId: 0
        createdDate: 2018-08-02 04:22:00
        expiryDate: 2018-09-25 17:25:00
        modifiedDate: 2018-09-05 13:25:00
        note: Car is Nice
        regoNumber: 698-IOU
        status: In
    cancellationPolicy:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int32
        makeCancellationNoteMandatory:
          type: boolean
        nonCancellationPeriodInHours:
          type: integer
          format: int32
        shortDescription:
          type: string
      description: Used:<br>POST /cancellationPolicies
      example:
        code: c21
        description: Coolangatta 21
        id: 1
        makeCancellationNoteMandatory: true
        nonCancellationPeriodInHours: 48
        shortDescription: Coolangatta the bestest place evs
    cancellationPoliciesRules:
      type: object
      properties:
        propertyId:
          type: integer
        description:
          type: string
        mandatoryCancellationNote:
          type: boolean
        voidRateCharges:
          type: boolean
        periodMethod:
          type: string
        rule1:
          $ref: '#/components/schemas/cancellationPoliciesRules_rule1'
        rule2:
          $ref: '#/components/schemas/cancellationPoliciesRules_rule1'
        rule3:
          $ref: '#/components/schemas/cancellationPoliciesRules_rule1'
        rule4:
          $ref: '#/components/schemas/cancellationPoliciesRules_rule1'
      description: Used:<br> GET /cancellationPoliciesRules
      example:
      - propertyId: 1
        description: Cancellation property1
        mandatoryCancellationNote: true
        voidRateCharges: true
        periodMethod: DaysFromArrival
        rule1:
          feeType: Sundry
          period: 15
          sundryId: 1431
          firstXNights: 0
          amount: 0.0
          percentage: 0.0
        rule2:
          feeType: FirstXNights
          period: 10
          sundryId: 0
          firstXNights: 1
          amount: 0.0
          percentage: 0.0
        rule3:
          feeType: AmountOrPercentage
          period: 5
          sundryId: 1357
          firstXNights: 0
          amount: 25.0
          percentage: 0.0
        rule4:
          feeType: AmountOrPercentage
          period: 0
          sundryId: 0
          firstXNights: 0
          amount: 0.0
          percentage: 100.0
      - propertyId: 0
        description: You can cancel half a day before. Cause so.
        mandatoryCancellationNote: false
        voidRateCharges: true
        periodMethod: HoursFromArrival
        rule1:
          feeType: FirstXNights
          period: 3
          sundryId: 0
          firstXNights: 1
          amount: 0.0
          percentage: 0.0
        rule2:
          feeType: FirstXNights
          period: 6
          sundryId: 0
          firstXNights: 3
          amount: 0.0
          percentage: 0.0
        rule3:
          feeType: AmountOrPercentage
          period: 9
          sundryId: 0
          firstXNights: 0
          amount: 50.0
          percentage: 0.0
        rule4:
          feeType: AmountOrPercentage
          period: 12
          sundryId: 0
          firstXNights: 0
          amount: 0.0
          percentage: 20.0
    categoryLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        propertyId:
          type: integer
          format: int32
      description: "Used:<br>GET /categories<br>GET /categories/{id}<br>GET /properties/{id}/categories"
      example:
        id: 1
        name: Queen Bedroom
        propertyId: 1
    categoryBasic:
      type: object
      properties:
        allowBookingByCategory:
          type: boolean
        availableToIbe:
          type: boolean
        categoryClass:
          type: string
        categoryTypeGroupingId:
          type: integer
          format: int32
        defaultArrivalTime:
          type: string
          format: time
        defaultDepartureTime:
          type: string
          format: time
        glCodeId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        inactive:
          type: boolean
        interconnecting:
          type: boolean
        longDescription:
          type: string
        name:
          type: string
        numberOfAreas:
          type: integer
          format: int32
        maxOccupantsPerCategory:
          type: integer
          format: int32
        maxOccupantsPerCategoryType:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
      description: "Used:<br>GET /categories<br>GET /categories/{id}<br>GET /properties/{id}/categories"
      example:
        allowBookingByCategory: true
        availableToIbe: true
        categoryClass: Accommodation
        categoryTypeGroupingId: 4
        defaultArrivalTime: 14:00:00
        defaultDepartureTime: 10:00:00
        glCodeId: 9
        id: 1
        inactive: false
        interconnecting: false
        longDescription: LUXURY WATER FRONT LIVING! With the finest of fixtures and fittings .....
        name: Queen Bedroom
        numberOfAreas: 35
        maxOccupantsPerCategory: 6
        maxOccupantsPerCategoryType: 32
        propertyId: 1
    categoryFull:
      type: object
      properties:
        allowBookingByCategory:
          type: boolean
        allowMultipleReservationsOverTheSameTime:
          type: boolean
        allowOverbooking:
          type: boolean
        availableToKiosk:
          type: boolean
        availableToIbe:
          type: boolean
          description: This setting determines the number of Rooms held back from availability to any connected Online Travel Agents within this Category. Holding back Rooms provides a contingency for avoiding multiple bookings being made online simultaneously for your last available Room. RMS recommends setting this to a minimum of 1. Where only one Room exists within the Category this figure will be ignored.
        billingCategoryId:
          type: integer
          format: int32
        categoryClass:
          type: string
        categoryManagerId:
          type: integer
          format: int32
        categoryTypeGroupingId:
          type: integer
          format: int32
        code:
          type: string
        code2:
          type: string
        code3:
          type: string
        dynamicPricingGroupingId:
          type: integer
          format: int32
        glCodeId:
          type: integer
          format: int32
        guestDescription:
          type: string
        headline:
          type: string
        id:
          type: integer
          format: int32
        inactive:
          type: boolean
        includeOnHouseKeepersReport:
          type: boolean
        interconnecting:
          type: boolean
        interconnectingAreaId:
          type: array
          items:
            type: integer
            format: int32
        inventoryGrouping:
          type: boolean
        longDescription:
          type: string
        maxOccupantsPerCategory:
          type: integer
          format: int32
        maxOccupantsPerCategoryType:
          type: integer
          format: int32
        minimumOccupantsPerRoom:
          type: integer
          format: int32
        minNightlyRate:
          type: number
          format: currency
        modifiedDate:
          type: string
          format: time
        name:
          type: string
        numberOfAreas:
          type: integer
          format: int32
        numberOfBedrooms:
          type: integer
          format: int32
        numberOfFullBaths:
          type: integer
          format: int32
        numberOfHalfBaths:
          type: integer
          format: int32
        numberOfOverbookingsAllowed:
          type: integer
          format: int32
        numberOfRoomsToHoldFromIBE:
          type: integer
          format: int32
        numberOfShowers:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
        rentalPerSqrMtr:
          type: integer
          format: int32
        userDefined1:
          maxLength: 500
          type: string
        userDefined2:
          maxLength: 500
          type: string
        userDefined3:
          maxLength: 500
          type: string
        userDefined4:
          maxLength: 500
          type: string
        userDefined5:
          maxLength: 500
          type: string
        userDefined6:
          maxLength: 500
          type: string
        userDefined7:
          maxLength: 500
          type: string
        userDefined8:
          type: string
        userDefined9:
          type: string
      description: "Used:<br>GET /categories<br>GET /categories/{id}<br>GET /properties/{id}/categories"
      example:
        allowBookingByCategory: true
        allowMultipleReservationsOverTheSameTime: true
        allowOverbooking: true
        availableToKiosk: true
        availableToIbe: true
        billingCategoryId: 0
        categoryClass: Accommodation
        categoryManagerId: 6
        categoryTypeGroupingId: 4
        code: 2dr
        code2: 99brd
        code3: tw25
        dynamicPricingGroupingId: 9
        glCodeId: 9
        guestDescription: Waterfront Room
        headline: Cheap room
        id: 1
        inactive: false
        includeOnHouseKeepersReport: false
        interconnecting: false
        inventoryGrouping: false
        longDescription: LUXURY WATER FRONT LIVING! With the finest of fixtures and fittings .....
        maxOccupantsPerCategory: 6
        maxOccupantsPerCategoryType: 32
        minimumOccupantsPerRoom: 2
        minNightlyRate: 35.26
        modifiedDate: 10:00:00
        name: Queen Bedroom
        numberOfAreas: 35
        numberOfBedrooms: 1
        numberOfFullBaths: 1
        numberOfHalfBaths: 0
        numberOfOverbookingsAllowed: 4
        numberOfRoomsToHoldFromIBE: 1
        numberOfShowers: 1
        propertyId: 1
        rentalPerSqrMtr: 354
        userDefined1: String 500
        userDefined2: String 500
        userDefined3: String 500
        userDefined4: String 500
        userDefined5: String 500
        userDefined6: String 500
        userDefined7: String 500
        userDefined8: String Max
        userDefined9: String Max
    categoryHousekeeping:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        housekeepingTasks:
          type: array
          items:
            $ref: '#/components/schemas/categoryHousekeeping_housekeepingTasks'
        bedConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/categoryHousekeeping_bedConfiguration'
        customAreaCleanStatus:
          type: array
          items:
            $ref: '#/components/schemas/categoryHousekeeping_customAreaCleanStatus'
      example:
      - categoryId: 10
        housekeepingTasks:
        - taskId: 1
          name: Pre Arrival Check
        - taskId: 2
          name: Departure
        - taskId: 3
          name: Supervisor Inspection
        bedConfiguration:
        - bedConfigurationId: 3
          name: King
          quantity: 1
        customAreaCleanStatuses:
        - id: 1
          name: Status 1
          minutes: 0
        - id: 2
          name: Status 2
          minutes: 30
        - id: 3
          name: Status 3
          minutes: 60
    discountLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: 10% Discount
    categoriesDwellingOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dwellingLength:
          type: array
          items:
            $ref: '#/components/schemas/dwellingLength'
        dwellingSlide:
          type: array
          items:
            $ref: '#/components/schemas/dwellingSlide'
        dwellingType:
          type: array
          items:
            $ref: '#/components/schemas/dwellingType'
      description: Not Used
      example:
        dwellingLength:
        - id: 2
          name: 20 ft
        dwellingSlide:
        - id: 3
          name: Driver and Passenger
        dwellingType:
        - id: 1
          name: Tent
        - id: 2
          name: Airstream
    categoryOnlineOptions:
      type: object
      properties:
        availableToIBE:
          type: boolean
          description: This setting determines the number of Rooms held back from availability to any connected Online Travel Agents within this Category. Holding back Rooms provides a contingency for avoiding multiple bookings being made online simultaneously for your last available Room. RMS recommends setting this to a minimum of 1. Where only one Room exists within the Category this figure will be ignored.
        headline:
          type: string
        id:
          type: integer
          format: int32
        minimumOccupantsPerRoom:
          type: integer
          format: int32
        numberOfBedrooms:
          type: integer
          format: int32
        numberOfFullBaths:
          type: integer
          format: int32
        numberOfHalfBaths:
          type: integer
          format: int32
        numberOfRoomsToHoldFromIBE:
          type: integer
          format: int32
        numberOfShowers:
          type: integer
          format: int32
      description: "Used:<br>GET /categories/{id}/onlineOptions"
      example:
        availableToIBE: true
        headline: Cheap room
        id: 5
        minimumOccupantsPerRoom: 2
        numberOfBedrooms: 1
        numberOfFullBaths: 1
        numberOfHalfBaths: 0
        numberOfRoomsToHoldFromIBE: 1
        numberOfShowers: 1
    taxes:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 3
        name: Exclusive 10% Tax
    requirementsByCategory:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/requirementLite'
      description: Used:<br>POST /categories/requirements/search
      example:
        categoryId: 5
        requirements:
        - amount: 30.0
          id: 7
          masterRequirementId: 7
          name: Chapagne & Chochlates
          quantity: 2
          requiredDaily: false
    requirementLite:
      type: object
      properties:
        amount:
          type: number
          format: decimal
        id:
          type: integer
          format: int32
        masterRequirementId:
          type: integer
          format: int32
        name:
          type: string
        quantity:
          type: integer
          format: int32
        requiredDaily:
          type: boolean
      example:
        amount: 30.0
        id: 7
        masterRequirementId: 7
        name: Chapagne & Chochlates
        quantity: 2
        requiredDaily: false
    companyLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      description: "Used:<br>GET /companies<br>GET /companies/{id}<br>"
      example:
        id: 78
        name: Mians
    companyBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        abn:
          type: string
          description: Australian Business Number
        acn:
          type: string
          description: Australian Company Number
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        averageIncome:
          type: number
          description: "This field is informational, any changes made will not be honoured"
          format: currency
        bookingSourceId:
          type: integer
          format: int32
        city:
          type: string
        cityMaster:
          type: string
        cityMasterId:
          type: integer
          format: int32
        code:
          type: string
        competitorMasterId:
          type: integer
          format: int32
        contact:
          type: string
        contactPosition:
          type: string
        countryid:
          type: integer
          format: int32
        creditHold:
          type: boolean
        creditLimit:
          type: number
          format: decimal
        email:
          type: string
        fax:
          type: string
        given:
          type: string
        inactive:
          type: boolean
        inactiveReason:
          type: string
        notes:
          type: string
        parentId:
          type: integer
          format: int32
        phone:
          type: string
        postcode:
          type: string
        reservationTypeId:
          type: integer
          format: int32
        sendArToHeadOffice:
          type: string
        state:
          type: string
        surname:
          type: string
        totalIncome:
          type: number
          description: "This field is informational, any changes made will not be honoured"
          format: currency
        tradingAs:
          type: string
        userDefined1:
          maxLength: 20
          type: string
        userDefined2:
          maxLength: 50
          type: string
        userDefined3:
          maxLength: 50
          type: string
        userDefined4:
          maxLength: 50
          type: string
        userDefined5:
          maxLength: 50
          type: string
        webAddress:
          type: string
      description: "Used:<br>GET /companies<br>GET /companies/{id}<br>"
      example:
        id: 78
        name: Mians
        abn: 123A 2596 5E89
        acn: 5986 9856 569 6
        address1: "25"
        address2: fake street
        address3: north
        address4: ftizfield
        averageIncome: "52000"
        bookingSourceId: 986
        cityMasterId: 235
        code: 12A
        competitorMasterId: 3
        contact: Wayne
        countryid: 2
        creditHold: true
        creditLimit: "986"
        email: fake@email.com.au
        fax: 03 4569 4569
        given: bob
        inactive: false
        inactiveReason: Old Account
        notes: This is a note
        parentId: 784
        phone: 03 5986 4875
        postcode: "0425"
        reservationTypeId: 45
        sendArToHeadOffice: true
        state: Victoria
        surname: hobbs
        title: Mr
        totalIncome: 23.56
        tradingAs: Melb Corp
        userDefined1: String 20
        userDefined2: String 50
        userDefined3: String 50
        userDefined4: String 50
        userDefined5: String 50
        webAddress: www.melbcorp.com
    companyFull:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        abn:
          type: string
          description: Australian Business Number
        acn:
          type: string
          description: Australian Company Number
        accountId:
          type: integer
          format: int32
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        averageIncome:
          type: number
          format: currency
        bookingSource:
          type: string
        bookingSourceId:
          type: integer
          format: int32
        branch:
          type: string
        city:
          type: string
        cityMaster:
          type: string
        cityMasterId:
          type: integer
          format: int32
        code:
          type: string
        competitorMaster:
          type: string
        competitorMasterId:
          type: integer
          format: int32
        contact:
          type: string
        contactPosition:
          type: string
        country:
          type: string
        createdById:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        creditHold:
          type: boolean
        creditLimit:
          type: number
          format: decimal
        email:
          type: string
        fax:
          type: string
        hideRateFromCorrespondence:
          type: boolean
        inactive:
          type: boolean
        inactiveReason:
          type: string
        industryMasterId:
          type: integer
          format: int32
        lastVisit:
          type: string
          format: date-time
        modifiedById:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        notes:
          type: string
        numberOfVisits:
          type: integer
          format: int32
        parentId:
          type: integer
          format: int32
        phone:
          type: string
        postcode:
          type: string
        resType:
          type: string
        resTypeId:
          type: integer
          format: int32
        sendARToHeadOffice:
          type: string
        state:
          type: string
        totalIncome:
          type: number
          format: currency
        tradingAs:
          type: string
        userDefined1:
          maxLength: 20
          type: string
        userDefined2:
          maxLength: 50
          type: string
        userDefined3:
          maxLength: 50
          type: string
        userDefined4:
          maxLength: 50
          type: string
        userDefined5:
          maxLength: 50
          type: string
        webAddress:
          type: string
      example:
        id: 78
        name: Mians
        abn: 123A 2596 5E89
        acn: 5986 9856 569 6
        accountId: 18001
        address1: "25"
        address2: fake street
        address3: north
        averageIncome: "52000"
        bookingSource: AusCorp
        bookingSourceId: 986
        branch: ' dellas'
        city: ftizfield
        cityMaster: NSW
        cityMasterId: 235
        code: 12A
        competitorMaster: Rex Group
        competitorMasterId: 3
        contact: Wayne
        contactPosition: Lodge Manager
        country: ukraine
        createdById: 5
        createdDate: 2018-09-27 16:00:00
        creditHold: true
        creditLimit: "986"
        email: fake@email.com.au
        fax: 03 4569 4569
        hideRateFromCorrespondence: false
        inactive: false
        inactiveReason: Old Account
        industryMasterId: 25
        lastVisit: 2018-09-25 17:25:00
        modifiedById: 85
        modifiedDate: 2019-09-25 17:25:00
        notes: This is a note
        numberOfVisits: 56
        parentId: 784
        phone: 03 5986 4875
        postcode: "0425"
        resType: Staff
        resTypeId: 45
        sendArToHeadOffice: true
        state: Victoria
        totalIncome: 23.56
        tradingAs: Melb Corp
        userDefined1: String 20
        userDefined2: String 50
        userDefined3: String 50
        userDefined4: String 50
        userDefined5: String 50
        webAddress: www.melbcorp.com
    companiesRatesAssignmentsFull:
      type: object
      properties:
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        rateId:
          type: integer
          format: int32
        rateName:
          type: string
        propertyId:
          type: integer
          format: int32
        propertyName:
          type: string
      example:
        id: 7
        companyId: 1
        fromDate: 2024-08-02 00:00:00
        toDate: 2024-12-02 00:00:00
        rateId: 1
        rateName: BAR
        propertyId: 1
        propertyName: Test Property 1
    companyPatch:
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        postcode:
          type: string
        countryid:
          type: integer
          format: integer
        state:
          type: string
        abn:
          type: string
        accounttypeid:
          type: integer
          format: integer
        acn:
          type: string
        averageincome:
          type: number
        billingnote:
          type: string
        bookingsourceid:
          type: integer
          format: integer
        citymasterid:
          type: integer
          format: integer
        code:
          type: string
        contact:
          type: string
        contactposition:
          type: string
        credithold:
          type: boolean
        competitormasterid:
          type: integer
          format: integer
        creditlimit:
          type: number
        email:
          type: string
        fax:
          type: string
        given:
          type: string
        hideratefromcorrespondence:
          type: boolean
        inactive:
          type: boolean
        industrymasterid:
          type: integer
          format: integer
        markettypeid:
          type: integer
          format: integer
        name:
          type: string
        notes:
          type: string
        phone:
          type: string
        reservationTypeId:
          type: integer
          format: integer
        sendartoheadoffice:
          type: boolean
        surname:
          type: string
        totalincome:
          type: number
        tradingas:
          type: string
        userdefined1:
          type: string
        userdefined2:
          type: string
        userdefined3:
          type: string
        userdefined4:
          type: string
        userdefined5:
          type: string
        userrepid:
          type: integer
          format: integer
      example:
        address1: 123 Main St
        address2: Apt 4B
        address3: ""
        city: Springfield
        postcode: "12345"
        countryid: 1
        state: IL
        abn: "123456789"
        accounttypeid: 2
        acn: "987654321"
        averageincome: 55000.0
        billingnote: Billing cycle is monthly
        bookingsourceid: 3
        citymasterid: 4
        code: SPR001
        contact: John Doe
        contactposition: Manager
        credithold: false
        competitormasterid: 5
        creditlimit: 10000.0
        email: john.doe@example.com
        fax: 123-456-7890
        given: John
        hideratefromcorrespondence: true
        inactive: false
        industrymasterid: 6
        markettypeid: 7
        name: Doe Enterprises
        notes: Preferred customer
        phone: 123-456-7890
        reservationTypeId: 8
        sendartoheadoffice: true
        surname: Doe
        totalincome: 120000.0
        tradingas: Doe & Co.
        userdefined1: Custom Field 1
        userdefined2: Custom Field 2
        userdefined3: Custom Field 3
        userdefined4: Custom Field 4
        userdefined5: Custom Field 5
        userrepid: 9
    creditHoldBasic:
      type: object
      properties:
        creditHold:
          type: boolean
        creditLimit:
          type: number
          format: currency
        creditTerms:
          type: integer
          format: int32
        groupingId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
      description: "Used:<br>GET /companies/{id}/accountsReceivable<br>POST /companies/{id}/accountsReceivable<br>PUT /companies/{id}/accountsReceivable/{arId}<br>GET /travelAgents/{id}/accountsReceivable<br>POST /travelAgents/{id}/accountsReceivable<br>PUT /travelAgents/{id}/accountsReceivable/{arId}"
    contact:
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        contactType:
          type: string
        countryId:
          type: integer
          format: int32
        createdById:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        email:
          type: string
        fax:
          type: string
        given:
          type: string
        groupingId:
          type: integer
          format: int32
        mobile:
          type: string
        modifiedById:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        pager:
          type: string
        phoneAh:
          type: string
        phoneBh:
          type: string
        position:
          type: string
        postcode:
          type: string
        referenceId:
          type: string
        relationship:
          type: integer
          format: int32
        state:
          type: string
        surname:
          type: string
        title:
          type: string
      example:
        id: 16
        address1: 51 fake st
        address2: West town
        address3: South Side
        city: Melbourne
        contactType: Company
        countryId: 2
        createdById: 2
        createdDate: 2020-08-04 00:00:00
        email: test@fake.com.au
        fax: 03 9865 8954
        given: Tom
        groupingId: 4
        mobile: "0411235985"
        modifiedById: 5
        modifiedDate: 2020-08-05 00:00:00
        pager: "265954895"
        phoneAh: 03 9856 9856
        phoneBh: 02 5969 5698
        position: Receptionist
        postcode: "3042"
        referenceId: 20A
        relationshipId: 7
        state: Victoria
        surname: Newman
        title: Mr
    notesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
        note:
          type: string
        billingNote:
          type: string
      example:
        id: 12
        propertyId: 1
        note: Do not give suites to employees
        billingNote: 500 DLLS MAX. Maybe?
    notes:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        note:
          type: string
      example:
        propertyId: 1
        note: Do not give suites to employees
    chargeTypeLite:
      type: object
      properties:
        fromDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        name:
          type: string
        propertyId:
          type: integer
          format: int32
        toDate:
          type: string
          format: date-time
      description: "Used:<br>GET /companies/{id}/rates<br>"
      example:
        fromDate: 2023-05-31 00:00:00
        id: 1416
        name: Testing Rate
        propertyId: 1
        toDate: 2023-08-31 00:00:00
    country:
      type: object
      properties:
        ISOCountryCode:
          maxLength: 3
          minLength: 3
          type: string
        id:
          type: integer
          description: RMS static ID
        name:
          type: string
      example:
        ISOCountryCode: AND
        id: 4
        name: Andorra
    creditNote:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        assigned:
          type: boolean
        costPrice:
          type: number
          format: currency
        currencyView:
          type: string
        gLCodeName:
          type: string
        gLCodeId:
          type: integer
          format: int32
        grouping:
          type: string
        groupingId:
          type: integer
          format: int32
        hasTaxes:
          type: boolean
        inactive:
          type: boolean
        secondCurrency:
          type: number
          format: currency
        unitPrice:
          type: number
          format: currency
      example:
        id: 3
        name: Coke Can
        assigned: true
        costPrice: 1.0
        currencyView: Local Currency
        gLCodeName: Accommodation Revenue
        gLCodeId: 0
        grouping: Group 1
        groupingId: 1
        hasTaxes: true
        inactive: false
        secondCurrency: 0.0
        unitPrice: 2.5
    discountBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        availableToIbe:
          type: boolean
        description:
          type: string
        maximumNightStay:
          type: integer
          format: int32
        minimumNightStay:
          type: integer
          format: int32
      example:
        id: 1
        name: 10% Discount
        availableToIbe: true
        description: Customers will recieve 10% off total booking
        maximumNightStay: 0
        minimumNightStay: 3
    discountFull:
      type: array
      items:
        $ref: '#/components/schemas/discountFull_inner'
    discountValidation:
      type: object
      properties:
        discountid:
          type: integer
          format: int32
        name:
          type: string
        categoryIds:
          type: array
          description: These are the Category ID's these validation options apply to
          items:
            type: integer
            format: int32
        validationDates:
          allOf:
          - $ref: '#/components/schemas/discountValidationSearchDates'
      example:
        discountId: 63
        name: Validation Options Test
        propertyIds:
        - 1
        - 3
        categoryIds:
        - 1
        - 29
        - 52
        validationDates:
        - propertyIds:
          - 1
          - 3
          rateIds:
          - 1119
          - 1421
          - 1425
          reservationMadeFromDate: 2022-07-21 23:59:00
          reservationMadeToDate: 2022-09-05 23:59:59
          reservationMadePermanentFlag: false
          reservationStayingFromDate: 2022-07-21 23:59:00
          reservationStayingToDate: 2022-10-31 23:59:59
          reservationStayingPermanentFlag: false
          arrivingOnMonday: true
          arrivingOnTuesday: true
          arrivingOnWednesday: true
          arrivingOnThursday: true
          arrivingOnFriday: true
          arrivingOnSaturday: true
          arrivingOnSunday: true
          applyingOnMonday: true
          applyingOnTuesday: true
          applyingOnWednesday: true
          applyingOnThursday: true
          applyingOnFriday: true
          applyingOnSaturday: true
          applyingOnSunday: true
        - propertyIds:
          - 1
          - 3
          rateIds:
          - 1417
          reservationMadeFromDate: 2048-09-14 00:00:00
          reservationMadeToDate: 2048-09-15 23:59:59
          reservationMadePermanentFlag: true
          reservationStayingFromDate: 2048-09-14 00:00:00
          reservationStayingToDate: 2048-09-14 23:59:59
          reservationStayingPermanentFlag: false
          arrivingOnMonday: true
          arrivingOnTuesday: true
          arrivingOnWednesday: true
          arrivingOnThursday: true
          arrivingOnFriday: true
          arrivingOnSaturday: true
          arrivingOnSunday: true
          applyingOnMonday: true
          applyingOnTuesday: true
          applyingOnWednesday: true
          applyingOnThursday: true
          applyingOnFriday: true
          applyingOnSaturday: true
          applyingOnSunday: true
    discountValidationSearchDates:
      type: object
      properties:
        propertyIds:
          type: array
          description: These are the property ID's these validation options apply to
          items:
            type: integer
            format: int32
        rateIds:
          type: array
          items:
            type: integer
            format: int32
        reservationMadeFromDate:
          type: string
          format: date-time
        reservationMadeToDate:
          type: string
          format: date-time
        reservationMadePermanentFlag:
          type: boolean
        reservationStayingFromDate:
          type: string
          format: date-time
        reservationStayingToDate:
          type: string
          format: date-time
        reservationStayingPermanentFlag:
          type: boolean
        arrivingOnMonday:
          type: boolean
        arrivingOnTuesday:
          type: boolean
        arrivingOnWednesday:
          type: boolean
        arrivingOnThursday:
          type: boolean
        arrivingOnFriday:
          type: boolean
        arrivingOnSaturday:
          type: boolean
        arrivingOnSunday:
          type: boolean
        applyingOnMonday:
          type: boolean
        applyingOnTuesday:
          type: boolean
        applyingOnWednesday:
          type: boolean
        applyingOnThursday:
          type: boolean
        applyingOnFriday:
          type: boolean
        applyingOnSaturday:
          type: boolean
        applyingOnSunday:
          type: boolean
    discountValidationSearch:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
    dwellingTypesPropertyRestriction:
      type: object
      properties:
        dwellingId:
          type: integer
        dwellingName:
          type: string
        groupingId:
          type: integer
        grouping:
          type: string
        propertyRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/dwellingTypesPropertyRestriction_propertyRestrictions'
    towing:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 7
        name: Sedan
    financialInterfaceSetup:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
      example:
        propertyId: 3
    financialInterfaceSetupResponse:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        additionalInterface:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceAdditional'
        advancesLedger:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceAdvancesLedger'
        guestLedger:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceGuestLedger'
        cityLedger:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCityLedger'
        receipts:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceReceipts'
        stats:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceStats'
        options:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceOptionsTaxes'
        cards:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCardDetail'
        periods:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfacePeriods'
    financialInterfaceAdditional:
      type: object
      properties:
        interface1:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        interface2:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        interface3:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        interface4:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
    financialInterfaceCodeDesc:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    financialInterfaceAdvancesLedger:
      type: object
      properties:
        lessCreditsRefunded:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        lessCreditsUsed:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        plusNewCredits:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
    financialInterfaceGuestLedger:
      type: object
      properties:
        plusNewReservationCharges:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        lessPaidBalances:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
    financialInterfaceCityLedger:
      type: object
      properties:
        lessCreditsUsed:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        lessPaidBalances:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        plusNewBalances:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        plusNewCredits:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
    financialInterfaceReceipts:
      type: object
      properties:
        cash:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        cheque:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        directCredit:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        directCredit2:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        otherCash:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
    financialInterfaceStats:
      type: object
      properties:
        availableRooms:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        noShowRooms:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        occupiedRooms:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        outOfOrderRooms:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        totalRoomsInProperty:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
    financialInterfaceOptionsTaxes:
      type: object
      properties:
        amortiseTaxes:
          type: boolean
        serviceChargeNonTaxable:
          type: boolean
    financialInterfaceCardDetail:
      type: object
      properties:
        cardId:
          type: integer
          format: int32
        name:
          type: string
        card:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
        eftPos:
          type: array
          items:
            $ref: '#/components/schemas/financialInterfaceCodeDesc'
    financialInterfacePeriods:
      type: object
      properties:
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        postingDate:
          type: string
          format: date-time
        period:
          type: integer
          format: int32
        year:
          type: integer
          format: int32
    financialInterfaceTcodes:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        entityType:
          type: string
          enum:
          - notSet
          - glCode
          - marketSegment
          - mappings
          - receipts
          - creditCards
          - eftpos
          - statistics
      example:
        propertyId: 3
        entityType: eftpos
    financialInterfaceTcodesResponse:
      type: object
      properties:
        entityTypeId:
          type: integer
          format: int32
        entityType:
          type: string
          enum:
          - notSet
          - glCode
          - marketSegment
          - mappings
          - receipts
          - creditCards
          - eftpos
          - statistics
        entityId:
          type: integer
          format: int32
        entity:
          type: string
        propertyId:
          type: integer
          format: int32
        t0:
          type: string
        t1:
          type: string
        t2:
          type: string
        t3:
          type: string
        t4:
          type: string
        t5:
          type: string
        t6:
          type: string
        t7:
          type: string
        t8:
          type: string
        t9:
          type: string
      example:
        entityTypeId: 6
        entityType: EFTPos
        entityId: 3
        entity: Amex
        propertyId: 3
        t0: AmexEFTT0
        t1: AmexEFTT1
        t2: AmexEFTT2
        t3: AmexEFTT3
        t4: AmexEFTT4
        t5: AmexEFTT5
        t6: AmexEFTT6
        t7: AmexEFTT7
        t8: AmexEFTT8
        t9: AmexEFTT9
    glCodeBasic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        glCode:
          type: string
        groupingId:
          type: integer
        includeInAccommodationRevenue:
          type: boolean
      example:
        id: 36
        name: Tips/Restaurant
        glCode: 2-1210
        groupingId: 12
        includeInAccommodationRevenue": false
    glCodeCreation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        glCode:
          type: string
        groupingId:
          type: integer
        includeInAccommodationRevenue:
          type: boolean
      example:
        id: 0
        name: Tips/Restaurant
        glCode: 2-1210
        groupingId: 12
        includeInAccommodationRevenue": false
    guestSearch:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
        idFrom:
          type: integer
          format: int32
        idTo:
          type: integer
          format: int32
        accountIds:
          type: array
          items:
            type: integer
            format: int32
        clientType:
          type: string
          default: notSet
          enum:
          - notSet
          - client
          - owner
        createdFrom:
          type: string
          format: date-time
        createdTo:
          type: string
          format: date-time
        email:
          type: string
        email2:
          type: string
        given:
          type: string
        guestPropertyIds:
          type: array
          items:
            type: integer
            format: int32
        includeReservationIds:
          type: boolean
        includeSecondaryGuests:
          type: boolean
        loyaltyNumber:
          type: integer
          format: int32
        membershipNumber:
          type: string
        mobile:
          type: string
        modifiedFrom:
          type: string
          format: date-time
        modifiedTo:
          type: string
          format: date-time
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        reservationIds:
          type: array
          items:
            type: integer
            format: int32
        surname:
          type: string
        surnameStartsWith:
          type: string
        userDefinedFieldNumber:
          type: integer
          format: int32
        userDefinedFieldValue:
          type: string
      example:
        ids:
        - 12
        - 5
        - 702
        idFrom: 6
        idTo: 12
        accountIds:
        - 1242
        - 5985
        - 702
        clientType: Not Set
        createdFrom: 2018-09-25 00:00:00
        createdTo: 2018-09-27 00:00:00
        email: john@gmail.com
        email2: apisupport@rmscloud.com
        guestPropertyIds: "[1]"
        given: steve
        includeReservationIds: true
        includeSecondaryGuests: false
        loyaltyNumber: 3732
        membershipNumber: 04903a
        mobile: "0412345678"
        modifiedFrom: 2018-09-25 00:00:00
        modifiedTo: 2018-09-27 00:00:00
        propertyIds:
        - 1
        - 5
        - 2
        reservationIds:
        - 9454
        - 123
        - 1425
        surname: smith
        surnameStartsWith: S
        userDefinedFieldNumber: 1
        userDefinedFieldValue: married
    guestFull:
      type: object
      properties:
        id:
          type: integer
          format: in32
        abn:
          type: string
          description: Australian Business Number
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        agreementDate:
          type: string
          format: date-time
        anniversary:
          type: string
        arrivedFrom:
          type: string
        auxDocumentDate:
          type: string
          format: date-time
        birthday:
          type: string
          format: date-time
        bookingSourceId:
          type: integer
          format: int32
        blackList:
          type: boolean
        businessSegmentId:
          type: integer
          format: int32
        cardTypeId:
          type: integer
          format: int32
        ccConsent:
          type: boolean
        cityMasterId:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        countryArrivalDate:
          type: string
          format: date-time
        countryOfBirthId:
          type: integer
          format: int32
        countryOfIdId:
          type: integer
          format: int32
        countryId:
          type: integer
          format: int32
        createdById:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        discountId:
          type: integer
          format: int32
        edmFilter1OptOut:
          type: boolean
        edmFilter2OptOut:
          type: boolean
        edmFilter3OptOut:
          type: boolean
        email:
          type: string
        email2:
          type: string
        emailOptOut:
          type: boolean
        employedInCountry:
          type: boolean
        externalRefId:
          type: string
        fax:
          type: string
        frequentFlyerMembershipTypeId:
          type: integer
          format: int32
        gender:
          type: string
        groupName:
          type: string
        gstFree:
          type: boolean
        guestAccountId:
          type: integer
          format: int32
        guestGiven:
          type: string
        guestSurname:
          type: string
        guestStatusId:
          type: integer
          format: int32
        guestTypeId:
          type: integer
          format: int32
        identificationTypeId:
          type: integer
          format: int32
        idIssueDate:
          type: string
          format: date-time
        idTypeId:
          type: integer
          format: int32
        landingPortId:
          type: integer
          format: int32
        languageSpoken:
          type: string
        languageSpokenId:
          type: integer
          format: int32
        lastAreaId:
          type: integer
          format: int32
        lastRateTypeId:
          type: integer
          format: int32
        lastVisitDate:
          type: string
          format: date-time
        licenceExpiryDate:
          type: string
          format: date-time
        licenceIssuedDate:
          type: string
          format: date-time
        licenceNumber:
          type: string
        longTerm:
          type: boolean
        loyaltyLevel:
          type: string
        loyaltyMembershipTypeId:
          type: integer
          format: int32
        loyaltyNumber:
          type: string
        marketingOptOut:
          type: boolean
        membershipNumber:
          type: string
        mobile:
          type: string
        modifiedById:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        nationalityId:
          type: integer
          format: int32
        notes:
          type: string
        numberOfVisits:
          type: integer
          format: int32
        otherName:
          type: string
        otaLoyaltyNumber:
          type: integer
          format: int32
        passportExpiry:
          type: string
          format: date-time
        passportId:
          type: string
        phoneAH:
          type: string
        PhoneBH:
          type: string
        phoneOptOut:
          type: boolean
        placeOfIssue:
          type: string
        position:
          type: string
        postcode:
          type: string
        preference:
          type: string
        preferredAreaGroupid:
          type: integer
          format: int32
        preferredAreaId:
          type: integer
          format: int32
        preferredPrintingLanguageId:
          type: integer
          format: int32
        privacyOptIn:
          type: boolean
        proceedingTo:
          type: string
        propertyId:
          type: integer
          format: int32
        propertyName:
          type: string
        registeredInCountry:
          type: boolean
        registrationAddress:
          type: string
        registrationDate:
          type: string
          format: date-time
        registrationNumber:
          type: string
        registrationOffice:
          type: string
        resTypeId:
          type: integer
          format: int32
        retailer:
          type: boolean
        rvLengthId:
          type: integer
          format: int32
        rvSlideId:
          type: integer
          format: int32
        rvTypeId:
          type: integer
          format: int32
        rvYear:
          type: integer
          format: int32
        salesPrioritiesId:
          type: integer
          format: int32
        smsOptOut:
          type: boolean
        state:
          type: string
        studentId:
          type: integer
          format: int32
        subResTypeId:
          type: integer
          format: int32
        subTitleId:
          type: integer
          format: int32
        tagId:
          type: integer
          format: int32
        title:
          type: string
        totalIncome:
          type: integer
          format: decimal
        towingId:
          type: integer
          format: int32
        town:
          type: string
        turnAwayId:
          type: integer
          format: int32
        userDefined1:
          maxLength: 20
          type: string
        userDefined2:
          maxLength: 20
          type: string
        userDefined3:
          maxLength: 20
          type: string
        userDefined4:
          maxLength: 20
          type: string
        userDefined5:
          maxLength: 20
          type: string
        userDefined6:
          maxLength: 20
          type: string
        userDefined7:
          maxLength: 20
          type: string
        userDefined8:
          maxLength: 20
          type: string
        userDefined9:
          maxLength: 20
          type: string
        userDefined10:
          maxLength: 20
          type: string
        userDefined11:
          maxLength: 20
          type: string
        userDefined12:
          maxLength: 50
          type: string
        userDefined13:
          type: boolean
        userDefined14:
          type: boolean
        userDefined15:
          type: string
          format: date-time
        userDefined16:
          type: string
          format: date-time
        vipCodesId:
          type: integer
          format: int32
        visitPurposeId:
          type: integer
          format: int32
        visaExpiry:
          type: string
          format: date-time
        visaIssued:
          type: string
          format: date-time
        visaIssuedPlace:
          type: string
        visaNumber:
          type: string
        webAddress:
          type: string
      example:
        id: 78
        abn: 012 659 65689
        addressLine1: 1540 Amsterdam Avenue
        addressLine2: south
        addressLine3: Westingham
        agreementDate: 2018-09-25 17:25:00
        anniversary: 2015-07-29 00:00:00
        arrivedFrom: San Fran
        auxDocumentDate: 2018-09-26 10:25:00
        birthday: 1991-08-22 00:00:00
        bookingSourceId: 8
        blackList: true
        businessSegmentId: 9
        cardTypeId: 0
        ccConsent: true
        cityMasterId: 87
        companyId: 4
        countryArrivalDate: 2018-09-26 10:25:00
        countryOfBirthId: 8
        countryOfIdId: 8
        countryId: 8
        createdById: 5
        createdDate: 2016-03-02 09:00:56
        discountId: 53
        edmFilter1OptOut: true
        edmFilter2OptOut: true
        edmFilter3OptOut: true
        email: test@rms.com.au
        email2: test@rms.com.au
        emailOptOut: true
        employedInCountry: false
        externalRefId: v1234568
        fax: 03 9568 69568
        frequentFlyerMembershipTypeId: 0
        gender: X
        groupName: Westinghouse
        gstFree: true
        guestAccountId: 8
        guestGiven: Smithers
        guestSurname: Westingham
        guestStatusId: null
        guestTypeId: 1
        identificationTypeId: 74
        idIssueDate: 2018-09-25 17:25:00
        idTypeId: 1
        landingPortId: 11
        languageSpoken: French Canadian
        languageSpokenId: 2
        lastAreaId: 15
        lastRateTypeId: 12
        lastVisit: 26-06-2016 00:12:00
        licenceExpiryDate: 2018-09-25 17:25:00
        licenceIssuedDate: 2018-09-25 17:25:00
        licenceNumber: 98685p
        longTerm: false
        loyaltyLevel: Preetty Loyal
        loyaltyMembershipType: Platinum
        loyaltyNumber: 55d
        marketingOptOut: true
        membershipNumber: br12345
        mobile: +614 586 659 77
        modifiedById: 50
        modifiedDate: 2017-07-12 15:12:00
        nationalityId: 8
        notes: This is a nice guest
        numberOfVisits: 12
        otherName: Smith
        passportExpiry: 2018-09-25 17:25:00
        passportId: PT123698
        phoneAH: 03 5698 5698
        PhoneBH: 03 8986 5458
        phoneOptOut: true
        placeOfIssue: Ueganda
        position: CEO
        postcode: 1234E
        preference: Clean room
        preferredAreaGroupid: null
        preferredAreaId: 14
        preferredPrintingLanguageId: 7
        privacyOptIn: false
        proceedingTo: New York
        propertyId: 7
        propertyName: test property
        registeredInCountry: false
        registrationAddress: "15, urik st"
        registrationDate: 2017-07-12 15:12:00
        registrationNumber: rrg4e8y7ye
        registrationOffice: Head Office
        resTypeId: 8
        retailer: false
        rvLengthId: 9
        rvSlideId: 3
        rvTypeId: 2
        rvYear: 8
        salesPrioritiesId: 5
        smsOptOut: true
        state: Victoria
        studentId: 246
        subResTypeId: 6
        subTitleId: 4
        tagId: 11
        title: Dr.
        totalIncome: 45000.0
        towingId: 2
        town: Bigennsville
        turnAwayId: 3
        userDefined1: String 50
        userDefined2: String 20
        userDefined3: String 20
        userDefined4: String 20
        userDefined5: String 20
        userDefined6: String 20
        userDefined7: String 20
        userDefined8: String 20
        userDefined9: String 20
        userDefined10: String 20
        userDefined11: String 20
        userDefined12: String 50
        userDefined13: true
        userDefined14: false
        userDefined15: 28-02-2019 00:00:00
        userDefined16: 28-02-2019 00:00:00
        vipCodesId: 14
        visaExpiry: 28-02-2019 00:00:00
        visaIssued: 28-02-2019 00:00:00
        visaNumber: Jw123456
        visaIssuedPlace: Paris
        visitPurposeId: 1
        webAddress: www.cbf.com.au
    guestLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        guestGiven:
          type: string
        guestSurname:
          type: string
      example:
        id: 968
        guestGiven: Smithers
        guestSurname: Westingham
    guestPatch:
      type: object
      properties:
        id:
          type: integer
          format: in32
        abn:
          type: string
          description: Australian Business Number
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        anniversary:
          type: string
        agreementDate:
          type: string
          format: date-time
        arrivedFrom:
          type: string
        auxDocumentDate:
          type: string
          format: date-time
        birthday:
          type: string
          format: date-time
        bookingSourceId:
          type: integer
          format: int32
        blackList:
          type: boolean
        businessSegmentId:
          type: integer
          format: int32
        cardTypeId:
          type: integer
          format: int32
        ccConsent:
          type: boolean
        cityMasterId:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        countryArrivalDate:
          type: string
          format: date-time
        countryOfBirthId:
          type: integer
          format: int32
        countryOfIdId:
          type: integer
          format: int32
        countryId:
          type: integer
          format: int32
        createdById:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        discountId:
          type: integer
          format: int32
        edmFilter1OptOut:
          type: boolean
        edmFilter2OptOut:
          type: boolean
        edmFilter3OptOut:
          type: boolean
        email:
          type: string
        email2:
          type: string
        emailOptOut:
          type: boolean
        employedInCountry:
          type: boolean
        externalRefId:
          type: string
        fax:
          type: string
        frequentFlyerMembershipTypeId:
          type: integer
          format: int32
        gender:
          type: string
          enum:
          - M
          - F
        groupName:
          type: string
        gstFree:
          type: boolean
        guestAccountId:
          type: integer
          format: int32
        guestGiven:
          type: string
        guestSurname:
          type: string
        guestStatusId:
          type: integer
          format: int32
        guestTypeId:
          type: integer
          format: int32
        identificationTypeId:
          type: integer
          format: int32
        idIssueDate:
          type: string
          format: date-time
        idTypeId:
          type: integer
          format: int32
        landingPortId:
          type: integer
          format: int32
        languageSpoken:
          type: string
        languageSpokenId:
          type: integer
          format: int32
        lastAreaId:
          type: integer
          format: int32
        lastRateTypeId:
          type: integer
          format: int32
        lastVisitDate:
          type: string
          format: date-time
        licenceExpiryDate:
          type: string
          format: date-time
        licenceIssuedDate:
          type: string
          format: date-time
        licenceNumber:
          type: string
        longTerm:
          type: boolean
        loyaltyLevel:
          type: string
        loyaltyMembershipTypeId:
          type: integer
          format: int32
        loyaltyNumber:
          type: string
        marketingOptOut:
          type: boolean
        membershipNumber:
          type: string
        mobile:
          type: string
        modifiedById:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        nationalityId:
          type: integer
          format: int32
        notes:
          type: string
        otherName:
          type: string
        otaLoyaltyNumber:
          type: integer
          format: int32
        passportExpiry:
          type: string
          format: date-time
        passportId:
          type: string
        phoneAH:
          type: string
        PhoneBH:
          type: string
        phoneOptOut:
          type: boolean
        placeOfIssue:
          type: string
        position:
          type: string
        postcode:
          type: string
        preference:
          type: string
        preferredAreaGroupid:
          type: integer
          format: int32
        preferredAreaId:
          type: integer
          format: int32
        preferredPrintingLanguageId:
          type: integer
          format: int32
        privacyOptIn:
          type: boolean
        proceedingTo:
          type: string
        propertyId:
          type: integer
          format: int32
        propertyName:
          type: string
        registeredInCountry:
          type: boolean
        registrationAddress:
          type: string
        registrationDate:
          type: string
          format: date-time
        registrationNumber:
          type: string
        registrationOffice:
          type: string
        resTypeId:
          type: integer
          format: int32
        retailer:
          type: boolean
        salesPrioritiesId:
          type: integer
          format: int32
        smsOptOut:
          type: boolean
        state:
          type: string
        studentId:
          type: integer
          format: int32
        subResTypeId:
          type: integer
          format: int32
        subTitleId:
          type: integer
          format: int32
        tagId:
          type: integer
          format: int32
        title:
          type: string
        towingId:
          type: integer
          format: int32
        town:
          type: string
        turnAwayId:
          type: integer
          format: int32
        userDefined1:
          maxLength: 20
          type: string
        userDefined2:
          maxLength: 20
          type: string
        userDefined3:
          maxLength: 20
          type: string
        userDefined4:
          maxLength: 20
          type: string
        userDefined5:
          maxLength: 20
          type: string
        userDefined6:
          maxLength: 20
          type: string
        userDefined7:
          maxLength: 20
          type: string
        userDefined8:
          maxLength: 20
          type: string
        userDefined9:
          maxLength: 20
          type: string
        userDefined10:
          maxLength: 20
          type: string
        userDefined11:
          maxLength: 20
          type: string
        userDefined12:
          maxLength: 50
          type: string
        userDefined13:
          type: boolean
        userDefined14:
          type: boolean
        userDefined15:
          type: string
          format: date-time
        userDefined16:
          type: string
          format: date-time
        vipCodesId:
          type: integer
          format: int32
        visitPurposeId:
          type: integer
          format: int32
        visaExpiry:
          type: string
          format: date-time
        visaIssued:
          type: string
          format: date-time
        visaIssuedPlace:
          type: string
        visaNumber:
          type: string
        webAddress:
          type: string
      example:
        id: 78
        abn: 012 659 65689
        addressLine1: 1540 Amsterdam Avenue
        addressLine2: south
        addressLine3: Westingham
        agreementDate: 2018-09-25 17:25:00
        anniversary: 2015-07-25 00:00:00
        arrivedFrom: San Fran
        auxDocumentDate: 2018-09-26 10:25:00
        birthday: 1991-08-22 00:00:00
        bookingSourceId: 8
        blackList: true
        businessSegmentId: 9
        cardTypeId: 0
        ccConsent: true
        cityMasterId: 87
        companyId: 4
        countryArrivalDate: 2018-09-26 10:25:00
        countryOfBirthId: 8
        countryOfIdId: 8
        countryId: 8
        createdById: 5
        createdDate: 2016-03-02 09:00:56
        discountId: 53
        edmFilter1OptOut: true
        edmFilter2OptOut: true
        edmFilter3OptOut: true
        email: test@rms.com.au
        email2: test@rms.com.au
        emailOptOut: true
        employedInCountry: false
        externalRefId: v1234568
        fax: 03 9568 69568
        frequentFlyerMembershipTypeId: 0
        gender: M
        groupName: Westinghouse
        gstFree: true
        guestAccountId: 8
        guestGiven: Smithers
        guestSurname: Westingham
        guestStatusId: null
        guestTypeId: 1
        identificationTypeId: 74
        idIssueDate: 2018-09-25 17:25:00
        idTypeId: 1
        landingPortId: 11
        languageSpoken: French Canadian
        languageSpokenId: 2
        lastAreaId: 15
        lastRateTypeId: 12
        lastVisit: 26-06-2016 00:12:00
        licenceExpiryDate: 2018-09-25 17:25:00
        licenceIssuedDate: 2018-09-25 17:25:00
        licenceNumber: 98685p
        longTerm: false
        loyaltyLevel: Preetty Loyal
        loyaltyMembershipType: Platinum
        loyaltyNumber: 55d
        marketingOptOut: true
        membershipNumber: br12345
        mobile: +614 586 659 77
        modifiedById: 50
        modifiedDate: 2017-07-12 15:12:00
        nationalityId: 8
        notes: This is a nice guest
        otherName: Smith
        otaLoyaltyNumber: "98413"
        passportExpiry: 2018-09-25 17:25:00
        passportId: PT123698
        phoneAH: 03 5698 5698
        PhoneBH: 03 8986 5458
        phoneOptOut: true
        placeOfIssue: Ueganda
        position: CEO
        postcode: 1234E
        preference: Clean room
        preferredAreaGroupid: null
        preferredAreaId: 14
        preferredPrintingLanguageId: 7
        privacyOptIn: false
        proceedingTo: New York
        propertyId: 7
        propertyName: test property
        registeredInCountry: false
        registrationAddress: "15, urik st"
        registrationDate: 2017-07-12 15:12:00
        registrationNumber: rrg4e8y7ye
        registrationOffice: Head Office
        resTypeId: 8
        retailer: false
        salesPrioritiesId: 5
        smsOptOut: true
        state: Victoria
        studentId: 246
        subResTypeId: 6
        subTitleId: 4
        tagId: 11
        title: Dr.
        towingId: 2
        town: Bigennsville
        turnAwayId: 3
        userDefined1: String 50
        userDefined2: String 20
        userDefined3: String 20
        userDefined4: String 20
        userDefined5: String 20
        userDefined6: String 20
        userDefined7: String 20
        userDefined8: String 20
        userDefined9: String 20
        userDefined10: String 20
        userDefined11: String 20
        userDefined12: String 50
        userDefined13: true
        userDefined14: false
        userDefined15: 28-02-2019 00:00:00
        userDefined16: 28-02-2019 00:00:00
        vipCodesId: 14
        visaExpiry: 28-02-2019 00:00:00
        visaIssued: 28-02-2019 00:00:00
        visaNumber: Jw123456
        visaIssuedPlace: Paris
        visitPurposeId: 1
        webAddress: www.cbf.com.au
    guestDwelling:
      type: object
      properties:
        lengthId:
          type: integer
          format: int32
        slideId:
          type: integer
          format: int32
        typeId:
          type: integer
          format: int32
        year:
          type: integer
          format: int32
        towingId:
          type: integer
          format: int32
      example:
        lengthId: 8
        slideId: 7
        typeId: 2
        year: "1989"
        towingId: 5
    guestContract:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        contractId:
          type: integer
          format: int32
        contractType:
          type: string
        dwellingSalesNumber:
          type: integer
          format: int32
        ownedFromDate:
          type: string
          format: date-time
        ownedToDate:
          type: string
          format: date-time
        percentageShare:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
      example:
        accountId: 64984
        areaId: 4
        categoryId: 4
        contractNumber: 265
        contractType: Standard
        dwellingSalesNumber: 15
        ownedFromDate: 2018-09-26 10:25:00
        ownedToDate: 2020-09-26 10:25:00
        percentageShare: 100
        propertyId: 1
    guestLoyaltyPoints:
      type: object
      properties:
        guestId:
          type: integer
          format: int32
        points:
          type: string
        enrolled:
          type: boolean
      example:
        guestId: 31
        points: "500"
        enrolled: true
    guestArraySearch:
      type: object
      properties:
        ids:
          type: array
          description: This call is limitied to only allow you to pass 50 guest ID's per call
          items:
            type: integer
            format: int32
      example:
        ids:
        - 6548
        - 2243
        - 9879
    guestContracts:
      type: object
      properties:
        guestId:
          type: integer
          format: int32
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/guestContract'
      example:
        guestId: 564566
        contracts:
        - accountId: 64984
          areaId: 4
          categoryId: 4
          contractNumber: 265
          contractType: Standard
          dwellingSalesNumber: 15
          ownedFromDate: 2018-09-26 10:25:00
          ownedToDate: 2020-09-26 10:25:00
          percentageShare: 100
          propertyId: 1
    correspondenceSignature:
      type: object
      properties:
        caption:
          type: string
        id:
          type: integer
          format: int32
        'url:':
          type: string
      example:
        caption: Signature
        id: 5
        url: https://images.rmscloud.com/rmsoimages/6880/rmswin/rmsonlineimages/00000090.jpg
    mealCard:
      type: object
      properties:
        id:
          type: integer
          format: int32
        cardId:
          type: string
        companyId:
          type: integer
          format: int32
        expiryDate:
          type: string
          format: date-time
        guestId:
          type: integer
        mealsAllowed:
          type: string
        mealsCustom:
          type: string
        propertyId:
          type: integer
          format: int32
        startingDate:
          type: string
          format: date-time
      example:
        id: 72
        cardId: 99986a
        companyId: 8
        expiryDate: 2018-09-25 17:25:00
        guestId: 11457
        mealsAllowed: Both
        mealsCustom: Breakfast
        propertyId: 1
        startingDate: 2018-08-25 17:25:00
    guestIdArraySearch:
      type: object
      properties:
        guestIds:
          type: array
          items:
            type: integer
            format: int32
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
      example:
        guestIds:
        - 6548
        - 2243
        - 9879
        dateFrom: 2019-01-01
        dateTo: 2021-08-01
    guestsIdRMSPayPaymentSession:
      type: object
      properties:
        sessionId:
          type: string
        cardSummary:
          type: string
        paymentMethod:
          type: string
        merchantReference:
          type: string
        cardHolderName:
          type: string
        cardId:
          type: integer
        transactionReference:
          type: string
        expiryDate:
          type: string
        token:
          type: string
        success:
          type: boolean
        surchargeAmount:
          type: number
      example:
        sessionId: a62a99d521a545d5a8a4ac16e089e84e
        cardSummary: "8431"
        paymentMethod: amex
        merchantReference: RMSTEST
        cardHolderName: John Smith
        cardId: 0
        transactionReference: H67QJJK27PRRVS65
        expiryDate: 3/2030
        token: RMS_E9BCA96E1E|N5N6L8VTVC8QZ375
        success: true
        surchargeAmount: 12.0
    rmsPayTokenRequest:
      required:
      - amount
      - merchantReference
      - propertyId
      - redirectURL
      type: object
      properties:
        allowPaymentMethods:
          type: array
          description: allowPaymentMethods is an optional field
          items:
            type: string
            enum:
            - visa
            - mc
            - amex
        amount:
          type: number
          format: currency
        currencyCode:
          type: string
        locale:
          type: string
          description: locale is an optional field
        merchantReference:
          type: string
        notifyURL:
          type: string
        propertyId:
          type: integer
          format: int32
        redirectURL:
          type: string
        skip3DS:
          type: boolean
        disableCCsurcharge:
          type: boolean
      description: "Used:<br>POST /guests/{id}/rmsPayPayment<br>POST /guests/{id}/rmsPayToken<br>POST /guests/{id}/rmsPayToken/search"
      example:
        allowPaymentMethods:
        - visa
        - mc
        - amex
        amount: 1.0
        currencyCode: AUD
        locale: en_US
        merchantReference: REST88569
        notifyURL: https://testapp8.rmscloud.com
        propertyId: 4
        redirectURL: https://testapp8.rmscloud.com
        skip3DS: false
        disableCCsurcharge: false
    rmsPayTokenResponse:
      type: object
      properties:
        success:
          type: boolean
        redirectURL:
          type: string
        message:
          type: string
      description: "Used:<br>POST /guests/{id}/rmsPayPayment<br>POST /guests/{id}/rmsPayToken"
      example:
        success: true
        redirectURL: https://testapp8.rmscloud.com/RMSPay/?sessionId=54f654tyt98yyt8888
        message: Success
    guestsIdRMSPayTokenPreAuthExistingToken:
      required:
      - amount
      - merchantReference
      - propertyId
      - reservationId
      - token
      type: object
      properties:
        propertyId:
          type: integer
        merchantReference:
          type: string
        token:
          type: string
        amount:
          type: number
        reservationId:
          type: integer
      example:
        propertyId: 1
        merchantReference: REST1493
        token: RMS_32AFA78637|CV7P4WF9G8J96GV5
        amount: 3
        reservationId: 216974
    rmsPayTokenSearchRequest:
      required:
      - merchantReference
      - propertyId
      type: object
      properties:
        merchantReference:
          type: string
        propertyId:
          type: integer
          format: int32
    guestRMSPayToken:
      type: object
      properties:
        cardHolderName:
          type: string
        cardId:
          type: integer
          format: int32
        cardType:
          type: string
        description:
          type: string
        expiryDate:
          type: string
        lastFourDigitsOfCard:
          type: string
        propertyId:
          type: integer
          format: int32
        token:
          type: string
        tokenId:
          type: integer
          format: int32
        tokenType:
          type: string
          enum:
          - Token
          - PreAuth
      description: "Used:<br>POST guests/{id}/rmsPayToken/search"
      example:
        cardHolderName: ""
        cardId: 1
        cardType: Visa
        description: Wifes Card
        expiryDate: 03/30
        lastFourDigitsOfCard: "1000"
        propertyId: 1
        token: 948534hkfdhklfhkwefuhkl
        tokenId: 38967
        tokenType: Token
    rmsPayTerminals:
      required:
      - description
      - id
      - propertyId
      - propertyName
      - stationNumber
      type: object
      properties:
        id:
          type: integer
          example: 23
        propertyId:
          type: string
        propertyName:
          type: string
        stationNumber:
          type: string
        description:
          type: string
      example:
        id: 23
        propertyId: "4"
        propertyName: (RMSPAY)- Internal DB
        stationNumber: V400m-347312406
        description: RMSPay Termin
    rmsPayTerminalsAbort:
      type: object
      properties:
        success:
          type: boolean
        token:
          type: string
        transactionReference:
          type: string
        cardType:
          type: string
        cardExpiry:
          type: string
      example:
        success: true
        token: RMS_122264948|SLXC55WJRLDN2S65
        transactionReference: PYgD001717721634000.SNS7HB9FBVS49W65
        cardType: MasterCard
        cardExpiry: 02/28
    rmsPayTerminalsPreAuth:
      required:
      - amount
      - guestId
      - propertyId
      - reservationId
      - stationNumber
      - terminalId
      type: object
      properties:
        propertyId:
          type: integer
        terminalId:
          type: integer
        merchantReference:
          type: string
        notifyURL:
          type: string
        stationNumber:
          type: string
        guestId:
          type: integer
        reservationId:
          type: integer
        amount:
          type: integer
      example:
        propertyId: 4
        terminalId: 20
        merchantReference: AB123
        notifyURL: https://testapp8.rmscloud.com
        stationNumber: V400m-347312398
        guestId: 444
        reservationId: 100
        amount: 50
    rmsPayTerminalsTokenResponse:
      type: object
      properties:
        success:
          type: boolean
        token:
          type: string
        transactionReference:
          type: string
        cardType:
          type: string
        lastFourDigitsOfCard:
          type: integer
        merchantReference:
          type: string
        cardExpiry:
          type: string
        cardHolderName:
          type: string
        surchargeAmount:
          type: integer
      example:
        success: true
        token: RMS_771259547|S8WKS7NPWBM6GVT5
        transactionReference: Tm76001735255452007.W425T5HJ9W5X8N82
        cardType: MasterCard
        cardHolderName: AD YEN-JP
        lastFourDigitsOfCard: "0001"
        merchantReference: AB123
        cardExpiry: 02/28
        surchargeAmount: 0.0
    rmsPayTerminalsSale:
      required:
      - accountId
      - amount
      - propertyId
      - stationNumber
      - terminalId
      type: object
      properties:
        propertyId:
          type: integer
        accountId:
          type: integer
        terminalId:
          type: integer
        amount:
          type: string
        stationNumber:
          type: string
        merchantReference:
          type: string
        reservationId:
          type: integer
        notifyURL:
          type: string
      example:
        propertyId: 4
        accountId: 5127
        terminalId: 20
        amount: "1"
        stationNumber: V400m-347312398
        merchantReference: testMerchantRef
        notifyURL: https://testapp8.rmscloud.com
        reservationId: 100
    rmsPayTerminalsSaleResponse:
      type: object
      properties:
        success:
          type: boolean
        token:
          type: string
        transactionReference:
          type: string
        merchantReference:
          type: string
        cardType:
          type: string
        cardExpiry:
          type: string
        cardHolderName:
          type: string
        receiptData:
          type: array
          items:
            type: string
        surchargeAmount:
          type: integer
          format: decimal
        lastFourDigitsOfCard:
          type: string
      example:
        success: true
        token: RMS_753796809|ZDZ4T6D7PGLF6975
        transactionReference: PYgD001724643741003.K779PTXBNTGLNK82
        merchantReference: testMerchantRef
        cardType: MasterCard
        cardExpiry: 02/28
        cardHolderName: rms
        receiptData:
        - name=RMS%20Global&key=header1
        - name=Harrick%20Rd%20PASSED&key=header2
        - name=CARDHOLDER%20COPY&key=cardholderHeader
        - key=filler
        - name=Date&value=26%2f08%2f2024&key=txdate
        - name=Time&value=13%3a42%3a27&key=txtime
        - key=filler
        - name=Card&value=%2a%2a%2a%2a9999&key=pan
        - name=PAN%20seq.&value=33&key=panSeq
        - name=Pref.%20name&value=mc%20en%20gbr%20gbp&key=preferredName
        - name=Card%20type&value=mc&key=cardType
        - name=Payment%20method&value=mc&key=paymentMethod
        - name=Payment%20variant&value=mc&key=paymentMethodVariant
        - name=Entry%20mode&value=Contactless%20chip&key=posEntryMode
        - key=filler
        - name=AID&value=A000000004101001&key=aid
        - name=MID&value=50&key=mid
        - name=TID&value=V400m-347312398&key=tid
        - name=PTID&value=79973193&key=ptid
        - key=filler
        - name=Auth.%20code&value=123456&key=authCode
        - name=Tender&value=PYgD001724643741003&key=txRef
        - name=Reference&value=11207_testMerchantRef&key=mref
        - key=filler
        - name=Type&value=GOODS_SERVICES&key=txtype
        - name=TOTAL&value=%24%204.06&key=totalAmount
        - key=filler
        - name=APPROVED&key=approved
        - key=filler
        - name=Retain%20for%20your%20records&key=retain
        - name=Thank%20you&key=thanks
        surchargeAmount: 0.0
        lastFourDigitsOfCard: 1
    rmsPayTerminalsToken:
      required:
      - accountId
      - guestId
      - merchantReference
      - propertyId
      - stationNumber
      - terminalId
      type: object
      properties:
        propertyId:
          type: integer
        accountId:
          type: integer
        terminalId:
          type: integer
        merchantReference:
          type: string
        notifyURL:
          type: string
        stationNumber:
          type: string
        guestId:
          type: integer
        reservationId:
          type: integer
      example:
        propertyId: 4
        accountId: 5127
        terminalId: 20
        merchantReference: testMerchantRef
        notifyURL: https://testapp8.rmscloud.com
        stationNumber: V400m-347312398
        guestId: 444
        reservationId: 100
    rmsPayTerminalsStatus:
      type: object
      properties:
        success:
          type: boolean
        token:
          type: string
        transactionReference:
          type: string
        cardType:
          type: string
        lastFourDigitsOfCard:
          type: string
        cardExpiry:
          type: string
        surchargeAmount:
          type: integer
          format: decimal
      example:
        success: true
        token: RMS_682233020|ZBDB3J2SH5XBZX65
        transactionReference: Tm76001735255452007.W425T5HJ9W5X8N82
        cardType: Visa
        lastFourDigitsOfCard: "0001"
        cardExpiry: 03/30
        surchargeAmount: 0.0
    guestTokenSagePay:
      type: object
      properties:
        cardHolderName:
          type: string
        cardType:
          type: string
        description:
          type: string
        expiryDate:
          type: string
          description: You must pass the date in the fromat MM/YY for it to work
        lastFourDigitsOfCard:
          maxLength: 4
          type: integer
          description: Day value will be ignored
        relatedSecurityKey:
          type: string
        relatedTxAuthno:
          type: string
        relatedVendorTxCode:
          type: string
        relatedVPSTxId:
          type: string
        token:
          type: string
      example:
        cardHolderName: John Johnson
        cardType: VISA
        description: Customers Wifes card
        expiryDate: 08/20
        lastFourDigitsOfCard: 4589
        relatedSecurityKey: XXXXXXXXX
        relatedTxAuthno: "5555555555"
        relatedVendorTxCode: XXXPAYMENT-1556613026-815551635
        relatedVPSTxId: 9C7AC5AB-XXXX-XXXX-35B6-DECB9E946D59
        token: erer78er9+er3er6r3fedfr
    guestToken:
      type: object
      properties:
        cardHolderName:
          type: string
        cardType:
          type: string
        description:
          type: string
        expiryDate:
          type: string
          description: You must pass the date in the fromat MM/YY for it to work
        lastFourDigitsOfCard:
          maxLength: 4
          type: string
          description: Some gateways only require last 2 digits. in these cases append with ..
        merchantReference:
          type: string
        propertyId:
          type: integer
          description: The property ID the reservation is associated to
          format: int32
        token:
          type: string
      description: 'Used:'
      example:
        cardHolderName: John Johnson
        cardType: VISA
        description: Customers Wifes card
        expiryDate: 08/20
        lastFourDigitsOfCard: 4589
        merchantReference: AB12
        propertyId: 1
        token: erer78er9+er3er6r3fedfr
    guestsTokenPreAuth:
      type: object
      properties:
        cardType:
          type: string
        cardHolderName:
          type: string
        expiryDate:
          type: string
        lastFourDigitsOfCard:
          type: string
        merchantReference:
          type: string
        token:
          type: string
        propertyId:
          type: integer
        reservationId:
          type: integer
        preAuthAmount:
          type: number
          format: float
        transactionReference:
          type: string
      example:
        cardType: Visa
        cardHolderName: AD YEN
        expiryDate: 03/30
        lastFourDigitsOfCard: "0001"
        merchantReference: AB12
        token: RMS_XXXXX
        propertyId: 1
        reservationId: 225540
        preAuthAmount: 120.0
        transactionReference: XXXXXX
    guestsLoyaltyNightsEnrollment:
      type: object
      properties:
        guestId:
          type: integer
          format: int32
        loyaltyNumber:
          type: string
      example:
        guestId: 155
        loyaltyNumber: "4569"
    guestLoyaltySpendEnrolment:
      type: object
      properties:
        guestId:
          type: integer
          format: int32
        address1:
          type: string
        address2:
          type: string
        given:
          type: string
        surname:
          type: string
        postCode:
          type: string
        town:
          type: string
        state:
          type: string
        mobile:
          type: string
        birthday:
          type: string
          format: date-time
        email:
          type: string
        loyaltyNumber:
          type: string
      example:
        guestId: 155
        address1: "15"
        address2: somthing rd
        given: Steven
        surname: Peters
        postCode: "3045"
        town: keilor
        state: Vic
        mobile: +61458596548
        birthday: 2018-09-27 00:00:00
        email: apisupport@rmscloud.com
        loyaltyNumber: "4569"
    guestLoyaltySpend:
      type: object
      properties:
        activity:
          type: string
        amount:
          type: number
        date:
          type: string
          format: date-time
        description:
          type: string
        totalSpendForCalanderYear:
          type: number
        username:
          type: string
      example:
        activity: sign up credit
        amount: -25
        date: 2018-09-27
        description: Credit note 2
        totalSpendForCalanderYear: 12632
        username: '*hp'
    guestLoyaltySpendBalance:
      type: object
      properties:
        guestId:
          type: integer
          format: int32
        loyaltyNumber:
          type: integer
          format: int32
        currentCredit:
          type: number
          format: currency
        currentSpend:
          type: number
          format: currency
        remainingSpend:
          type: number
          format: currency
      example:
        guestId: 150595
        loyaltyNumber: 150595
        currentCredit: 0
        currentSpend: 0
        remainingSpend: 1818.5
    guestGiftCard:
      type: object
      properties:
        amount:
          type: integer
          format: number
        giftCardId:
          type: integer
          format: int32
        guestId:
          type: integer
          format: int32
        propertId:
          type: integer
          format: int32
        remainingAmount:
          type: integer
          format: number
      example:
        amount: 10.0
        giftCardId: 2
        guestId: 150595
        propertId: 1
        remainingAmount: 5.0
    guestCreditSearch:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
        propertyId:
          type: integer
          format: int32
      example:
        ids:
        - 141029
        - 149503
        - 150595
        propertId: 1
    guestCreditSearchResponse:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        guestId:
          type: integer
          format: int32
        amount:
          type: integer
          format: int32
        remainingAmount:
          type: integer
          format: int32
        description:
          type: string
        accountId:
          type: integer
          format: int32
        transactionId:
          type: integer
          format: int32
      example:
        propertyId: 1
        guestId: 141029
        amount: 7.0
        remainingAmount: 7.0
        description: "Receipt #283826"
        accountId: 386
        transactionId: 11
    guestCredit:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        amount:
          type: integer
          format: number
        description:
          type: string
        guestId:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
        remainingAmount:
          type: integer
          format: number
        transactionId:
          type: integer
          format: int32
      example:
        accountId: 346613
        amount: -50.0
        description: Credit Note 2022
        guestId: 150595
        propertId: 1
        remainingAmount: -50.0
        transactionId: 223
    guestMembershipBasic:
      type: object
      properties:
        guestId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        inactive:
          type: boolean
        level:
          type: integer
          format: int32
        membershipTypeId:
          type: integer
          format: int32
        membershipTypeName:
          type: string
        number:
          type: string
      description: "Used:<br>GET /guests/{id}/memberships<br>POST /guests/{id}/memberships<br>"
      example:
        guestId: 1384706
        id: 38824
        inactive: false
        level: 1
        membershipTypeId: 2
        membershipTypeName: ""
        number: ABC123
    roles:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
      example:
      - id: 1
        description: Capitain
      - id: 2
        description: Crew
      - id: 3
        description: Cleaners
    guestStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: Citizen
    guestTypes:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: Staff
    groupAllotmentsLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: Wedding
    groupAllotmentsBasic:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        bookingSourceId:
          type: integer
          format: int32
        city:
          type: string
        cityMasterId:
          type: integer
          format: int32
        competitorMasterId:
          type: integer
          format: int32
        countryId:
          type: integer
          format: int32
        createdById:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        email:
          type: string
        externalRefId:
          type: string
        fax:
          type: string
        inactive:
          type: boolean
        inactiveReason:
          type: string
        industryMasterId:
          type: integer
          format: int32
        marketSegmentId:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        phone:
          type: string
        postcode:
          type: string
        propertyId:
          type: integer
          format: int32
        salesSource:
          type: string
        state:
          type: string
        subMarketSegmentId:
          type: integer
          format: int32
        tradingAs:
          type: string
      example:
        id: 1
        name: Wedding
        address1: 35 fake street
        address2: West chester
        address3: North
        bookingSourceId: 5
        city: Melbourne
        cityMasterId: 68
        competitorMasterId: 32
        countryId: 2
        createdById: 23
        createdDate: 2018-09-05 13:05:00
        email: test@rscom.au
        externalRefId: b985698
        fax: 03 9882 5998
        inactive: true
        inactiveReason: Out of business
        industryMasterId: 4
        marketSegmentId: 3
        modifiedDate: 2018-09-05 13:25:00
        phone: +614 555 986 98
        postcode: "9568"
        propertyId: 1
        salesSourceId: 1
        state: Vic
        subMarketSegmentId: 5
        tradingAs: Webster enco
    groupAllotmentsAllotments:
      type: object
      properties:
        name:
          type: string
        availableFor:
          type: array
          items:
            type: string
            enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
        categoryAllotment:
          type: array
          items:
            $ref: '#/components/schemas/groupAllotmentCategoryAllotment'
        daysBeforeRelease:
          type: integer
          format: int32
        discountId:
          type: integer
          format: int32
        discountReasonId:
          type: integer
          format: int32
        doNotSellAboveAllotment:
          type: boolean
        fromDate:
          type: string
          format: date-time
        groupOptionId:
          type: integer
          format: int32
        groupStatus:
          type: string
          enum:
          - proposal
          - provisional
          - definite
        guaranteed:
          type: boolean
          description: If true this will detuct fron inventory
        rateId:
          type: integer
          format: int32
        releaseDate:
          type: string
          format: date-time
        releaseOptions:
          type: string
          enum:
          - daysBeforeRelease
          - releaseDate
        setPermanently:
          type: boolean
          description: If this to true the date from and to values will be ignored and this allotment will exist forever
        toDate:
          type: string
          format: date-time
        reportingADR:
          type: array
          items:
            type: integer
            format: int32
        categoryId:
          type: integer
          format: int32
      example:
      - name: Cheers
        availableFor:
        - tuesday
        - wednesday
        - friday
        categoryAllotment:
        - propertyId: 1
          allotment: 10
          allotmentId: 1242
          categoryId: 1
          categoryName: Deluxe 001
          fromDate: 2020-04-07 00:00:00
          toDate: 2020-04-07 00:00:00
        - propertyId: 1
          allotment: 5
          allotmentId: 1243
          categoryId: 3
          categoryName: Deluxe 003
          fromDate: 2020-04-07 00:00:00
          toDate: 2020-04-07 00:00:00
        - propertyId: 1
          allotment: 9
          allotmentId: 1244
          categoryId: 1
          categoryName: Deluxe 001
          fromDate: 2020-04-07 00:00:00
          toDate: 2020-04-07 00:00:00
        - propertyId: 1
          allotment: 5
          allotmentId: 1245
          categoryId: 2
          categoryName: Deluxe 002
          fromDate: 2020-04-07 00:00:00
          toDate: 2020-04-07 00:00:00
      - reportingADR:
        - categoryId: "4,"
          reportingADR: 200
        - categoryId: "2,"
          reportingADR: 200
        daysBeforeRelease: 40
        discountId: 3
        discountReasonId: 2
        doNotSellAboveAllotment: true
        fromDate: 2019-07-01 00:00:00
        groupOptionId: 82
        groupStatus: proposal
        guaranteed: true
        rateId: 1
        setPermanently: false
        toDate: 2019-07-03 00:00:00
      - reportingADR:
        - categoryId: "6,"
          reportingADR: 100
        - categoryId: "1,"
          reportingADR: 100
      - name: Special 2
        availableFor:
        - wednesday
        - friday
        categoryAllotment:
        - allotment: 6
          categoryId: 1
          categoryName: Deluxe 001
          fromDate: 2020-04-07 00:00:00
          toDate: 2020-04-07 00:00:00
        - allotment: 2
          categoryId: 3
          categoryName: Deluxe 003
          fromDate: 2020-04-07 00:00:00
          toDate: 2020-04-07 00:00:00
        - allotment: 3
          categoryId: 4
          categoryName: Deluxe 004
          fromDate: 2020-04-07 00:00:00
          toDate: 2020-04-07 00:00:00
        daysBeforeRelease: 0
        discountId: 0
        discountReasonId: 0
        doNotSellAboveAllotment: true
        fromDate: 2019-07-03 00:00:00
        groupStatus: provisional
        guaranteed: false
        rateId: 3
        releaseDate: 2019-07-03 00:00:00
        releaseOptions: releaseDate
        setPermanently: false
        toDate: 2019-07-04 00:00:00
    groupAllotmentCategoryAllotment:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        allotment:
          type: integer
          format: int32
        allotmentId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
    groupAllotmentDetails:
      required:
      - name
      - rateId
      type: object
      properties:
        availableFor:
          type: array
          items:
            type: string
            enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
        categoryAllotment:
          type: array
          items:
            $ref: '#/components/schemas/groupAllotmentCategory'
        daysBeforeRelease:
          type: integer
          format: int32
        discountId:
          type: integer
          format: int32
        discountReasonId:
          type: integer
          format: int32
        doNotSellAboveAllotment:
          type: boolean
        fromDate:
          type: string
          format: date-time
        groupAllotmentId:
          type: integer
          format: int32
        groupStatus:
          type: string
          enum:
          - proposal
          - provisional
          - definite
        guaranteed:
          type: boolean
          description: If true this will detuct fron inventory
        name:
          type: string
        toDate:
          type: string
          format: date-time
        rateId:
          type: integer
          format: int32
        releaseDate:
          type: string
          format: date-time
        releaseMethod:
          type: string
          enum:
          - daysBefore
          - specificDate
        setPermanently:
          type: boolean
          description: If this is set to true the date from and to values will be ignored and this allotment will exist forever
      description: "Used:<br>POST /groupAllotments/{id}/allotments"
      example:
        availableFor:
        - tuesday
        - wednesday
        - friday
        categoryAllotment:
        - allotment: 10
          categoryId: 1
          categoryName: Cat A
          fromDate: 2020-04-07 00:00:00
          propertyId: 1
          toDate: 2020-04-07 00:00:00
        - allotment: 5
          categoryId: 3
          categoryName: Cat C
          fromDate: 2020-04-07 00:00:00
          propertyId: 1
          toDate: 2020-04-07 00:00:00
        - allotment: 9
          categoryId: 1
          categoryName: Cat A
          fromDate: 2020-04-07 00:00:00
          propertyId: 1
          toDate: 2020-04-07 00:00:00
        - allotment: 5
          categoryId: 2
          categoryName: Cat B
          fromDate: 2020-04-07 00:00:00
          propertyId: 1
          toDate: 2020-04-07 00:00:00
        daysBeforeRelease: 40
        discountId: 3
        discountReasonId: 2
        doNotSellAboveAllotment: true
        fromDate: 2019-07-01 00:00:00
        groupAllotmentId: 0
        groupStatus: proposal
        guaranteed: true
        name: Cheers
        toDate: 2019-07-03 00:00:00
        rateId: 1
        releaseDate: 2019-07-03 00:00:00
        releaseMethod: specificDate
        setPermanently: false
    groupAllotmentCategory:
      type: object
      properties:
        allotment:
          type: integer
          format: int32
        allotmentId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        fromDate:
          type: string
          format: date-time
        propertyId:
          type: integer
          format: int32
        toDate:
          type: string
          format: date-time
      description: "Used:<br>POST /groupAllotments/{id}/allotments"
      example:
        allotment: 2
        allotmentId: 7564
        categoryId: 4
        categoryName: Test
        fromDate: 20-07-2020
        propertyId: 1
        toDate: 20-08-2020
    groupAllotmentCategoryAllotmentUpdates:
      type: object
      properties:
        allotment:
          type: integer
          format: int32
        allotmentId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        propertyId:
          type: integer
          format: int32
      example:
        allotment: 2
        allotmentId: 7564
        categoryId: 4
        fromDate: 20-07-2020
        toDate: 20-08-2020
        propertyId: 1
    groupAllotmentOptionPatch:
      type: object
      properties:
        availableFor:
          type: array
          items:
            type: string
            enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
        daysBeforeRelease:
          type: integer
          format: int32
        discountId:
          type: integer
          format: int32
        discountReasonId:
          type: integer
          format: int32
        doNotSellAboveAllotment:
          type: boolean
        fromDate:
          type: string
          format: date-time
        groupAllotmentId:
          type: integer
          format: int32
        groupOptionId:
          type: integer
          format: int32
        groupStatus:
          type: string
          enum:
          - NotSet
          - Proposal
          - Provisional
          - Definite
        guaranteed:
          type: boolean
        name:
          type: string
        rateId:
          type: integer
          format: int32
        releaseDate:
          type: string
          format: date-time
        releaseMethod:
          type: string
          enum:
          - daysBefore
          - specificDate
        setPermanently:
          type: boolean
        toDate:
          type: string
          format: date-time
        reportingADR:
          type: array
          items:
            type: integer
            format: int32
        categoryId:
          type: integer
          format: int32
      example:
        availableFor:
        - Friday
        - Tuesday
        daysBeforeRelease: 40
        discountId: 3
        discountReasonId: 2
        doNotSellAboveAllotment: false
        fromDate: 2019-07-01 00:00:00
        groupStatus: Proposal
        guaranteed: false
        name: Special 2
        rateId: 1
        releaseDate: 2019-07-03 00:00:00
        releaseMethod: specificDate
        setPermanently: false
        toDate: 2019-07-04 00:00:00
        reportingADR:
        - categoryId: "4,"
          reportingADR: 200
        - categoryId: "2,"
          reportingADR: 200
    groupAllotmentCategoryAllotmentCreation:
      type: object
      properties:
        allotment:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
      example:
        allotment: 0
        categoryId: 4
        fromDate: 20-07-2020
        toDate: 20-08-2020
    groupAllotmentRequirementArray:
      type: object
      properties:
        amount:
          type: number
          format: currency
        id:
          type: integer
          format: int32
        masterRequirementId:
          type: integer
          format: int32
        name:
          type: string
        quantity:
          type: integer
          format: int32
        requiredDaily:
          type: boolean
      example:
        amount: 15.0
        id: 66326
        masterRequirementId: 6119
        name: Much Cheddar
        quantity: 1
        requiredDaily: false
    groupAllotmentRequirementCreation:
      type: object
      properties:
        amount:
          type: number
          format: currency
        masterRequirementId:
          type: integer
          format: int32
        name:
          type: string
        quantity:
          type: integer
          format: int32
      example:
        amount: 0.0
        masterRequirementId: 51339
        name: Super Soft Body Pillow
        quantity: 1
    groupAllotmentRequirement:
      type: object
      properties:
        amount:
          type: number
          format: currency
        id:
          type: integer
          format: int32
        masterRequirementId:
          type: integer
          format: int32
        name:
          type: string
        quantity:
          type: integer
          format: int32
        requiredDaily:
          type: boolean
      example:
        amount: 15.0
        id: 66326
        masterRequirementId: 6119
        name: Much Cheddar
        quantity: 1
        requiredDaily: false
    groupAllotmentsGroupOptionsRates:
      type: object
      properties:
        rateIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        rateIds:
        - 1416
        - 1633
    allotmentSearch:
      type: object
      properties:
        createdFrom:
          type: string
          format: date-time
        createdTo:
          type: string
          format: date-time
        fromDate:
          type: string
          format: date-time
        ids:
          type: array
          items:
            type: integer
            format: int32
        modifiedFrom:
          type: string
          format: date-time
        modifiedTo:
          type: string
          format: date-time
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        toDate:
          type: string
          format: date-time
      description: Used:<br>POST /groupAllotments/allotments/search
      example:
        createdFrom: 2018-09-25 00:00:00
        createdTo: 2018-09-27 00:00:00
        fromDate: 2022-09-27 00:00:00
        modifiedFrom: 2018-09-25 00:00:00
        modifiedTo: 2018-09-27 00:00:00
        propertyIds:
        - 1
        - 2
        ids:
        - 12
        - 5
        - 702
        toDate: 2022-09-27 00:00:00
    groupAllotmentCompanies:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        companyId:
          type: integer
          format: int32
        companyName:
          type: string
      example:
        id: 22
        name: APT Group G1 11th & 12th Oct
        companyId: 44
        companyName: Mians
    companyIds:
      type: object
      properties:
        companyIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        companyIds:
        - 4
        - 12
        - 15
    groupAllotmentTravelAgents:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        travelAgentId:
          type: integer
          format: int32
        travelAgentName:
          type: string
    groupAllotmentAgentRequest:
      type: object
      properties:
        agentIds:
          type: array
          items:
            type: integer
            format: int32
    groupAllotmentWholesalers:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        wholesalerId:
          type: integer
          format: int32
        wholesalerName:
          type: string
    idTypes:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        shortDescription:
          type: string
        description:
          type: string
      example:
      - id: 1
        code: ABC123
        shortDescription: Type 1 Identifier
        description: Detailed description for Type 1 Identifier.
      - id: 2
        code: XYZ456
        shortDescription: Type 2 Identifier
        description: Detailed description for Type 2 Identifier.
    inventoryGroupingsSearch:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
      example:
        propertyId: 3
    inventoryGroupings:
      type: object
      properties:
        id:
          type: integer
          format: int32
        billingCategoryId:
          type: integer
          format: int32
        categories:
          type: array
          items:
            $ref: '#/components/schemas/inventoryGroupingsCategories'
        description:
          type: string
        categoryId:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
      example:
        id: 1
        billingCategoryId: 29
        categories:
        - categoryId: 28
          order: 1
        - categoryId: 29
          order: 2
        description: Kings & Queens
        categoryId: 58
        propertyId: 3
    inventoryGroupingsCategories:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        order:
          type: integer
          format: int32
      example:
      - categoryId: 28
        order: 1
      - categoryId: 29
        order: 2
    invoiceCancel:
      required:
      - invoiceId
      - propertyId
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        invoiceId:
          type: integer
          format: int32
        reasonId:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
      example:
        accountId: 361450
        invoiceId: 123
        propertyId: 1
        reasonId: 3
    invoiceCreate:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        accountType:
          type: string
          default: standard
          enum:
          - electric
          - extras
          - gas
          - kiosk
          - membership
          - pos
          - pabx
          - standard
          - water
      example:
        accountId: 5
        accountType: Accomm
    invoice:
      type: object
      properties:
        id:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        accountType:
          type: string
        cancelledDate:
          type: string
          description: if this field is populated with a real date then this invoice has been cancelled
          format: date-time
        guestId:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        invoiceAmount:
          type: integer
          format: decimal
        propertyId:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
      example:
        id: 1269
        accountId: 12990785
        accountType: Accomm
        cancelledDate: 1900-00-00 00:00:00
        guestId: 9984588
        companyId: 0
        createdDate: 2018-09-27 00:00:00
        invoiceAmount: 100.0
        propertyId: 2
        reservationId: 35421
    invoiceSearch:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
        accountIds:
          type: array
          items:
            type: integer
            format: int32
        cancelledFrom:
          type: string
          format: date-time
        cancelledTo:
          type: string
          format: date-time
        createdFrom:
          type: string
          format: date-time
        createdTo:
          type: string
          format: date-time
        propertyId:
          type: integer
          format: int32
        reservationIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        ids:
        - 12
        - 5
        - 702
        accountIds:
        - 1242
        - 5985
        - 702
        cancelledFrom: 2018-09-25 00:00:00
        cancelledTo: 2018-09-27 00:00:00
        createdFrom: 2018-09-25 00:00:00
        createdTo: 2018-09-27 00:00:00
        propertyId: 1
        reservationIds:
        - 12426
        - 454566
        - 646646
    invoiceEmail:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
        accountId:
          type: integer
          format: int32
        fromEmail:
          type: string
          description: "This field is optional, if this field is left empty we will send the email from the email configured under propertie options"
          format: email
        email:
          type: array
          items:
            type: string
      example:
        ids:
        - 545456
        - 45748
        accountId: 6456545
        fromEmail: test@test.com
        email:
        - apisupport@rms.com.au
        - apisupport@rmscloud.com
    labelArea:
      type: object
      properties:
        userDefined1:
          type: string
        userDefined2:
          type: string
        userDefined3:
          type: string
        userDefined4:
          type: string
        userDefined5:
          type: string
        userDefined6:
          type: string
        userDefined7:
          type: string
        userDefined8:
          type: string
        userDefined9:
          type: string
        userDefined10:
          type: string
      example:
        userDefined1: Bill ID
        userDefined2: Grandmas Name
        userDefined3: Birth country
        userDefined4: Spare key No
        userDefined5: File No
        userDefined6: Refrigerator id
        userDefined7: Owner name
        userDefined8: Ghost name
        userDefined9: Pancake
        userDefined10: Spoons
    labelAccounting:
      type: object
      properties:
        account1:
          type: string
        account2:
          type: string
        gas:
          type: string
        electricity:
          type: string
        water:
          type: string
        eftposManual:
          type: string
        eftposPaymentGateway:
          type: string
        cash2:
          type: string
        cash3:
          type: string
        cash4:
          type: string
        cash5:
          type: string
        cheque2:
          type: string
        cheque3:
          type: string
        cheque4:
          type: string
        cheque5:
          type: string
        directCredit:
          type: string
        directCredit2:
          type: string
        directCredit3:
          type: string
        directCredit4:
          type: string
        directCredit5:
          type: string
        tax:
          type: string
      example:
        account1: Accomm
        account2: Extras
        gas: Gas
        electricity: Elec
        water: Water
        eftposManual: EFTPOS
        eftposPaymentGateway: EFTPOS Machine
        cash2: Other Cash
        cash3: Cash 3
        cash4: Cash 4
        cash5: Cash 5
        cheque2: Other Cheque
        cheque3: Cheque 3
        cheque4: Cheque 4
        cheque5: Cheque 5
        directCredit: direct credit
        directCredit2: direct credit 2
        directCredit3: direct credit 3
        directCredit4: direct credit 4
        directCredit5: direct credit 5
        tax: GST
    labelAdditional:
      type: object
      properties:
        userDefined1:
          type: string
        userDefined2:
          type: string
        userDefined3:
          type: string
        userDefined4:
          type: string
        userDefined5:
          type: string
        userDefined6:
          type: string
        userDefined7:
          type: string
      example:
        userDefined1: Fancy Charge 1
        userDefined2: Fancy Charge 2
        userDefined3: Fancy Charge 3
        userDefined4: Fancy Charge 4
        userDefined5: Fancy Charge 5
        userDefined6: Fancy Charge 6
        userDefined7: Fancy Charge 7
    labelAsset:
      type: object
      properties:
        userDefined1:
          type: string
        userDefined2:
          type: string
        userDefined3:
          type: string
        userDefined4:
          type: string
        userDefined5:
          type: string
        userDefined6:
          type: string
        userDefined7:
          type: string
        userDefined8:
          type: string
        userDefined9:
          type: string
        userDefined10:
          type: string
      example:
        userDefined1: Computer
        userDefined2: Gum
        userDefined3: Phone
        userDefined4: Spare keys
        userDefined5: Calanders
        userDefined6: Tissues
        userDefined7: Bottles
        userDefined8: Headsets
        userDefined9: Pancake
        userDefined10: Lip balm
    labelCategory:
      type: object
      properties:
        userDefined1:
          type: string
        userDefined2:
          type: string
        userDefined3:
          type: string
        userDefined4:
          type: string
        userDefined5:
          type: string
        userDefined6:
          type: string
        userDefined7:
          type: string
        userDefined8:
          type: string
        userDefined9:
          type: string
      example:
        userDefined1: Bill ID
        userDefined2: Grandmas Name
        userDefined3: Birth country
        userDefined4: Spare key No
        userDefined5: File No
        userDefined6: Refrigerator id
        userDefined7: Owner name
        userDefined8: Ghost name
        userDefined9: Pancake
    labelGuest:
      type: object
      properties:
        userDefined1:
          type: string
        userDefined2:
          type: string
        userDefined3:
          type: string
        userDefined4:
          type: string
        userDefined5:
          type: string
        userDefined6:
          type: string
        userDefined7:
          type: string
        userDefined8:
          type: string
        userDefined9:
          type: string
        userDefined10:
          type: string
        userDefined11:
          type: string
        userDefined12:
          type: string
        userDefined13:
          type: boolean
        userDefined14:
          type: boolean
        userDefined15:
          type: string
          format: date-time
        userDefined16:
          type: string
          format: date-time
      example:
        userDefined1: Computer IP
        userDefined2: Mums address
        userDefined3: Phone
        userDefined4: Spare keys
        userDefined5: Calanders
        userDefined6: Tissues
        userDefined7: Bottles
        userDefined8: Headsets
        userDefined9: Pancakes
        userDefined10: Lip balm
        userDefined11: breakfast
        userDefined12: stationary kit
        userDefined13: false
        userDefined14: true
        userDefined15: 2018-08-25 17:25:00
        userDefined16: 2018-09-25 13:25:00
    labelIbe:
      type: object
      properties:
        accommodation:
          type: string
        dock:
          type: string
        site:
          type: string
      example:
        accommodation: Cabin
        dock: Jetty
        site: Site
    labelProperty:
      type: object
      properties:
        userDefined1:
          type: string
        userDefined2:
          type: string
        userDefined3:
          type: string
        userDefined4:
          type: string
        userDefined5:
          type: string
      example:
        userDefined1: Computer
        userDefined2: Gum
        userDefined3: Phone
        userDefined4: Spare keys
        userDefined5: Calanders
    labelReservation:
      type: object
      properties:
        userDefined1:
          type: string
        userDefined2:
          type: string
        userDefined3:
          type: string
        userDefined4:
          type: string
        userDefined5:
          type: string
        userDefined6:
          type: string
        userDefined7:
          type: string
        userDefined8:
          type: string
        userDefined9:
          type: string
        userDefined10:
          type: string
        userDefined11:
          type: boolean
        userDefined12:
          type: boolean
        userDefined13:
          type: boolean
        userDefined14:
          type: string
          format: date-time
        userDefined15:
          type: string
          format: date-time
        userDefined16:
          type: string
          enum:
          - Blank
          - "true"
          - "false"
      example:
        userDefined1: Computer IP
        userDefined2: Mums address
        userDefined3: Phone
        userDefined4: Spare keys
        userDefined5: Calanders
        userDefined6: Tissues
        userDefined7: Bottles
        userDefined8: Headsets
        userDefined9: Pancakes
        userDefined10: Lip balm
        userDefined11: false
        userDefined12: true
        userDefined13: true
        userDefined14: 2018-08-25 17:25:00
        userDefined15: 2018-08-25 17:25:00
        userDefined16: Blank
    labelSystem:
      type: object
      properties:
        abn:
          type: string
        activity:
          type: string
        addOn:
          type: string
        adult:
          type: string
        area:
          type: string
        arrive:
          type: string
        bannedList:
          type: string
        boat:
          type: string
        bookingSource:
          type: string
        businessSegment:
          type: string
        category:
          type: string
        child:
          type: string
        clientStatus:
          type: string
        client:
          type: string
        company:
          type: string
        companyUnknown:
          type: string
        coordinator1:
          type: string
        coordinator2:
          type: string
        depart:
          type: string
        dwelling:
          type: string
        edmFilter1OptOut:
          type: string
        edmFilter2OptOut:
          type: string
        edmFilter3OptOut:
          type: string
        eventName:
          type: string
        given:
          type: string
        groupName:
          type: string
        hold:
          type: string
        housekeeperNote:
          type: string
        housekeepingUnitOfTime:
          type: string
        infant:
          type: string
        loyalty:
          type: string
        maintenance:
          type: string
        mealPlan:
          type: string
        occupant:
          type: string
        otaRef1:
          type: string
        otaRef2:
          type: string
        otaRef3:
          type: string
        postcode:
          type: string
        postalCode:
          type: string
        privacyOptIn:
          type: string
        rate:
          type: string
        resNote:
          type: string
        resType:
          type: string
        reservation:
          type: string
        state:
          type: string
        sundry:
          type: string
        surname:
          type: string
        town:
          type: string
        travelAgent:
          type: string
        voucherNo.:
          type: string
        wholesaler:
          type: string
      example:
        abn: ABN
        activity: Exercise
        addOn: Add Ons
        adult: Adults
        area: Room
        arrive: Arrival
        bannedList: Black List
        boat: Jet Ski
        bookingSource: bkg source
        businessSegment: Business Segment
        category: Room Type
        child: Kids
        clientStatus: Guest Status
        client: Guest
        company: Company
        companyUnknown: Unknown
        coordinator1: Coordinator 1
        coordinator2: Coordinator 2
        depart: Departing
        dwelling: RV
        edmFilter1OptOut: EDM Filter 1 Opt Out
        edmFilter2OptOut: EDM Filter 2 Opt Out
        edmFilter3OptOut: EDM Filter 3 Opt Out
        eventName: Event Name
        given: First
        groupName: Group
        hold: Reserve
        housekeeperNote: Cleaning Note
        housekeepingUnitOfTime: Min
        infant: Infants
        loyalty: Loyalty
        maintenance: Out Of Order
        mealPlan: Meal Plan
        occupant: Occupant
        otaRef1: Online Number
        otaRef2: Customer number
        otaRef3: Channel manager number
        postcode: Zip Code
        postalCode: Postal Sort
        privacyOptIn: Privacy Opt In
        rate: Rate
        resNote: Reservation Notes
        resType: Reservation Type
        reservation: Reservation
        state: State
        sundry: Charges
        surname: Last Name
        town: City
        travelAgent: Agent
        voucherNo.: Voucher Number
        wholesaler: Wholesaler
    loyaltyLevel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        level:
          type: string
        minimumRequiredPoints:
          type: integer
          format: number
        multiplier:
          type: integer
          format: decimal
      example:
        id: 1
        level: Bronze
        minimumRequiredPoints: 200
        multiplier: "1.00"
    master:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        description:
          type: string
        shortDescription:
          type: string
      example:
        id: 1
        code: OOL
        description: Coolangatta
        shortDescription: Coolangatta
    franchises:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: Jim's Accommodation
    mealPlan:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
        code:
          type: string
        breakfast:
          type: boolean
        lunch:
          type: boolean
        dinner:
          type: boolean
      example:
        id: 2
        description: Breakfast
        code: BFST
        breakfast: true
        lunch: false
        dinner: false
    mealPlanSchedulesSearch:
      type: object
      properties:
        reservationIds:
          type: array
          items:
            type: integer
            format: int32
        dateFor:
          type: string
          format: date-time
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
      example:
        reservationIds:
        - 17117
        - 17118
        dateFor: 2022-09-04
        dateFrom: 2022-09-01
        dateTo: 2022-09-05
    mealPlanSchedulesSearchResponse:
      type: object
      properties:
        reservationId:
          type: integer
        mealPlanId:
          type: integer
        dates:
          type: array
          items:
            $ref: '#/components/schemas/mealPlanSearchResponseDates'
      example:
        reservationId: 1234
        mealPlanId: 12
        dates:
        - theDate: 2023-02-20
          mealPlanUpgradeId: 14
          startingMeal: Dinner
        - theDate: 2023-02-21
          mealPlanUpgradeId: 14
          startingMeal: ""
    mealPlanSearchResponseDates:
      type: object
      properties:
        theDate:
          type: string
          format: date
        mealPlanUpgradeId:
          type: integer
        startingMeal:
          type: string
          enum:
          - Breakfast
          - Lunch
          - Dinner
    membershipType:
      type: object
      properties:
        code:
          type: string
        membershipType:
          type: string
        level1Code:
          type: string
        level2Code:
          type: string
        level3Code:
          type: string
        level4Code:
          type: string
        level5Code:
          type: string
        level6Code:
          type: string
        level7Code:
          type: string
        level8Code:
          type: string
        level9Code:
          type: string
        level10Code:
          type: string
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        code: FF1
        membershipType: FrequentFlyer
        level1Code: Bronze
        level2Code: Silver
        level3Code: Gold
        level4Code: Platinum
        level5Code: Diamond
        level6Code: BETTER THA
        level7Code: ""
        level8Code: ""
        level9Code: ""
        level10Code: ""
        id: 1
        name: Frequent Flyer
    marketTypes:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: Test
    segment:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        inactive:
          type: boolean
        shortDescription:
          type: string
      example:
        id: 5
        name: Airlines
        code: AL
        inactive: false
        shortDescription: Airlines
    mandatoryField:
      type: object
      properties:
        entity:
          type: string
          enum:
          - Guest
          - Reservation
        name:
          type: string
        onCheckin:
          type: boolean
        onSave:
          type: boolean
      example:
      - entity: Guest
        name: Given
        onCheckin: false
        onSave: true
      - entity: Reservation
        name: Company
        onCheckin: true
        onSave: true
    messageCentreGuestPortalNotification:
      type: object
      properties:
        Body:
          type: string
        guestId:
          type: integer
          format: int32
        header1:
          type: string
        propertyId:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
        subject:
          type: string
      example:
        Body: An additonal Guest was added to this reservation
        guestId: 138500
        header1: COVID-19 Declaration
        propertyId: 1
        reservationId: 163706
        subject: COVID-19 Warning
    messageCentreGuestPortalNotificationResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        message:
          type: string
        propertyId:
          type: integer
          format: int32
        subject:
          type: string
      example:
        id: 15
        message: <p class="bold rmsRow">COVID-19 Declaration</p><br/>An additonal Guest was added to this reservation<br/>
        propertyId: 1
        subject: COVID-19 Warning
    agentLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      description: Return is based on ModelType.<br>Used:<br>GET /onlineAgents<br>GET /travelAgents<br>GET /wholesalers<br>
      example:
        id: 3
        name: GuestLink
    agentBasic:
      type: object
      properties:
        abn:
          type: string
          description: Australian Business Number
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        bookingSourceId:
          type: integer
          format: int32
        city:
          type: string
        cityMasterId:
          type: integer
          format: int32
        competitorMasterId:
          type: integer
          format: int32
        countryId:
          type: integer
          format: int32
        email:
          type: string
        externalRefId:
          type: string
        fax:
          type: string
        iataNumber:
          type: string
        id:
          type: string
        inactive:
          type: boolean
        inactiveReason:
          type: string
        industryMasterId:
          type: integer
          format: int32
        marketSegmentId:
          type: integer
          format: int32
        name:
          type: string
        phone:
          type: string
        postcode:
          type: string
        salesSource:
          type: string
        state:
          type: string
        subMarketSegmentId:
          type: integer
          format: int32
        tradingAs:
          type: string
        userDefined1:
          maxLength: 20
          type: string
        userDefined2:
          maxLength: 50
          type: string
        userDefined3:
          maxLength: 50
          type: string
        userDefined4:
          maxLength: 50
          type: string
        userDefined5:
          maxLength: 50
          type: string
      description: Return is based on ModelType.<br>Used:<br>GET /onlineAgents<br>GET /travelAgents<br>GET /wholesalers<br>
      example:
        abn: tr34937874937
        address1: "Level 4, 1230 Nepean Hwy"
        address2: ""
        address3: ""
        bookingSourceId: 4
        city: Cheltenham
        cityMasterId: 2
        competitorMasterId: 8
        countryId: 2
        email: fake@test.com.au
        externalRefId: 4dfsf
        fax: 25654 54568
        iataNumber: 5dfddg
        id: 3
        inactive: false
        inactiveReason: out of business
        industryMasterId: 7
        marketSegmentId: 2
        name: GuestLink
        phone: 03 1234 56987
        postcode: 2364a
        salesSource: westmeadows
        state: Vic
        subMarketSegmentId: 5
        tradingAs: front
        userDefined1: String 20
        userDefined2: String 50
        userDefined3: String 50
        userDefined4: String 50
        userDefined5: String 50
    origin:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        description:
          type: string
        shortDescription:
          type: string
      example:
        id: 1
        code: AMO
        description: Austrian Main Office on level 3
        shortDescription: Coolangatta the bestest place evs
    paymentModes:
      type: object
      properties:
        billTo:
          type: array
          items:
            $ref: '#/components/schemas/paymentModesBillTo'
        kiosk:
          type: array
          items:
            $ref: '#/components/schemas/paymentModesKiosk'
        inactive:
          type: boolean
        id:
          type: integer
          format: int32
        code:
          type: string
        description:
          type: string
      example:
        billTo:
          account1: company
          account2: client
          phone: company
          electricty: company
          gas: company
          water: company
        kiosk:
          payAtArrival: LocalTaxesOnly
          payAtDeparture: NoCharge
        inactive: false
        id: 7
        code: Accom To Company Pay Own Extras
        description: GREAT PAYMENT MODE
    paymentModesBillTo:
      type: object
      properties:
        account1:
          type: string
        account2:
          type: string
        phone:
          type: string
        electricty:
          type: string
        gas:
          type: string
        water:
          type: string
    paymentModesKiosk:
      type: object
      properties:
        payAtArrival:
          type: string
          enum:
          - NoCharge
          - LocalTaxesOnly
          - FullRateIncAllTaxes
        payAtDeparture:
          type: string
          enum:
          - NoCharge
          - AllBalances
          - UseBillTo
    propertiesLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        inactive:
          type: boolean
      example:
        id: 1
        name: Mexican Shores
        inactive: true
    propertiesBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        accountingDate:
          type: string
          format: date-time
        inactive:
          type: boolean
        code:
          type: string
        rmsClientId:
          type: integer
        timeZoneId:
          type: string
        useSecondaryCurrency:
          type: string
          description: useDefault
          enum:
          - useDefault
          - "true"
          - "false"
      example:
        id: 1
        name: Mexican Shores
        accountingDate: 2019-09-25 17:25:00
        inactive: true
        code: 2598r
        rmsClientId: "11281"
        timeZoneId: AUS Eastern Standard Time
        useSecondaryCurrency: useDefault
    propertiesFull:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        abn:
          type: string
          description: Australian Business Number
        accountingDate:
          type: string
          format: date-time
        inactive:
          type: boolean
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        addressLine4:
          type: string
        city:
          type: string
        code:
          type: string
        countryId:
          type: integer
          format: int32
        email:
          type: string
        groupId:
          type: integer
          format: int32
        latitude:
          type: string
        longitude:
          type: string
        mobile:
          type: string
        phone:
          type: string
        postcode:
          type: string
        pricingOption:
          type: string
        clientId:
          type: integer
        state:
          type: string
        timeZone:
          type: string
        useSecondaryCurrency:
          type: string
          description: useDefault
          enum:
          - useDefault
          - "true"
          - "false"
      example:
        id: 1
        name: Mexican Shores
        abn: 123 123 15
        accountingDate: 2019-09-25 17:25:00
        inactive: true
        addressLine1: "116"
        addressLine2: Harrick Road
        addressLine3: ""
        addressLine4: ""
        city: Keilor Park
        code: 2598r
        country: Australia
        email: apisupport@rms.com.au
        groupingId: 2
        latitude: "-37.723050"
        longitude: "144.845970"
        mobile: +61412345123
        phone: 03 1245 4589
        postcode: 32A45
        pricingOption: Use Property
        rmsClientId: "11281"
        state: Vic
        timeZoneId: AUS Eastern Standard Time
        useSecondaryCurrency: useDefault
    creditCardFeeSearch:
      type: object
      properties:
        cardIds:
          type: array
          items:
            type: integer
            format: int32
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
      description: Used:<br>POST /properties/creditCards/fees/search
      example:
        cardIds:
        - 3
        propertyIds:
        - 0
        - 1
    creditCardFee:
      type: object
      properties:
        cardId:
          type: integer
          format: int32
        cardName:
          type: string
        gatewayTransactionFee:
          type: number
          format: currency
        glCodeId:
          type: integer
          format: int32
        merchantFeeNoGreaterThan:
          type: number
          format: currency
        merchantFeePercentage:
          type: number
          format: currency
        propertyid:
          type: integer
          format: int32
      description: "Used:<br>GET /properties/{id}/creditCards/fees<br>POST /properties/creditCards/fees/search"
      example:
        cardId: 3
        cardName: Amex
        gatewayTransactionFee: 10.0
        glCodeId: 37
        merchantFeeNoGreaterThan: 0.0
        merchantFeePercentage: 0.0
        propertyId: 1
    covidAckowledgement:
      type: object
      properties:
        acknowledgementQuestion1:
          type: string
        acknowledgementQuestion2:
          type: string
        acknowledgementQuestion3:
          type: string
        acknowledgementQuestion4:
          type: string
        acknowledgementQuestion5:
          type: string
        acknowledgementQuestion6:
          type: string
        acknowledgementQuestion7:
          type: string
        acknowledgementQuestion8:
          type: string
        acknowledgementQuestion9:
          type: string
        acknowledgementQuestion10:
          type: string
      example:
        acknowledgementQuestion1: Do you declare you have not been overseas in the past 14 days?
        acknowledgementQuestion2: Do you declare you have not been interstate in the past 14 days?
        acknowledgementQuestion3: Do you declare you are not required to be in self-isolation/self-quarantine?
        acknowledgementQuestion4: Do you declare you have not previously been diagnosed with COVID-19?
        acknowledgementQuestion5: "Do you declare to the best of you knowledge, you have not been in close contact with a person who has a reported or suspected case of coronavirus (COVID-19) in the past 14 days?"
        acknowledgementQuestion6: Do you declare you have not been in a COVID-19 hotspot (as defined by the Chief Health Officer) in the past 14 days?
        acknowledgementQuestion7: "Do you declare you have not had a fever, cough, sore throat, shortness of breath or other cold/flu-like symptoms in the last 72 hours and are otherwise well?"
        acknowledgementQuestion8: Do yu declare you are healthy?
        acknowledgementQuestion9: Do you declare you have not been in contact with anyone unhealthy?
        acknowledgementQuestion10: Do you declare you have no symptons of sickness?
    addOnCategory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        propertyId:
          type: integer
      description: "Used:<br>GET /properties/{id}/addOnType"
      example:
        id: 50
        name: Car Park
        propertyId: 1
    creditCard:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 5
        name: Visa
    currency:
      type: object
      properties:
        primaryCurrencyId:
          type: integer
          format: int32
        primaryCurrencySymbol:
          type: string
        primaryCurrencyName:
          type: string
        PrimaryCurrencyDescription:
          type: string
        secondaryCurrencyId:
          type: integer
          format: int32
        secondaryCurrencySymbol:
          type: string
        secondaryCurrencyName:
          type: string
        secondaryCurrencyDescription:
          type: string
    propertiesIbePoliciesAndSettings:
      type: object
      properties:
        businessFacilities:
          type: string
        carParking:
          type: string
        description:
          type: string
        features:
          type: string
        petPolicy:
          type: string
        terms:
          type: string
        thingsToDo:
          type: string
        cancellationPolicy:
          type: string
        userDefined1:
          type: string
        userDefined2:
          type: string
        userDefined3:
          type: string
        userDefined4:
          type: string
        userDefined5:
          type: string
        allowGroupBookings:
          type: boolean
        childrenAllowed:
          type: boolean
        currency:
          type: string
        currencySymbol:
          type: string
        defaultArrivalTime:
          type: string
          format: date-time
        defaultDepartTime:
          type: string
          format: date-time
        gatewayId:
          type: integer
        latitude:
          type: string
        longitude:
          type: string
        maxChildAge:
          type: string
        maxInfantAge:
          type: string
        minAgeRequiredToBook:
          type: integer
        petsAllowed:
          type: boolean
        redirectionURL:
          type: string
        smokingAllowed:
          type: boolean
        maxGroupBookings:
          type: integer
        googleAnalyticsCode:
          type: string
      example:
        businessFacilities: This isn't a place for business.
        carParking: No specific car parking information provided.
        description: Rachel's Ritzy Resort is a class above the rest!!!
        features: "Party-friendly environment, suitable for groups."
        petPolicy: No pets allowed.
        terms: Standard terms apply.
        thingsToDo: PARTY!
        cancellationPolicy: Standard cancellation policy applies.
        userDefined1: "The Thing #1"
        userDefined2: "The Thing #2"
        userDefined3: "The Thing #3"
        userDefined4: "The Thing #4"
        userDefined5: "The Thing #5"
        allowGroupBookings: true
        childrenAllowed: true
        currency: AUD
        currencySymbol: $
        defaultArrivalTime: 1900-01-01T15:00:00Z
        defaultDepartTime: 1900-01-02T11:00:00Z
        gatewayId: 4
        latitude: Not provided
        longitude: Not provided
        maxChildAge: "3"
        maxInfantAge: 3 years
        minAgeRequiredToBook: 21
        petsAllowed: true
        redirectionURL: Not applicable
        smokingAllowed: true
        maxGroupBookings: 4
        googleAnalyticsCode: UA-3404912-1
    propertiesPosEndOfDay:
      type: object
      properties:
        posEndOfDay:
          type: string
          format: date-time
        propertyId:
          type: integer
          format: int32
      example:
        posEndOfDay: 2021-06-18 00:00:00
        propertyId: 1
    propertiesPosEndOfDayUpdate:
      required:
      - posEndOfDay
      type: object
      properties:
        posEndOfDay:
          type: string
          format: date-time
        propertyId:
          type: integer
          description: This field is informational only and not required in the request body
          format: int32
      example:
        posEndOfDay: 2021-06-18 00:00:00
        propertyId: 1
    propertiesEBanquetEndOfDay:
      type: object
      properties:
        eBanquetEndOfDay:
          type: string
          format: date-time
        propertyId:
          type: integer
          format: int32
      example:
        eBanquetEndOfDay: 2021-06-18 00:00:00
        propertyId: 1
    propertiesEBanquetEndOfDayUpdate:
      required:
      - eBanquetEndOfDay
      type: object
      properties:
        eBanquetEndOfDay:
          type: string
          format: date-time
        propertyId:
          type: integer
          description: This field is informational only and not required in the request body
          format: int32
      example:
        eBanquetEndOfDay: 2021-06-18 00:00:00
        propertyId: 1
    propertiesAccounting:
      type: object
      properties:
        taxOption:
          type: string
          enum:
          - TaxInclusive
          - TaxExclusive
        allowPOSChargeToRoom:
          type: boolean
        MaxPOSAmountForStay:
          type: number
          format: currency
        posAccountId:
          type: integer
          format: int32
        cashAccountId:
          type: integer
          format: int32
        allowSplitAccounts:
          type: boolean
        allowedAccountTypes:
          $ref: '#/components/schemas/propertiesAccounting_allowedAccountTypes'
      example:
        TaxOption: TaxInclusive
        allowPOSChargeToRoom: true
        maxPOSAmountForStay: 0.0
        posAccountId: 131353
        cashAccountId: 124752
        allowSplitAccounts: true
        allowedAccountTypes:
          accommodation: true
          extras: true
          gas: true
          electricity: true
          water: true
          pabx: true
        postToAccommodationAccount:
          accommodation: true
          extras: false
          gas: false
          electricity: false
          water: false
          pabx: true
    ibeAdditional:
      type: object
      properties:
        maxChildAge:
          type: integer
          format: int32
        maxInfantAge:
          type: integer
          format: int32
        showAdditionalCharge1:
          type: boolean
        showAdditionalCharge2:
          type: boolean
        showAdditionalCharge3:
          type: boolean
        showAdditionalCharge4:
          type: boolean
        showAdditionalCharge5:
          type: boolean
        showAdditionalCharge6:
          type: boolean
        showAdditionalCharge7:
          type: boolean
        showChildren:
          type: boolean
        showInfants:
          type: boolean
      description: "Used: GET /properties/{id}/ibe/additionals"
      example:
        maxChildAge: 11
        maxInfantAge: 5
        showAdditionalCharge1: true
        showAdditionalCharge2: true
        showAdditionalCharge3: false
        showAdditionalCharge4: false
        showAdditionalCharge5: false
        showAdditionalCharge6: false
        showAdditionalCharge7: false
        showChildren: true
        showInfants: false
    addOnTypeLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        propertyId:
          type: integer
      description: "Used:<br>GET /properties/{id}/ibe/addOnType (End Point comment out)"
      example:
        id: 50
        name: Car Park
        propertyId: 1
    itemLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      description: "Used:GET /properties/{id}/ibe/bookingSources"
      example:
        id: 1
        name: Return Guest
    ibeReservationFees:
      type: object
      properties:
        creditCardCommission:
          type: integer
          description: This value represents a percentage of the total rate.
          format: decimal
        onlineReservationFee:
          type: integer
          format: decimal
        sundryId:
          type: integer
          format: int32
      example:
        creditCardCommission: 2.66
        onlineReservationFee: 1.5
        sundryId: 2
    policy:
      type: object
      properties:
        businessFacilities:
          format: string
        carParking:
          format: string
        cancellationPolicy:
          format: string
        description:
          format: string
        directions:
          format: string
        features:
          format: string
        petPolicy:
          format: string
        terms:
          format: string
        thingsToDo:
          format: string
      example:
        businessFacilities: This section will outline Business Facilities.
        carParking: "There is a charge for extra vehicles, daily parking and other space consuming devices which accompany travelers, except for those which are exempt from extra charges."
        cancellationPolicy: "CANCELLATION POLICY - cancellation is free of charge up to 48 hours prior to 2pm on your arrival date. Any booking modifications, including date changes and/or a full cancellation of your booking made within 48 hours of 2pm on your arrival date will incur a charge of the first night booked. Any booking modifications requested after check in must occur at least 48 hours prior to the change taking place to avoid any charges. NO SHOW POLICY - Failure to arrive at the property, on the booked check-in date, will be treated as a no-show and will incur the first night charge. Please note the remainder of the booking will be cancelled."
        description: Rachel's Ritzy Resort is a class above the rest!!!
        directions: "Travel Directions for guests. For easiest access to the property the best route to follow to arrive safely is the most direct route which comes in from the south, as this is the only route which provides road access, although many of you may wish to take the scenic alternative"
        features: This section will outline Property Features.
        petPolicy: Those pets which have returned from the taxidermist and now exhibit none of their former feral aromas or lifestyle are most welcome.  These beasts must be restrained at all times and are not allowed outside at any time without close attentive supervision.
        terms: "AFTER-HOURS ARRIVALS - reception hours are from 8am to 6pm daily. If you are arriving outside of these hours, please contact the lodge at least 24 hours prior to 2pm on your arrival date to arrange an after-hours key collection. CHECK-IN POLICY - The person who's name the room was booked under must be present and part of the travelling party staying at the lodge. THIRD PARTY PAYMENT POLICY - If any room nights or additional charges are to be paid for by a third party, or anyone else other than the person who's name the booking was made under, the lodge must be notified more than 48 hours prior to 2pm on your arrival date."
        thingsToDo: Outlines things to do at the property.
    ibeRequirement:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        displayOrder:
          type: integer
          format: int32
        excludeFromDeposit:
          type: boolean
        longDescription:
          type: string
      example:
        id: 7
        name: Chapagne & Chochlates
        displayOrder: 2
        excludeFromDeposit: false
        longDescription: Chapagne & Chochlates on arrival in your room
    ibeSetting:
      type: object
      properties:
        allowGroupBookings:
          type: boolean
        childrenAllowed:
          type: boolean
        currency:
          type: string
        currencySymbol:
          type: string
        defaultArrivalTime:
          type: string
          format: date-time
        defaultDepartTime:
          type: string
          format: date-time
        gatewayID:
          type: integer
          format: int32
        latitude:
          type: string
        longitude:
          type: string
        maxChildAge:
          type: string
        maxInfantAge:
          type: string
        minAgeRequiredToBook:
          type: integer
          format: int32
        petsAllowed:
          type: boolean
        redirectionURL:
          type: string
        smokingAllowed:
          type: boolean
        MaxGroupBookings:
          type: integer
          format: int32
        googleAnalyticsCode:
          type: string
    propertiesSettingsPayments:
      type: object
      properties:
        propertyId:
          type: integer
        gatewayId:
          type: string
          enum:
          - NotSet
          - eMatters
          - OPayo
          - XCharge
          - Windcave
          - TGate
          - PayPal
          - RMS
          - HDFCBank
          - BrainTree
          - GKSolutions
          - CommBank
          - Stripe
          - RMSVault
          - Payfort
          - Elavon
          - RedDo
          - Tyro
          - BridgePay
          - NGenius
          - OPayoHP
          - MXFiftyOne
          - RMSMerchantFacility
          - Till
          - Wallee
          - RazorPay
          - RMSPay
          - Evo
          - FreedomPay
          - Adyen
          - Shift4
          - PayFast
          - Verifone
        preAuthorizationAmount:
          type: number
          format: float
        preAuthorizationType:
          type: string
          enum:
          - DefaultPreAuthorizationAmount
          - AmountPerReservation
          - AmountPerNightsStay
          - AmountPerAdult
          - FirstNightAccommodation
          - PercentageOfTotalRate
          - TotalRatePlusAmountPerNight
          - TotalRatePlusPercentageOfTotalRate
        preAuthorizationOnCheckInWarning:
          type: boolean
      example:
        propertyId: 1
        gatewayId: RMSPay
        preAuthorizationAmount: 100.0
        preAuthorizationType: AmountPerNightsStay
        preAuthorizationOnCheckInWarning: true
    rateTypeLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: BAR
    rateTypeFull:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        arrivingOnSunday:
          type: boolean
        arrivingOnMonday:
          type: boolean
        arrivingOnTuesday:
          type: boolean
        arrivingOnWednesday:
          type: boolean
        arrivingOnThursday:
          type: boolean
        arrivingOnFriday:
          type: boolean
        arrivingOnSaturday:
          type: boolean
        bestAvailableRate:
          type: boolean
          description: BAR
        bookingSourceId:
          type: integer
          format: int32
        cancellationPolicyId:
          type: integer
          format: int32
        code:
          type: string
        contractedRate:
          type: boolean
        discountId:
          type: integer
          format: int32
        doNotAllowBaseRateToBeOverridden:
          type: boolean
        doNotUseAsPromoCode:
          type: boolean
        gLAccountCodeId:
          type: integer
          format: int32
        groupingId:
          type: integer
          format: int32
        inactive:
          type: boolean
        linkedRateTypeId:
          type: integer
          format: int32
        long Description:
          type: string
        marketSegmentId:
          type: integer
          format: int32
        mealPlanId:
          type: integer
          format: int32
        noDiscountAllowed:
          type: boolean
        AdvancePurchaseNights:
          type: integer
          format: int32
        LastMinuteNights:
          type: integer
          format: int32
        onlyAvailableToMembers:
          type: boolean
        showAvailabilityAsTicksForIbe:
          type: boolean
        startEachRatePeriodFromNightOneOnRateTable:
          type: boolean
        subMarketSegmentId:
          type: integer
          format: int32
        rateChargeDescription:
          type: string
        rateStructure:
          type: string
          enum:
          - otaRate
          - directRate
      example:
        id: 112
        name: Bed & Breakfast.
        arrivingOnSunday: true
        arrivingOnMonday: true
        arrivingOnTuesday: true
        arrivingOnWednesday: true
        arrivingOnThursday: true
        arrivingOnFriday: true
        arrivingOnSaturday: true
        bestAvailableRate: true
        bookingSourceId: 3
        cancellationPolicyId: 1
        code: B2
        contractedRate: false
        discountId: 7
        doNotAllowBaseRateToBeOverridden: false
        doNotUseAsPromoCode: false
        gLAccountCodeId: 32
        groupingId: 3
        inactive: false
        linkedRateTypeId: 4
        long Description: Includes continental buffet breakfast for 2
        marketSegmentId: 6
        mealPlanId: 2
        noDiscountAllowed: true
        AdvancePurchaseNights: 30
        LastMinuteNights: 0
        onlyAvailableToMembers: true
        showAvailabilityAsTicksForIbe: false
        startEachRatePeriodFromNightOneOnRateTable: true
        subMarketSegmentId: 4
        rateChargeDescription: Bed & Breakfast.
        rateStructure: directRate
    ratesConfigurationsSearch:
      required:
      - propertyIds
      type: object
      properties:
        rateIds:
          type: array
          items:
            type: integer
        propertyIds:
          type: array
          items:
            type: integer
        agentId:
          type: integer
      example:
        rateIds: []
        propertyIds:
        - 1
        - 3
        agentId: 2673
    ratesConfigurationsSearchResponse:
      type: object
      properties:
        rates:
          type: array
          items:
            $ref: '#/components/schemas/ratesConfigurationsSearchResponse_rates'
      example:
        rates:
        - rateId: 1439
          propertyId: 1
          longDescription: My Derived Rate Long Description
          rateChargeDescription: My Derived Rate
          isDeal: true
          cancellationPolicyId: 4
          advancePurchaseNights: 3
          lastMinuteNights: 1
          marketSegmentId: 64
          mealPlanId: 4
          discountId: 0
          bookingSourceId: 200
          glCodeId: 23
          url: https://www.google.com/
          categories:
          - categoryId: 1
            allYearRound: true
          - categoryId: 4
            allYearRound: true
          days:
          - day: Monday
            arrive: true
            minimumStay: 2
            maximumStay: 0
          - day: Tuesday
            arrive: true
            minimumStay: 2
            maximumStay: 0
          - day: Wednesday
            arrive: true
            minimumStay: 2
            maximumStay: 0
          - day: Thursday
            arrive: true
            minimumStay: 2
            maximumStay: 0
          - day: Friday
            arrive: true
            minimumStay: 2
            maximumStay: 0
          - day: Saturday
            arrive: true
            minimumStay: 2
            maximumStay: 0
          - day: Sunday
            arrive: true
            minimumStay: 2
            maximumStay: 0
          madeDateWindow:
          - dateFrom: 2025-01-02 00:00:00
            dateTo: 2025-01-31 23:59:00
          deposit:
            activationType: NightOfTheWeek
            dayOfWeekConfiguration:
              sunday:
                dueDays: 0
                dueDaysType: FromReservationMade
                amount: 200.0
                percentage: 20.0
                amountType: TotalOrPercent
              monday:
                dueDays: 0
                dueDaysType: FromReservationMade
                amount: 100.0
                percentage: 10.0
                amountType: TotalOrPercent
              tuesday:
                dueDays: 0
                dueDaysType: FromReservationMade
                amount: 100.0
                percentage: 10.0
                amountType: TotalOrPercent
              wednesday:
                dueDays: 0
                dueDaysType: FromReservationMade
                amount: 100.0
                percentage: 10.0
                amountType: TotalOrPercent
              thursday:
                dueDays: 0
                dueDaysType: FromReservationMade
                amount: 200.0
                percentage: 20.0
                amountType: TotalOrPercent
              friday:
                dueDays: 1
                dueDaysType: PriorToArrival
                firstXNights: 1
                amountType: FirstXNights
              saturday:
                dueDays: 0
                dueDaysType: PriorToArrival
                amount: 1000.0
                amountType: PerWeekOrPart
            secondDeposit:
              dueDays: 0
              dueDaysType: FromReservationMade
              amountType: AccountBalance
        - rateId: 1433
          propertyId: 1
          longDescription: BAR USD Long Desc
          rateChargeDescription: BAR USD
          isDeal: false
          cancellationPolicyId: 3
          advancePurchaseNights: 7
          lastMinuteNights: 3
          marketSegmentId: 82
          mealPlanId: 2
          discountId: 65
          bookingSourceId: 9
          glCodeId: 389
          url: ""
          categories:
          - categoryId: 1
            dateFrom: 2025-01-01 00:00:00
            dateTo: 2025-01-31 23:59:59
            allYearRound: false
          - categoryId: 2
            allYearRound: true
          days:
          - day: Monday
            arrive: true
            minimumStay: 3
            maximumStay: 4
          - day: Tuesday
            arrive: true
            minimumStay: 3
            maximumStay: 4
          madeDateWindow:
          - dateFrom: 2024-12-04 23:59:00
            dateTo: 2025-01-01 23:59:00
          deposit:
            activationType: ArrivingOn
            dayOfWeekConfiguration:
              sunday:
                dueDays: 0
                dueDaysType: FromReservationMade
                amount: 500.0
                percentage: 100.0
                amountType: TotalOrPercent
              monday:
                dueDays: 0
                dueDaysType: FromReservationMade
                amount: 300.0
                percentage: 75.0
                amountType: TotalOrPercent
              saturday:
                dueDays: 0
                dueDaysType: FromReservationMade
                amount: 0.0
                percentage: 100.0
                amountType: TotalOrPercent
            secondDeposit:
              dueDays: 0
              dueDaysType: FromReservationMade
              amount: 100.0
              percentage: 10.0
              amountType: TotalOrPercent
    rateElements:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        description:
          type: string
      example:
        id: 1
        code: RE1
        description: Rate Element 1
    rateTable:
      type: object
      properties:
        id:
          type: integer
          format: int32
        basedOn:
          type: string
        cancellationPolicyId:
          type: integer
          format: int32
        description:
          type: string
        format:
          type: string
        inactive:
          type: boolean
        minimumChargePerPeriod:
          type: integer
          format: currency
        personBase:
          type: integer
          format: int32
        mondayRate:
          type: integer
          format: currency
        tuesdayRate:
          type: integer
          format: currency
        wednesdayRate:
          type: integer
          format: currency
        thursdayRate:
          type: integer
          format: currency
        fridayRate:
          type: integer
          format: currency
        saturdayRate:
          type: integer
          format: currency
        sundayRate:
          type: integer
          format: currency
      example:
        id: 21
        basedOn: Night Of Week
        cancellationPolicyId: 3
        description: 10 Degrees Warmer LS
        format: Nightly
        inactive: false
        minimumChargePerPeriod: 0.0
        personBase: 2
        mondayRate: 375.0
        tuesdayRate: 375.0
        wednesdayRate: 375.0
        thursdayRate: 375.0
        fridayRate: 475.0
        saturdayRate: 475.0
        sundayRate: 375.0
    rateTablesSearch:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
        inactive:
          type: boolean
      example:
        ids:
        - 1
        - 15
        - 2
        inactive: false
    rateTablesAdditionalsSearch:
      type: object
      properties:
        tableIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        tableIds:
        - 1
        - 15
        - 2
    rateTableAddtionals:
      type: object
      properties:
        tableId:
          type: integer
        inactive:
          type: boolean
        adults:
          $ref: '#/components/schemas/rateTableAddtionals_adults'
        children:
          $ref: '#/components/schemas/rateTableAddtionals_adults'
        infants:
          $ref: '#/components/schemas/rateTableAddtionals_adults'
        rateCharge1:
          $ref: '#/components/schemas/rateTableAddtionals_adults'
        rateCharge2:
          $ref: '#/components/schemas/rateTableAddtionals_adults'
        rateCharge3:
          $ref: '#/components/schemas/rateTableAddtionals_adults'
        rateCharge4:
          $ref: '#/components/schemas/rateTableAddtionals_adults'
        rateCharge5:
          $ref: '#/components/schemas/rateTableAddtionals_adults'
        rateCharge6:
          $ref: '#/components/schemas/rateTableAddtionals_adults'
        rateCharge7:
          $ref: '#/components/schemas/rateTableAddtionals_adults'
      example:
        tableId: 2494
        inactive: false
        adults:
          base: 6
          glAccountCodeId: 0
          includeInBase: false
          minimumNumberAllowed: 0
          maximumNumberAllowed: 0
          nightly:
            first: 20.0
            second: 20.0
            third: 20.0
            fourth: 20.0
            thereafter: 20.0
          showOnAccount: false
        children:
          base: 0
          glAccountCodeId: 0
          includeInBase: false
          minimumNumberAllowed: 0
          maximumNumberAllowed: 0
          nightly:
            first: 10.0
            second: 10.0
            third: 10.0
            fourth: 10.0
            thereafter: 10.0
          showOnAccount: false
        infants:
          base: 0
          glAccountCodeId: 0
          includeInBase: false
          minimumNumberAllowed: 0
          maximumNumberAllowed: 0
          nightly:
            first: 0.0
            second: 0.0
            third: 0.0
            fourth: 0.0
            thereafter: 0.0
          showOnAccount: false
        rateCharge1:
          base: 0
          glAccountCodeId: 0
          includeInBase: false
          minimumNumberAllowed: 0
          maximumNumberAllowed: 0
          nightly:
            first: 0.0
            second: 0.0
            third: 0.0
            fourth: 0.0
            thereafter: 0.0
          showOnAccount: false
        rateCharge2:
          base: 0
          glAccountCodeId: 0
          includeInBase: false
          minimumNumberAllowed: 0
          maximumNumberAllowed: 0
          nightly:
            first: 0.0
            second: 0.0
            third: 0.0
            fourth: 0.0
            thereafter: 0.0
          showOnAccount: false
        rateCharge3:
          base: 0
          glAccountCodeId: 0
          includeInBase: false
          minimumNumberAllowed: 0
          maximumNumberAllowed: 0
          nightly:
            first: 0.0
            second: 0.0
            third: 0.0
            fourth: 0.0
            thereafter: 0.0
          showOnAccount: false
        rateCharge4:
          base: 0
          glAccountCodeId: 0
          includeInBase: false
          minimumNumberAllowed: 0
          maximumNumberAllowed: 0
          nightly:
            first: 0.0
            second: 0.0
            third: 0.0
            fourth: 0.0
            thereafter: 0.0
          showOnAccount: false
        rateCharge5:
          base: 0
          glAccountCodeId: 0
          includeInBase: false
          minimumNumberAllowed: 0
          maximumNumberAllowed: 0
          nightly:
            first: 0.0
            second: 0.0
            third: 0.0
            fourth: 0.0
            thereafter: 0.0
          showOnAccount: false
        rateCharge6:
          base: 0
          glAccountCodeId: 0
          includeInBase: false
          minimumNumberAllowed: 0
          maximumNumberAllowed: 0
          nightly:
            first: 0.0
            second: 0.0
            third: 0.0
            fourth: 0.0
            thereafter: 0.0
          showOnAccount: false
        rateCharge7:
          base: 0
          glAccountCodeId: 0
          includeInBase: false
          minimumNumberAllowed: 0
          maximumNumberAllowed: 0
          nightly:
            first: 0.0
            second: 0.0
            third: 0.0
            fourth: 0.0
            thereafter: 0.0
          showOnAccount: false
    ratePackagesSearch:
      type: object
      properties:
        tableIds:
          type: array
          items:
            type: integer
            format: int32
        rateIds:
          type: array
          items:
            type: integer
            format: int32
        propertyIds:
          type: array
          description: Pass in the propertyids to search for packages beloning to property rate rules
          items:
            type: integer
            format: int32
      example:
        tableIds:
        - 1
        - 15
        - 2
        rateIds:
        - 1254
        - 546
        propertyIds:
        - 4
    rateTablePackage:
      type: object
      properties:
        id:
          type: integer
          format: int32
        applyCharge:
          type: string
          enum:
          - every
          - on the
        applyChargeOnTheDate:
          type: integer
          format: int32
        applyChargeOnTheDay:
          type: string
          enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
        makePackageInclusive:
          type: boolean
          description: This will include the packaged amount as part of the rate without increasing the overall price
        percentageOfRate:
          type: array
          items:
            $ref: '#/components/schemas/rateTablePackagePercentageOfRate'
        perPeriodFee:
          type: array
          items:
            $ref: '#/components/schemas/rateTablePackagePerPeriodFee'
        perPersonFee:
          type: array
          items:
            $ref: '#/components/schemas/rateTablePackagePerPersonFee'
        postOnNextDay:
          type: boolean
        postToExtrasAccount:
          type: boolean
        propertyId:
          type: integer
          description: This value will be returned if the package belongs to a property rate rule
          format: int32
        showOnAccount:
          type: boolean
        showOnHousekeepersReport:
          type: boolean
        showOnToDoChart:
          type: boolean
        sundryId:
          type: integer
          format: int32
        startingPeriod:
          type: string
          enum:
          - include
          - exclude
        endingPeriod:
          type: string
          enum:
          - include
          - exclude
      example:
        id: 124
        applyCharge: every
        applyChargeOnTheDate: 1
        applyChargeOnTheDay: Monday
        makePackageInclusive: false
        percentageOfRate:
        - percentageOfRate: 10.0
          rateFrom: 100.0
          rateTo: 250.0
          useIfRateFallsBetween: true
        perPeriodFee:
        - amount: 10.0
          quantity: 1
          unitPrice: 5.0
          useAmountFromSundry: false
        perPersonFee:
        - additionalRateCharge1: 5.0
          additionalRateCharge2: 5.0
          additionalRateCharge3: 5.0
          additionalRateCharge4: 5.0
          additionalRateCharge5: 5.0
          adults: 5.0
          children: 5.0
          infants: 5.0
          minimumChargePerPeriod: 10.0
        postOnNextDay: false
        postToExtrasAccount: false
        propertyId: 0
        showOnAccount: true
        showOnHousekeepersReport: false
        showOnToDoChart: true
        sundryId: 7
        startingPeriod: include
        endingPeriod: exclude
    rateTablePackagePercentageOfRate:
      type: object
      properties:
        percentageOfRate:
          type: integer
          description: Calculate a Percentage of the Nightly Rate Less any Discount
          format: decimal
        rateFrom:
          type: integer
          format: currency
        rateTo:
          type: integer
          format: currency
        useIfRateFallsBetween:
          type: boolean
    rateTablePackagePerPeriodFee:
      type: object
      properties:
        amount:
          type: integer
          format: currency
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: integer
          format: currency
        useAmountFromSundry:
          type: boolean
    rateTablePackagePerPersonFee:
      type: object
      properties:
        additionalRateCharge1:
          type: integer
          format: currency
        additionalRateCharge2:
          type: integer
          format: currency
        additionalRateCharge3:
          type: integer
          format: currency
        additionalRateCharge4:
          type: integer
          format: currency
        additionalRateCharge5:
          type: integer
          format: currency
        adults:
          type: integer
          format: currency
        children:
          type: integer
          format: currency
        infants:
          type: integer
          format: currency
        minimumChargePerPeriod:
          type: integer
          format: currency
    ratePeriod:
      type: object
      properties:
        id:
          type: integer
          format: int32
        cancellationPolicyId:
          type: integer
          format: int32
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        descirption:
          type: string
        minimumReservationPeriod:
          type: integer
          format: int32
        noDiscountAllowed:
          type: boolean
      example:
        id: 123
        cancellationPolicyId: 2
        dateFrom: 2019-01-16 00:00:00
        dateTo: 2021-01-16 23:59:59
        descirption: Extended
        minimumReservationPeriod: 0
        noDiscountAllowed: false
    rateLookupsRequest:
      required:
      - dateFrom
      - dateTo
      type: object
      properties:
        areaIds:
          type: array
          items:
            type: integer
            format: int32
        categoryIds:
          type: array
          description: Required if rateIds is not provided. Either rateIds or categoryIds must be included in the request.
          items:
            type: integer
            format: int32
        rateIds:
          type: array
          description: Required if categoryIds is not provided. Either rateIds or categoryIds must be included in the request.
          items:
            type: integer
            format: int32
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        excludeAllYearPeriods:
          type: boolean
      example:
        areaIds:
        - 12
        - 13
        categoryIds:
        - 4
        - 3
        rateIds:
        - 1380
        - 1159
        dateFrom: 2019-01-16 00:00:00
        dateTo: 2021-01-16 23:59:59
        excludeAllYearPeriods: true
    rateLookups:
      type: object
      properties:
        areaId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        rateId:
          type: integer
          format: int32
        rateName:
          type: string
        periodId:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
        periodFrom:
          type: string
          format: date-time
        periodTo:
          type: string
          format: date-time
        periodDescription:
          type: string
        tableId:
          type: integer
          format: int32
      example:
        areaId: 1
        categoryId: 1
        rateId: 1282
        rateName: "Staff, family & friends"
        periodId: 372
        propertyId: 1
        periodFrom: 2017-05-01 00:00:00
        periodTo: 2021-01-16 23:59:59
        periodDescription: Low Season
        tableId: 5
    quoteRequest:
      required:
      - adults
      - agentId
      - categoryId
      - endingPeriod
      - rateTypeId
      - startingPeriod
      type: object
      properties:
        additional1:
          type: integer
          format: int32
        additional2:
          type: integer
          format: int32
        additional3:
          type: integer
          format: int32
        additional4:
          type: integer
          format: int32
        additional5:
          type: integer
          format: int32
        additional6:
          type: integer
          format: int32
        additional7:
          type: integer
          format: int32
        adults:
          type: integer
          format: int32
        agentId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        arrivalDate:
          type: string
          format: date-time
        categoryId:
          type: integer
          format: int32
        children:
          type: integer
          format: int32
        departureDate:
          type: string
          format: date-time
        discountId:
          type: integer
          format: int32
        includeAdditionalsBreakdown:
          type: boolean
        ignoreRateRestrictions:
          type: boolean
        includeTaxBreakdown:
          type: boolean
        infants:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
        rateTypeId:
          type: integer
          format: int32
        secondDiscountId:
          type: integer
          format: int32
        useIbeDepositRules:
          type: boolean
        allotmentAssociationId:
          type: string
          enum:
          - TravelAgent
        includeAvailableAreas:
          type: boolean
      description: Used:<br>POST /rates/rateQuote<br>
      example:
        additional1: 1
        additional2: 2
        additional3: 1
        additional4: 0
        additional5: 0
        additional6: 2
        additional7: 2
        adults: 2
        agentId: 1
        areaId: 1
        arrivalDate: 2018-11-01 10:00:00
        categoryId: 4
        children: 1
        departureDate: 2018-11-05 13:25:00
        discountId: 2
        includeAdditionalsBreakdown: true
        ignoreRateRestrictions: false
        includeTaxBreakdown: true
        infants: 1
        propertyId: 1
        rateTypeId: 2
        secondDiscountId: 2
        useIbeDepositRules: true
        allotmentAssociationId: travelAgent
        includeAvailableAreas: true
    quoteResponse:
      type: object
      properties:
        baseRate:
          type: number
          format: currency
        baseRateDiscountAmount:
          type: number
          format: currency
        baseRateRentalReductionAmount:
          type: number
          format: currency
        baseRateTax:
          type: number
          format: currency
        cancellationPolicyId:
          type: integer
          format: in32
        availableAreas:
          type: array
          items:
            $ref: '#/components/schemas/quoteResponse_availableAreas'
        categoryId:
          type: integer
          format: in32
        deposit1Amount:
          type: number
          format: currency
        deposit1RequiredBy:
          type: string
          format: date-time
        deposit2Amount:
          type: number
          format: currency
        deposit2RequiredBy:
          type: string
          format: date-time
        discountAmount:
          type: number
          format: currency
        firstNightRate:
          type: number
          format: currency
        package:
          type: number
          format: currency
        packageTax:
          type: number
          format: currency
        rateBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/rateBreakdown'
        secondDiscountAmount:
          type: number
          format: currency
        useResDiscountNightly:
          type: boolean
        taxBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/quoteResponse_taxBreakdown'
        additionalsBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/quoteResponse_additionalsBreakdown'
      description: Used:<br>POST /rates/rateQuote<br>
      example:
        baseRate: 1150.0
        baseRateDiscountAmount: 0.0
        baseRateRentalReductionAmount: 0.0
        baseRateTax: 115.0
        categoryId: 4
        deposit1Amount: 376.25
        deposit1RequiredBy: 2023-06-13 10:10:34
        deposit2Amount: 0.0
        deposit2RequiredBy: 0001-01-01 00:00:00
        discountAmount: 0.0
        firstNightRate: 1505.0
        package: 240.0
        packageTax: 0.0
        rateBreakdown:
        - baseRateAmount: 1150.0
          baseRateRaw: 800.0
          currencyCode: AUD
          currencySymbol: $
          displayBaseRate: 800.0
          displayTotalPackage: 240.0
          displayTotalRate: 1505.0
          displayTotalTax: 50.0
          packageAmount: 240.0
          packageBreakdown:
          - amount: 240.0
            baseIncludesPackageAmount: false
            glCodeId: 24
            packageFeeType: 1
            packageId: 23910
            perAdultFee: 20.0
            perChildFee: 0.0
            perExtra4Fee: 20.0
            perExtra5Fee: 40.0
            perExtra6Fee: 0.0
            perExtra7Fee: 0.0
            perExtra8Fee: 0.0
            perInfantFee: 0.0
            auantity: 0
            sundryId: 3
            sundryName: B1 B/Fast food
            taxBreakdown:
            - amount: 1.0
              description: B1 B/Fast food Taxes
              packageId: 1
              perAdultFee: 10.0
              perInfantFee: 10.0
              perPersonAdditionalTax: true
              perPersonPercentage: 0
              perPersonPercentageAdditionalPercentage: 0
              perPersonPercentageCapped: false
              perPersonPercentageCappedAmount: 0.0
              serviceCharge: false
              taxExemptionApplied: false
              taxId: 3
              taxMethod: 0
              theDate: 2018-09-03 00:00:00
            totalTax: 30.0
            theDate: 2023-06-15 00:00:00
          additionalsBreakdown:
          - additionalType: Adult
            amount: 20.0
          - additionalType: Child
            amount: 20.0
          packageHiddenAmount: 0.0
          packageShownAmount: 240.0
          rateType: Rate 1
          rateTypeId: 3
          theDate: 2023-06-15 00:00:00
          totalExtras: 350.0
          totalPackage: 240.0
          totalPackageIncludedInBase: 0.0
          totalPackageNotIncludedInBase: 240.0
          totalRate: 1390.0
          taxBreakdown:
          - amount: 10.0
            description: 10% State Tax
          - amount: 9.0
            description: SGST 9
        secondDiscountAmount: 0.0
        useResDiscountNightly: false
        cancellationPolicyId: 1
        availableAreas:
        - id: 13
          name: 01 013
          categoryId: 4
          propertyId: 1
          cleanStatus: Occupied
    rateBreakdown:
      type: object
      properties:
        baseRateAmount:
          type: number
          format: currency
        baseRateRaw:
          type: number
          format: currency
        currencyCode:
          type: string
        currencySymbol:
          type: string
        displayBaseRate:
          type: number
          format: currency
        displayTotalPackage:
          type: number
          format: currency
        displayTotalRate:
          type: number
          format: currency
        displayTotalTax:
          type: number
          format: currency
        packageAmount:
          type: number
          format: currency
        packageBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/packageBreakdown'
        packageHiddenAmount:
          type: number
          format: currency
        packageShownAmount:
          type: number
          format: currency
        rateType:
          type: string
        rateTypeId:
          type: integer
          format: int32
        theDate:
          type: string
          format: date-time
        totalExtras:
          type: number
          format: currency
        totalPackage:
          type: number
          format: currency
        totalPackageIncludedInBase:
          type: number
          format: currency
        totalPackageNotIncludedInBase:
          type: number
          format: currency
        totalRate:
          type: number
          format: currency
      description: Used in Quote Response
    packageBreakdown:
      type: object
      properties:
        amount:
          type: number
          format: currency
        baseIncludesPackageAmount:
          type: boolean
        glCodeId:
          type: integer
          format: int32
        packageFeeType:
          type: integer
          format: int32
        packageId:
          type: integer
          format: int32
        perAdultFee:
          type: number
          format: currency
        perChildFee:
          type: number
          format: currency
        perExtra4Fee:
          type: number
          format: currency
        perExtra5Fee:
          type: number
          format: currency
        perExtra6Fee:
          type: number
          format: currency
        perExtra7Fee:
          type: number
          format: currency
        perExtra8Fee:
          type: number
          format: currency
        perInfantFee:
          type: number
          format: currency
        auantity:
          type: integer
          format: int32
        sundryId:
          type: integer
          format: int32
        sundryName:
          type: string
        taxBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/taxBreakdown'
        totalTax:
          type: number
          format: currency
        theDate:
          type: string
          format: date-time
      description: Used in Rate Breakdown
    taxBreakdown:
      type: object
      properties:
        amount:
          type: number
          format: currency
        description:
          type: string
        packageId:
          type: integer
          format: int32
        perAdultFee:
          type: number
          format: currency
        perInfantFee:
          type: number
          format: currency
        perPersonAdditionalTax:
          type: boolean
          description: '''true When A Per Person Percentage Tax Has ''Add Additional %'' Ticked'
        perPersonPercentage:
          type: integer
          format: int32
        perPersonPercentageAdditionalPercentage:
          type: integer
          format: int32
        perPersonPercentageCapped:
          type: boolean
        perPersonPercentageCappedAmount:
          type: number
          format: currency
        serviceCharge:
          type: boolean
        taxExemptionApplied:
          type: boolean
        taxId:
          type: integer
          format: int32
        taxMethod:
          type: integer
          format: int32
        theDate:
          type: string
          format: time-date
      description: Used in Package Breakdown
    rateAdjustmentRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        categoryInfo:
          type: array
          items:
            $ref: '#/components/schemas/rateAdjustmentRequestVariable'
      example:
        id: 1377
        categoryInfo:
        - basePeople: 2
          categoryId: 4
          dailyRate: 140.0
          dateFrom: 2020-02-10 00:00:00
          dateTo: 2020-02-15 00:00:00
          minimumStay: 2
        - basePeople: 2
          categoryId: 6
          dailyRate: 240.0
          dateFrom: 2020-02-10 00:00:00
          dateTo: 2020-02-15 00:00:00
          minimumStay: 2
    rateAdjustmentRequestVariable:
      type: object
      properties:
        basePeople:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        dailyRate:
          type: number
          format: currency
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        minimumStay:
          type: integer
          format: int32
    propertyRules:
      type: object
      properties:
        cancellationPolicyId:
          type: integer
          format: int32
        bookingSourceId:
          type: integer
          format: int32
        discountId:
          type: integer
          format: int32
        glCodeId:
          type: integer
          format: int32
        longDescription:
          type: string
        marketSegmentId:
          type: integer
          format: int32
        mealPlanId:
          type: integer
          format: int32
        rateChargeDescription:
          type: string
        advancePurchaseNights:
          type: integer
          format: int32
        lastMinuteNights:
          type: integer
          format: int32
        arrivingOnMonday:
          type: boolean
        arrivingOnTuesday:
          type: boolean
        arrivingOnWednesday:
          type: boolean
        arrivingOnThursday:
          type: boolean
        arrivingOnFriday:
          type: boolean
        arrivingOnSaturday:
          type: boolean
        arrivingOnSunday:
          type: boolean
      example:
        cancellationPolicyId: 0
        bookingSourceId: 180
        discountId: 97
        glCodeId: 39
        longDescription: This is the Long Description
        marketSegmentId: 55
        mealPlanId: 0
        rateChargeDescription: Test Property1 BAR
        advancePurchaseNights: 0
        lastMinuteNights: 0
    propertyRulesSearch:
      type: object
      properties:
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        rateIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        propertyIds:
        - 1
        - 4
        rateIds:
        - 1276
        - 1281
    reason:
      type: object
      properties:
        id:
          type: integer
          format: int32
        reasonType:
          type: string
        code:
          type: string
        description:
          type: string
        reason:
          type: string
      example:
        id: 2
        reasonType: Reservation Cancelled
        code: "4"
        description: Cancelled by Customer
        reason: Cancelled by Customer
    relationships:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: Sister
    reportAreaIncomeSummaryBuild:
      type: object
      properties:
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        areaIds:
          type: array
          items:
            type: integer
            format: int32
        reservationStatusIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        dateFrom: 2020-05-01 00:00:00
        dateTo: 2020-05-31 00:00:00
        areaIds:
        - 1
        - 2
        reservationStatusIds:
        - 0
        - 1
        - 2
        - 3
    reportAreaIncomeSummaryResponse:
      type: object
      properties:
        category:
          type: string
        areaId:
          type: integer
          format: int32
        area:
          type: string
        numberOfReservations:
          type: integer
          format: int32
        numberOfAdults:
          type: integer
          format: int32
        numberOfChildren:
          type: integer
          format: int32
        nights:
          type: integer
          format: int32
        actualNights:
          type: integer
          format: int32
        grossRevenue:
          type: string
        nettRevenue:
          type: string
        grossOther:
          type: string
        nettOther:
          type: string
        totalGrossRevenue:
          type: string
        totalNettRevenue:
          type: string
        averageGrossRevenue:
          type: string
        averageNettRevenue:
          type: string
        averageDiscount:
          type: string
        averageGrossOther:
          type: string
        averageNettOther:
          type: string
        averageDailyGrossRevenue:
          type: string
        averageDailyNettRevenue:
          type: string
        occupancy:
          type: string
      example:
        category: UPC/3 Bedroom
        areaId: 38
        area: BUB/UPC/3207/3BR
        numberOfReservations: 16
        numberOfAdults: 59
        numberOfChildren: 4
        nights: 203
        actualNights: 196
        grossRevenue: "126,658.20"
        nettRevenue: "115,164.11"
        grossOther: "10,907.90"
        nettOther: "10,895.42"
        totalGrossRevenue: "137,566.10"
        totalNettRevenue: "126,059.53"
        averageGrossRevenue: "7,916.14"
        averageNettRevenue: "7,197.76"
        averageDiscount: "0.00"
        averageGrossOther: "681.74"
        averageNettOther: "680.96"
        averageDailyGrossRevenue: "646.22"
        averageDailyNettRevenue: "587.57"
        occupancy: "0.64"
    reportsAuditTrail:
      type: object
      properties:
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        accountClassifications:
          type: array
          items:
            type: string
            description: "If accountClassification is not specified, the endpoint will return all account classifications"
            enum:
            - Reservation
            - Guest
            - Owner
            - TravelAgent
            - Cash
            - GuestOrRes
            - POS
            - ThirdParty
            - Company
            - TourOperator
            - Contract
            - Manager
        glCodeIds:
          type: array
          items:
            type: integer
            format: int32
        byPostingDate:
          type: boolean
        groupBy:
          type: string
          enum:
          - noGrouping
          - glCode
          - category
          - user
          - area
          - company
          - travelAgent
          - bookingSource
        transactionOption:
          type: string
          enum:
          - byDate
          - byId
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        traqnsactionIdFrom:
          type: integer
          format: int32
        traqnsactionIdTo:
          type: integer
          format: int32
        sortBy:
          type: string
          enum:
          - transactionId
          - reservationId
          - surname
          - glCode
          - transactionDate
          - area
          - studentId
          - loyaltyMembershipType
      description: Used:<br>POST /reports/auditTrail<br>
      example:
        propertyIds:
        - 1
        accountClassifications:
        - Reservation
        glCodeIds: []
        byPostingDate: true
        groupBy: NoGrouping
        transactionOption: ByDate
        fromDate: 2023-10-05 00:00:00
        toDate: 2023-10-05 23:23:59
        transactionIdFrom: 0
        transactionIdTo: 0
        sortBy: reservationId
    reportsAuditTrailResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/reportsAuditTrailResponseData'
      example:
        Data:
        - propertyId: 1
          propertyName: Test property 1
          glCodeId: 40
          glCod: Toni1
          postingDate: 2023-10-05 00:00:00
          createdDate: 2023-10-05 18:26:08
          transactionId: 2492469
          reservationId: 216865
          accountId: 362486
          areaId: 287
          guestSurname: ""
          guestGiven: ""
          transactionDescription: Currency Adjustment
          taxInvoiceId: 0
          userId: 186
          debit: 0.0
          credit: 0.0
          loyaltyMembershipType: ""
          group: ""
    reportsAuditTrailResponseData:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        propertyName:
          type: string
        glCodeId:
          type: integer
          format: int32
        postingDate:
          type: string
          format: date-time
        createDate:
          type: string
          format: date-time
        transactionId:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        guestSurname:
          type: string
        guestGiven:
          type: string
        transactionDescription:
          type: string
        taxInvoiceId:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        debits:
          type: integer
          format: decimal
        credits:
          type: integer
          format: decimal
        loyaltyMembershipTypeId:
          type: integer
          format: int32
        group:
          type: string
    reportsCashChargeBuild:
      required:
      - dateFrom
      - dateTo
      type: object
      properties:
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        groupBy:
          type: string
          enum:
          - bookingSource
          - category
          - glCode
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        groupByProperty:
          type: boolean
        excludeOwnerAccountingCharges:
          type: boolean
      example:
        dateFrom: 2022-06-01
        dateTo: 2022-06-21
        groupBy: Category
        propertyIds:
        - 1
        - 3
        - 4
        categoryIds:
        - 0
        groupByProperty: true
        excludeOwnerAccountingCharges: true
    reportsCashChargeResponse:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        glCode:
          type: string
        glCodeId:
          type: integer
          format: int32
        description:
          type: string
        totalCharge:
          type: integer
          format: decimal
        totalGST:
          type: integer
          format: decimal
        gstExclusive:
          type: integer
          format: decimal
        gstFreeCharge:
          type: integer
          format: decimal
        fullGSTGST:
          type: integer
          format: decimal
        fullGSTCharge:
          type: integer
          format: decimal
        concessionalGSTCharge:
          type: integer
          format: decimal
        concessionalGSTGST:
          type: integer
          format: decimal
      example:
        propertyId: 1
        glCode: 4-1000
        glCodeId: 33
        description: Accommodation
        totalCharge: 53.1
        totalGST: 4.82
        gstExclusive: 48.28
        gstFreeCharge: 0.0
        fullGSTGST: 4.82
        fullGSTCharge: 53.1
        concessionalGSTCharge: 0.0
        concessionalGSTGST: 0.0
    reportsDebtorsLedgerBuild:
      type: object
      properties:
        asOfDate:
          type: string
          format: date-time
        groupByProperty:
          type: boolean
        groupBy:
          type: string
          enum:
          - none
          - category
          - company
          - accountClass
          - travelAgent
          - companyOverTravelAgentPreference
          - travelAgentOverCompanyPrefrence
          - AR
          - accountsReceivableSummary
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        balance:
          type: string
          enum:
          - all
          - current
          - AgedYDays
        balanceAgeX:
          type: integer
          format: int32
        balanceAgeY:
          type: integer
          format: int32
        balanceAgeZ:
          type: integer
          format: int32
        accountClassIds:
          type: array
          items:
            type: integer
            format: int32
        accountTypes:
          type: string
          enum:
          - none
          - all
          - reservations
          - guest
          - travelAgent
          - owners
        includeLongTerm:
          type: boolean
        includeNonLongTerm:
          type: boolean
        onlyCompanies:
          type: boolean
        onlyTravelAgents:
          type: boolean
        onlyWholesalers:
          type: boolean
        creditDebit:
          type: string
          enum:
          - all
          - credit
          - debit
        accountIds:
          type: array
          items:
            type: integer
            format: int32
        excludeFutureReservations:
          type: boolean
        clientClassId:
          type: integer
          format: int32
        excludeTrustChargesForReservationAccounts:
          type: boolean
        invoicedTransactionsOnly:
          type: boolean
        clientStatusIds:
          type: array
          items:
            type: integer
            format: int32
        onlyNonARDebtors:
          type: boolean
        includeTrustBreakdown:
          type: boolean
        compareOldAndNew:
          type: boolean
        excludeNonInvoicedRepeatCharges:
          type: boolean
        includeManagementExpensesBreakdown:
          type: boolean
      example:
        asOfDate: 2022-06-21
        groupByProperty: false
        groupBy: Category
        propertyIds:
        - 1
        categoryIds: []
        balance: AgedYDays
        balanceAgeX: 12
        balanceAgeY: 15
        balanceAgeZ: 33
        accountClassIds: null
        accountTypes: []
        includeLongTerm: true
        includeNonLongTerm: true
        onlyCompanies: false
        onlyTravelAgents: false
        onlyWholesalers: false
        creditDebit: Both
        accountIds: []
        excludeFutureReservations: false
        clientClassId: 0
        excludeTrustChargesForReservationAccounts: false
        invoicedTransactionsOnly: false
        clientStatusIds: []
        onlyNonARDebtors: false
        includeTrustBreakdown: false
        compareOldAndNew: false
        excludeNonInvoicedRepeatCharges: false
        includeManagementExpensesBreakdown: true
    reportsDebtorsLedgerResponse:
      type: object
      properties:
        reportData:
          type: array
          items:
            $ref: '#/components/schemas/reportsDebtorsLedgerResponseData'
      example:
        reportData:
        - accountId: 1
          propertyId: 1
          reservationId: 0
          guestId: 0
          credits: 0.0
          current: 0.0
          debits: 8883.18
          ageZ: 8751.74
          ageY: 0.0
          ageX: 0.0
          total: 8751.74
          trustTotal: 0.0
          nonTrustTotal: 0.0
          accountHasIssues: false
          group: ""
          invoiceId: 0
          recordType: NonAR
          arCompanyId: 0
          arTravelAgentId: 0
          managementExpenses: 0.0
          notionalExpenses: 0.0
          sundryExpenses: 8797.89
          ownerIncome: -46.15
          managementExpensesBreakdown:
          - breakdownType: Sundry
            reservationId: 0
            accountId: 1
            amount: 148.5
            gst: 13.5
          - breakdownType: Sundry
            reservationId: 0
            accountId: 1
            amount: 148.5
            gst: 13.5
    reportsDebtorsLedgerResponseData:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
        guestId:
          type: integer
          format: int32
        credits:
          type: integer
          format: decimal
        current:
          type: integer
          format: decimal
        debits:
          type: integer
          format: decimal
        ageZ:
          type: integer
          format: decimal
        ageY:
          type: integer
          format: decimal
        ageX:
          type: integer
          format: decimal
        total:
          type: integer
          format: decimal
        trustTotal:
          type: integer
          format: decimal
        nonTrustTotal:
          type: integer
          format: decimal
        accountHasIssues:
          type: boolean
        group:
          type: string
        invoiceId:
          type: integer
          format: int32
        recordType:
          type: string
        arCompanyId:
          type: integer
          format: int32
        arTravelAgentId:
          type: integer
          format: int32
        managementExpenses:
          type: integer
          format: decimal
        notionalExpenses:
          type: integer
          format: decimal
        sundryExpenses:
          type: integer
          format: decimal
        ownerIncome:
          type: integer
          format: decimal
        managementExpensesBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/reportsDebtorsLedgerResponseDailyBreakdown'
    reportsDebtorsLedgerResponseDailyBreakdown:
      type: object
      properties:
        breakdownType:
          type: string
        reservationId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        amount:
          type: integer
          format: decimal
        gst:
          type: integer
          format: decimal
    reportExpensesAreaSummaryBuild:
      type: object
      properties:
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        dateFrom: 2021-11-01 00:00:00
        dateTo: 2021-12-01 00:00:00
        categoryIds:
        - 12
        - 13
    reportExpensesAreaSummaryResponse:
      type: object
      properties:
        reportData:
          type: array
          items:
            $ref: '#/components/schemas/reportExpensesAreaSummaryResponseReportData'
      example:
        reportData:
        - area: Amazing Grace
          ownerName: Cannon Graham
          description: Income
          amount: "422.00"
        - area: Amazing Grace
          ownerName: Cannon Graham
          description: Management Fee
          amount: "-84.36"
    reportExpensesAreaSummaryResponseReportData:
      type: object
      properties:
        area:
          type: string
        ownerName:
          type: string
        description:
          type: string
        amount:
          type: string
          format: number
      example:
        area: Amazing Grace
        ownerName: Cannon Graham
        description: Income
        amount: "-84.36"
    reportsFlash:
      required:
      - propertyIds
      - runDate
      type: object
      properties:
        propertyIds:
          type: array
          description: List of property IDs
          items:
            type: integer
        runDate:
          type: string
          description: The date for which the operation is run (YYYY-MM-DD)
          format: date
      example:
        propertyIds:
        - 1
        - 3
        runDate: 2025-01-03
    reportsFlashResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/reportsFlashResponse_data_1'
      example:
        data:
        - grouping: Income
          data:
          - grouping: ""
            description: ""
            dayBudget: 0.0
            dayActual: 120.0
            dayLastYear: 48.75
            monthBudget: 0.0
            monthActual: 240.0
            monthLastYear: 48.75
            yearBudget: 0.0
            yearActual: 14790.27
            yearLastYear: 65566.92
            glCodeId: 367
            glCode: Some Tax GL Code
            glGroupId: 0
            todayOnly: false
    reportHistoryForecastBuild:
      required:
      - dateFrom
      - dateTo
      - propertyId
      type: object
      properties:
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        operationalRevenue:
          type: string
          enum:
          - gross
          - nett
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        roomStatistics:
          type: string
          description: "On = Only Look for Stats On, Off = Only Look for Stats Off, Ignore = We don't Filter on Stats"
          enum:
          - "on"
          - "off"
          - ignore
      example:
        categoryIds:
        - 8
        - 9
        dateFrom: 2020-02-25 00:00:00
        dateTo: 2020-02-26 00:00:00
        operationalRevenue: gross
        propertyIds:
        - 1
        - 2
        roomStatistics: ignore
    reportHistoryForecast:
      type: object
      properties:
        accommodationRevenue:
          type: integer
          format: decimal
        arrivingRooms:
          type: integer
          format: int32
        averageRate:
          type: integer
          format: decimal
        complementaryRooms:
          type: integer
          format: int32
        dayUseRooms:
          type: integer
          format: int32
        departingRooms:
          type: integer
          format: int32
        foodBeverageRevenue:
          type: integer
          format: decimal
        houseUse:
          type: integer
          format: int32
        noShow:
          type: integer
          format: int32
        occupancyPercentage:
          type: integer
          format: decimal
        otherRevenue:
          type: integer
          format: decimal
        outOfOrderRooms:
          type: integer
          format: int32
        theDate:
          type: string
          format: date-time
        totalOccupancy:
          type: integer
          format: int32
      example:
        accommodationRevenue: 925.88
        arrivingRooms: 5
        averageRate: 370.24
        complementaryRooms: 0
        dayUseRooms: 0
        departingRooms: 6
        foodBeverageRevenue: 0.0
        houseUse: 0
        noShow: 0
        occupancyPercentage: 16.67
        otherRevenue: 668.48
        outOfOrderRooms: 1
        theDate: 2020-02-25 00:00:00
        totalOccupancy: 25
    reportNpnResultsBuild:
      required:
      - propertyIds
      type: object
      properties:
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        npsRating:
          type: array
          description: Pass ratings between the range of 0 to 10
          items:
            type: integer
            format: int32
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        reportBy:
          type: string
          enum:
          - surveyDate
          - departDate
      example:
        categoryIds:
        - 4
        - 6
        dateFrom: 2020-02-25 00:00:00
        dateTo: 2020-02-26 00:00:00
        npsRating:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        propertyIds:
        - 1
        - 2
        reportBy: surveyDate
    reportNpnResults:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        totalResponses:
          type: integer
          format: int32
        responsesRate:
          type: integer
          description: This value represents a percentage of the response rate.
          format: int32
        netPromoterStore:
          type: integer
          format: decimal
        service:
          type: integer
          format: decimal
        standardOfFacilities:
          type: integer
          format: decimal
        site:
          type: integer
          format: decimal
        valueForMoney:
          type: integer
          format: decimal
        surveyDeatils:
          type: array
          items:
            $ref: '#/components/schemas/reportNpnResultsSurveyDeatils'
      example:
        propertyId: 1
        totalResponses: 3
        responsesRate: 9.68
        netPromoterStore: 66.76
        service: 9.33
        standardOfFacilities: 7.67
        site: 9.33
        valueForMoney: 8.33
        surveyDeatils:
        - arrivalDate: 2020-06-28 16:37:00
          departureDate: 2020-07-01 08:52:50
          npsRating: 7
          serviceRating: 8
          facilityRating: 3
          siteRating: 8
          valueRating: 8
          categoryId: 5
          reservationId: 4585654
          comments: Not being allowed to have access to a toilet and shower was very disappointing. Although we are self contained a good size shower would have been wonderful at least once
        - arrivalDate: 2020-07-01 15:28:00
          departureDate: 2020-07-03 10:34:43
          npsRating: 10
          serviceRating: 10
          facilityRating: 10
          siteRating: 10
          valueRating: 7
          categoryId: 4
          reservationId: 4215468
          comments: Very comfortable accommodation. Just loved it. Will be back again. Just a bit expensive.
    reportNpnResultsSurveyDeatils:
      type: object
      properties:
        arrivalDate:
          type: string
          format: date-time
        departureDate:
          type: string
          format: date-time
        npsRating:
          type: integer
          format: int32
        serviceRating:
          type: integer
          format: int32
        facilityRating:
          type: integer
          format: int32
        siteRating:
          type: integer
          format: int32
        valueRating:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
        comments:
          type: string
    reportNightAudit:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        rundate:
          type: string
          format: date-time
      example:
        propertyId: 1
        rundate: 2023-01-01
    reportNightAuditReport:
      type: object
      properties:
        outstandingGuestBalance:
          type: integer
          format: decimal
        summary:
          type: array
          items:
            $ref: '#/components/schemas/reportNightAuditReportSummary'
    reportNightAuditReportSummary:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/reportNightAuditTransactions'
        debtorsAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/reportNightAuditDebtorAnalysis'
    reportNightAuditTransactions:
      type: object
      properties:
        cash:
          type: integer
          format: decimal
        cheque:
          type: integer
          format: decimal
        creditCard:
          type: integer
          format: decimal
        directCredit:
          type: integer
          format: decimal
        directDebit:
          type: integer
          format: decimal
        journal:
          type: integer
          format: decimal
        cashExpense:
          type: integer
          format: decimal
        refund:
          type: integer
          format: decimal
        eftPos:
          type: integer
          format: decimal
    reportNightAuditDebtorAnalysis:
      type: object
      properties:
        advancesLedger:
          type: array
          items:
            $ref: '#/components/schemas/reportNightAuditAdvancesLedger'
        guestLedger:
          type: array
          items:
            $ref: '#/components/schemas/reportNightAuditGuestLedger'
        cityLedger:
          type: array
          items:
            $ref: '#/components/schemas/reportNightAuditCityLedger'
    reportNightAuditAdvancesLedger:
      type: object
      properties:
        openingBalance:
          type: integer
          format: decimal
        plusNewCredits:
          type: integer
          format: decimal
        lessCreditsUsed:
          type: integer
          format: decimal
        lessCreditsRefunded:
          type: integer
          format: decimal
        closingBalance:
          type: integer
          format: decimal
    reportNightAuditGuestLedger:
      type: object
      properties:
        openingBalance:
          type: integer
          format: decimal
        plusNewReservationCharges:
          type: integer
          format: decimal
        lessPaidBalances:
          type: integer
          format: decimal
        closingBalance:
          type: integer
          format: decimal
    reportNightAuditCityLedger:
      type: object
      properties:
        openingBalance:
          type: integer
          format: decimal
        plusNewCredits:
          type: integer
          format: decimal
        lessCreditsUsed:
          type: integer
          format: decimal
        lessCreditsRefunded:
          type: integer
          format: decimal
        plusNewTransfers:
          type: integer
          format: decimal
        lessPaidBalances:
          type: integer
          format: decimal
        closingBalance:
          type: integer
          format: decimal
    reportOccupancyBuild:
      required:
      - dateFrom
      - dateTo
      - propertyIds
      type: object
      properties:
        breakdownAdultChildInfants:
          type: boolean
        categoryIds:
          type: array
          items:
            type: integer
        dailyBreakdown:
          type: boolean
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        dayOfTheWeek:
          type: array
          items:
            type: string
            enum:
            - all
            - sunday
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
          default:
          - all
        includeInfantsInOccupantsTotal:
          type: boolean
        includeReservationIds:
          type: boolean
          description: This will NOT work if dailyBreakdown is true.
        includeUniqueGuestCount:
          type: boolean
        propertyIds:
          type: array
          items:
            type: integer
        replaceOccupantsWithGuestNights:
          type: boolean
        roomStatistics:
          type: string
          description: "On = Only Look for Stats On, Off = Only Look for Stats Off, Ignore = We don't Filter on Stats."
          enum:
          - "true"
          - "false"
          - ignore
        groupBy1:
          type: string
          enum:
          - none
          - category
          - categoryGrouping
          - dayOfWeek
          - property
          - propertyState
        groupBy2:
          type: string
          enum:
          - none
          - category
          - categoryGrouping
          - dayOfWeek
          - property
      example:
        breakdownAdultChildInfants: true
        categoryIds:
        - 2
        - 3
        - 4
        dailyBreakdown: false
        dateFrom: 2025-03-18T00:00:00Z
        dateTo: 2025-03-23T00:00:00Z
        dayOfTheWeek:
        - all
        includeInfantsInOccupantsTotal: true
        includeReservationIds: true
        includeUniqueGuestCount: false
        propertyIds:
        - 1
        replaceOccupantsWithGuestNights: false
        roomStatistics: true
        groupBy1: category
        groupBy2: property
    reportOccupancy:
      type: object
      properties:
        Breakdown:
          type: array
          items:
            $ref: '#/components/schemas/reportOccupancy_Breakdown'
      example:
        Breakdown:
        - categoryId: 2
          description: This value is dependent on the values passed in grouping1 and grouping2
          discount: 0.0
          grossAverageRevPOR: 1023.5
          netAverageRevPOR: 1023.5
          numberOfAreasAvailable: 6
          numberOfAreasInMaintenance: 0
          numberOfAreasUnused: 2
          numberOfAreasUsed: 4
          numberOfAreasTotal: 1
          occupancyPercentage: 0.666667
          occupants: 3.0
          period: Days
          revPar: 682.33
          netRevPar: 682.33
          totalGrossRevenue: 4094.0
          totalNetRevenue: 4094.0
          theDate: 2025-03-29T08:14:00Z
          groupBy1: Deluxe 002
          groupBy2: Test property 1
          propertyId: 1
          reservationIds:
          - 225989
          occupantsBreakdown: 2A 2I
        - categoryId: 3
          description: Deluxe 003
          discount: 0.0
          grossAverageRevPOR: 0.0
          netAverageRevPOR: 0.0
          numberOfAreasAvailable: 66
          numberOfAreasInMaintenance: 0
          numberOfAreasUnused: 62
          numberOfAreasUsed: 4
          numberOfAreasTotal: 11
          occupancyPercentage: 0.060606
          occupants: 4.0
          period: Days
          revPar: 0.0
          netRevPar: 0.0
          totalGrossRevenue: 0.0
          totalNetRevenue: 0.0
          theDate: 2025-03-29T08:14:00Z
          groupBy1: Deluxe 003
          groupBy2: Test property 1
          propertyId: 1
          reservationIds:
          - 226657
          occupantsBreakdown: 13A 0.5C 1.5I
    reportOccupancyByAreaBuild:
      required:
      - dateFrom
      - dateTo
      - propertyId
      type: object
      properties:
        breakdownAdultChildInfants:
          type: boolean
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        dailyBreakdown:
          type: boolean
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        groupBy1:
          type: string
          enum:
          - none
          - category
          - categoryGrouping
          - dayOfWeek
          - property
          - propertyState
        groupBy2:
          type: string
          enum:
          - none
          - category
          - categoryGrouping
          - dayOfWeek
          - property
        includeInfantsInOccupantsTotal:
          type: boolean
        includeUniqueGuestCount:
          type: boolean
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        replaceOccupantsWithGuestNights:
          type: boolean
        roomStatistics:
          type: string
          description: "On = Only Look for Stats On, Off = Only Look for Stats Off, Ignore = We don't Filter on Stats"
          enum:
          - "on"
          - "off"
          - ignore
        excludeOwnerStays:
          type: boolean
      example:
        breakdownAdultChildInfants: true
        categoryIds:
        - 4
        - 6
        dailyBreakdown: false
        dateFrom: 2020-02-25 00:00:00
        dateTo: 2020-02-26 00:00:00
        groupBy1: Category
        groupBy2: Property
        includeInfantsInOccupantsTotal: true
        includeUniqueGuestCount: false
        propertyIds:
        - 1
        - 2
        replaceOccupantsWithGuestNights: true
        roomStatistics: ignore
        excludeOwnerStays: false
    reportOccupancyByArea:
      type: object
      properties:
        areaId:
          type: integer
          format: decimal
        categoryId:
          type: integer
          description: This value is returned based on your grouping options
          format: int32
        numberOfAreasAvailable:
          type: integer
          format: int32
        numberOfAreasUnused:
          type: integer
          format: int32
        numberOfAreasUsed:
          type: integer
          format: int32
        occupancyPercentage:
          type: integer
          format: decimal
        period:
          type: string
        propertyId:
          type: integer
          description: This value is returned based on your grouping options
          format: int32
        totalGrossRevenue:
          type: integer
          format: decimal
        totalNetRevenue:
          type: integer
          format: decimal
      example:
        areaId: 1
        categroyId: 4
        numberOfAreasAvailable: 14
        numberOfAreasUnused: 3
        numberOfAreasUsed: 11
        occupancyPercentage: 21.43
        period: Days
        propertyId: 1
        totalGrossRevenue: 826.8
        totalNetRevenue: 751.93
    reportOccupancyRevenueComparisonBuild:
      type: object
      properties:
        allReservationsBetween:
          type: array
          items:
            $ref: '#/components/schemas/reportOccupancyRevenueComparisonBuildAllReservationsBetween'
        allReservationsPriorTo:
          type: array
          items:
            $ref: '#/components/schemas/reportOccupancyRevenueComparisonBuildAllReservationsPriorTo'
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        categoryGroupingIds:
          type: array
          items:
            type: integer
            format: int32
        excludeReservationWithStatusOfOwnerOccupied:
          type: boolean
        groupByProperty:
          type: boolean
        groupByTravelAgent:
          type: boolean
        includeLongTermReservation:
          type: boolean
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        replaceTotalArrivalsAndAvailsNightsWithNettRevPARAndNetRevPOR:
          type: boolean
        roomStatistics:
          type: string
          description: "On = Only Look for Stats On, Off = Only Look for Stats Off, Ignore = We don't Filter on Stats"
          enum:
          - "on"
          - "off"
          - ignore
        travelAgentIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        allReservationsBetween:
        - reservationsBetweenStart: 1900-00-00 00:00:00
          reservationsBetweenEnd: 1900-00-00 00:00:00
          comparedToReservationsBetweenStart: 1900-00-00 00:00:00
          comparedToReservationsBetweenEnd: 1900-00-00 00:00:00
        allReservationsPriorTo:
        - reservationsMadePriorToDate: 1900-00-00 00:00:00
          reservationsBetweenStart: 1900-00-00 00:00:00
          reservationsBetweenEnd: 1900-00-00 00:00:00
          comparedToReservationsMadePriorToDate: 1900-00-00 00:00:00
          comparedToReservationsBetweenStart: 1900-00-00 00:00:00
          comparedToReservationsBetweenEnd: 1900-00-00 00:00:00
        categoryIds:
        - 4
        - 5
        categoryGroupingIds:
        - 1
        excludeReservationWithStatusOfOwnerOccupied: false
        groupByProperty: false
        groupByTravelAgent: true
        includeLongTermReservation: true
        propertyIds:
        - 1
        replaceTotalArrivalsAndAvailsNightsWithNettRevPARAndNetRevPOR: false
        roomStatistics: ignore
        travelAgentIds:
        - 45
        - 12
    reportOccupancyRevenueComparisonBuildAllReservationsBetween:
      type: object
      properties:
        reservationsBetweenStart:
          type: string
          format: date-time
        reservationsBetweenEnd:
          type: string
          format: date-time
        comparedToReservationsBetweenStart:
          type: string
          format: date-time
        comparedToReservationsBetweenEnd:
          type: string
          format: date-time
    reportOccupancyRevenueComparisonBuildAllReservationsPriorTo:
      type: object
      properties:
        reservationsMadePriorToDate:
          type: string
          format: date-time
        reservationsBetweenStart:
          type: string
          format: date-time
        reservationsBetweenEnd:
          type: string
          format: date-time
        comparedToReservationsMadePriorToDate:
          type: string
          format: date-time
        comparedToReservationsBetweenStart:
          type: string
          format: date-time
        comparedToReservationsBetweenEnd:
          type: string
          format: date-time
    reportOccupancyRevenueComparison:
      type: object
      properties:
        title:
          type: string
    reportPaceBuild:
      required:
      - propertyId
      type: object
      properties:
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        compareTo:
          type: string
          enum:
          - lastYear
          - yearBeforeLast
          - noComparison
          - lastYearAndYearBeforeLast
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        deductProjectedCancellationNoShowPercentageFromCurrentValues:
          type: boolean
        groupBy:
          type: string
          enum:
          - none
          - category
          - categoryGrouping
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        roomStatistics:
          type: string
          description: "On = Only Look for Stats On, Off = Only Look for Stats Off, Ignore = We don't Filter on Stats"
          enum:
          - "on"
          - "off"
          - ignore
        reservationDatePriorTo:
          type: string
          format: date-time
      example:
        categoryIds:
        - 4
        - 6
        compareTo: lastYear
        dateFrom: 2020-02-25 00:00:00
        dateTo: 2020-02-26 00:00:00
        groupBy: Category
        propertyIds:
        - 1
        - 2
        roomStatistics: ignore
        reservationDatePriorTo: 2020-02-27 00:00:00
    reportPace:
      type: object
      properties:
        title:
          type: string
        propertyId:
          type: integer
          format: int32
        propertyName:
          type: string
        categoryName:
          type: string
        categoryId:
          type: integer
          format: int32
        categoryGroupType:
          type: string
        categoryGroupTypeId:
          type: integer
          format: int32
        current:
          type: array
          items:
            $ref: '#/components/schemas/reportPaceCurrentPrevious'
        previous:
          type: array
          items:
            $ref: '#/components/schemas/reportPaceCurrentPrevious'
        variance:
          type: array
          items:
            $ref: '#/components/schemas/reportPaceVariance'
      example:
        title: Pace Report
        report:
        - propertyId: 1
          propertyName: Test property 1
          categoryName: Deluxe 004
          categoryId: 4
          categoryGroupType: ""
          categoryGroupTypeId: 0
          current:
          - reservation: 3
            nights: 5
            grossRevenue: 1048
            nettRevenue: 953.33
            averageDailyRateGross: 209.6
            averageDailyRateNett: 190.67
            occupancyPercent: 17.86
          previous:
          - reservation: 19
            nights: 27
            grossRevenue: 9704
            nettRevenue: 8821.81
            averageDailyRateGross: 359.41
            averageDailyRateNett: 326.73
            occupancyPercent: 96.43
          variance:
          - reservation: -16
            reservationPercent: -84.2105263157895
            nights: 22
            nightsPercent: -81.4814814814815
            grossRevenue: -8656
            grossRevenuePercent: -89.20032976092332
            nettRevenue: -7868.48
            nettRevenuePercent: -89.193487504265
            averageDailyRateGross: -149.81
            averageDailyRateGrossPercent: -41.68220138560419
            averageDailyRateNett: -136.06
            averageDailyRateNettPercent: -41.642946775625134
            occupancyPercent: -78.57
    reportPaceCurrentPrevious:
      type: object
      properties:
        reservation:
          type: integer
          format: int32
        nights:
          type: integer
          format: int32
        grossRevenue:
          type: integer
          format: int32
        nettRevenue:
          type: integer
          format: decimal
        averageDailyRateGross:
          type: integer
          format: decimal
        averageDailyRateNett:
          type: integer
          format: decimal
        occupancyPercent:
          type: integer
          format: decimal
    reportPaceVariance:
      type: object
      properties:
        reservation:
          type: integer
          format: int32
        reservationPercent:
          type: integer
          format: decimal
        nights:
          type: integer
          format: int32
        nightsPercent:
          type: integer
          format: decimal
        grossRevenue:
          type: integer
          format: int32
        grossRevenuePercent:
          type: integer
          format: decimal
        nettRevenue:
          type: integer
          format: decimal
        nettRevenuePercent:
          type: integer
          format: decimal
        averageDailyRateGross:
          type: integer
          format: decimal
        averageDailyRateGrossPercent:
          type: integer
          format: decimal
        averageDailyRateNett:
          type: integer
          format: decimal
        averageDailyRateNettPercent:
          type: integer
          format: decimal
        occupancyPercent:
          type: integer
          format: decimal
    reportParthfinderBuild:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        reportDate:
          type: string
          format: date
      example:
        propertyId: 2
        reportDate: 2022-01-11
    reportPerformanceIIBuild:
      required:
      - propertyId
      type: object
      properties:
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        comparisonAgainstSameTimeLastYear:
          type: boolean
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        groupBy2:
          type: string
          enum:
          - none
          - category
          - categoryGrouping
        monthlyBreakdownBy:
          type: string
          enum:
          - grossRevenue
          - nettRevenue
          - nights
        performanceBasedOn:
          type: string
          enum:
          - revenue
          - nights
          - reservations
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        replaceCancellationAndNoShowPercentageWithNettRevPercentage:
          type: boolean
        'reportType:':
          type: string
          enum:
          - company
          - travelAgent
          - rateType
          - bookingSoruce
          - reservationType
          - subReservationType
          - marketSegment
          - subMarketSegment
          - groupReservation
          - groupAllotment
        reportTypeOptionIds:
          type: array
          description: This option will allow you to pass the ID that corrosponds with the Report Type you have chosen to filter your reult on. e.g. If your Report Type is Rate Type you could pass your Rate Id's as the reportTypeOptionIds
          items:
            type: integer
            format: int32
        roomStatistics:
          type: string
          description: "On = Only Look for Stats On, Off = Only Look for Stats Off, Ignore = We don't Filter on Stats"
          enum:
          - "on"
          - "off"
          - ignore
        reservationDatePriorTo:
          type: string
          format: date-time
        showOnlyTop:
          type: integer
          format: int32
      example:
        categoryIds: []
        comparisonAgainstSameTimeLastYear: true
        dateFrom: 2020-05-01 00:00:00
        dateTo: 2020-05-31 00:00:00
        groupBy: Category
        monthlyBreakdownBy: grossRevenue
        performanceBasedOn: revenue
        propertyIds:
        - 1
        - 3
        - 4
        replaceCancellationAndNoShowPercentageWithNettRevPercentage: false
        reportType: company
        reportTypeOptionIds: []
        roomStatistics: ignore
        reservationDatePriorTo: 2020-06-12 00:00:00
        showOnlyTop: 10
    reportPerformanceII:
      type: object
      properties:
        title:
          type: string
        propertyId:
          type: integer
          format: int32
        propertyName:
          type: string
        categoryName:
          type: string
        categoryId:
          type: integer
          format: int32
        categoryGroupType:
          type: string
        categoryGroupTypeId:
          type: integer
          format: int32
        reportTypeEntity:
          type: string
        current:
          type: array
          items:
            $ref: '#/components/schemas/reportPerformanceIICurrentPrevious'
        previous:
          type: array
          items:
            $ref: '#/components/schemas/reportPerformanceIICurrentPrevious'
        variance:
          type: array
          items:
            $ref: '#/components/schemas/reportPerformanceIIVariance'
      example:
        title: Pace Report
        report:
        - propertyId: 1
          propertyName: Test property 1
          categoryName: ""
          categoryId: 0
          categoryGroupType: B1 Rooms
          categoryGroupTypeId: 22
          reportTypeEntity: company
          current:
          - reservation: 7
            cancellationPercent: 0
            noShowPercent: 0
            averageLeadTime: -0.43
            averageLengthOfStay: 1
            nights: 7
            grossRevenue: 0
            nettRevenue: 0
            averageDailyRateGross: 0
            averageDailyRateNett: 0
          previous:
          - reservation: 0
            cancellationPercent: 0
            noShowPercent: 0
            averageLeadTime: 0
            averageLengthOfStay: 0
            nights: 0
            grossRevenue: 0
            nettRevenue: 0
            averageDailyRateGross: 0
            averageDailyRateNett: 0
          variance:
          - reservation: 7
            reservationPercent: 0
            cancellationPercent: 0
            noShowPercent: 0
            averageLeadTime: -0.43
            averageLeadTimePercent: 0
            averageLengthOfStay: 1
            averageLengthOfStayPercent: 0
            nights: 7
            nightsPercent: 0
            grossRevenue: 0
            grossRevenuePercent: 0
            nettRevenue: 0
            nettRevenuePercent: 0
            averageDailyRateGross: 0
            averageDailyRateGrossPercent: 0
            averageDailyRateNett: 0
            averageDailyRateNettPercent: 0
    reportPerformanceIICurrentPrevious:
      type: object
      properties:
        reservation:
          type: integer
          format: int32
        cancellationPercent:
          type: integer
          format: int32
        noShowPercent:
          type: integer
          format: int32
        averageLeadTime:
          type: integer
          format: decimal
        averageLengthOfStay:
          type: integer
          format: int32
        nights:
          type: integer
          format: int32
        grossRevenue:
          type: integer
          format: int32
        nettRevenue:
          type: integer
          format: decimal
        averageDailyRateGross:
          type: integer
          format: decimal
        averageDailyRateNett:
          type: integer
          format: decimal
    reportPerformanceIIVariance:
      type: object
      properties:
        reservation:
          type: integer
          format: int32
        reservationPercent:
          type: integer
          format: decimal
        cancellationPercent:
          type: integer
          format: decimal
        noShowPercent:
          type: integer
          format: decimal
        averageLeadTime:
          type: integer
          format: decimal
        averageLeadTimePercent:
          type: integer
          format: decimal
        averageLengthOfStay:
          type: integer
          format: decimal
        averageLengthOfStayPercent:
          type: integer
          format: decimal
        nights:
          type: integer
          format: int32
        nightsPercent:
          type: integer
          format: decimal
        grossRevenue:
          type: integer
          format: int32
        grossRevenuePercent:
          type: integer
          format: decimal
        nettRevenue:
          type: integer
          format: decimal
        nettRevenuePercent:
          type: integer
          format: decimal
        averageDailyRateGross:
          type: integer
          format: decimal
        averageDailyRateGrossPercent:
          type: integer
          format: decimal
        averageDailyRateNett:
          type: integer
          format: decimal
        averageDailyRateNettPercent:
          type: integer
          format: decimal
    reportRevenueAndExpenseBuild:
      type: object
      properties:
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        dateFrom: 2020-05-01 00:00:00
        dateTo: 2020-05-31 00:00:00
        propertyIds:
        - 1
        - 2
    revenueAndExpenseResponse:
      type: object
      properties:
        reportData:
          type: array
          items:
            $ref: '#/components/schemas/revenueAndExpenseResponseBody'
      example:
        netDueToOwner: "0.00"
        totalPaymentsOnBehalfOfOwner: "0.00"
        paymentsOnBehalfOfOwner: []
        totalPayouts: "0.00"
        ownerShare: "0.00"
        netRevenue: "0.00"
        totalOperationalExpenses: "0.00"
        operationalExpenses: []
        grossRevenue: "0.00"
        averageRate: "0.00"
        occupancyPercent: "0.00"
        occupancyOwnerStay: 0
        occupancyUsed: 0
        occupancyAvailable: 0
        occupancyMaintenance: 0
        occupancyTotalAvailable: 0
        ownerId: 22
        propertyId: 1
        area: BUB/MAJ/1106/STU
        areaId: 34
        accountId: 59
        holdAmount: "0.00"
        paidToOwner: "0.00"
    revenueAndExpenseResponseBody:
      type: object
      properties:
        netDueToOwner:
          type: string
          format: number
        totalPaymentsOnBehalfOfOwner:
          type: string
          format: number
        paymentsOnBehalfOfOwner:
          type: string
          format: array
        totalPayouts:
          type: string
          format: number
        ownerShare:
          type: string
          format: number
        netRevenue:
          type: string
          format: number
        totalOperationalExpenses:
          type: string
          format: number
        operationalExpenses:
          type: string
          format: array
        grossRevenue:
          type: string
          format: number
        averageRate:
          type: string
          format: number
        occupancyPercent:
          type: string
          format: number
        occupancyOwnerStay:
          type: integer
          format: int32
        occupancyUsed:
          type: integer
          format: int32
        occupancyAvailable:
          type: integer
          format: int32
        occupancyMaintenance:
          type: integer
          format: int32
        occupancyTotalAvailable:
          type: integer
          format: int32
        ownerId:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
        area:
          type: string
        areaId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        holdAmount:
          type: string
          format: number
        paidToOwner:
          type: string
          format: number
    reservationBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        adults:
          type: integer
          format: int32
        allotmentAssociationID:
          type: string
          description: "Required when using combinations of Travel Agent, Group Allotments and Wholesalers"
        allotmentId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        arrivalDate:
          type: string
          format: date-time
        baseRateOverride:
          type: integer
          description: "if you pass null or 0 RMS will calculate the rate breakdown for you, if you pass a value here the base rate will appear overridden and RMS will pro rata the nightly rate minus any Packages or Taxes"
          format: int32
        totalRateOverride:
          type: integer
          description: "if you pass null or 0 RMS will calculate the rate breakdown for you, if you pass a value here the total rate will appear overridden and RMS will pro rata the nightly rate to include Base plus Packages. Taxes will be caculted ontop of the total rate override amount. If both baseRateOverride & totalRateOverride are passed in with a value then the totalRateOverride is used"
          format: int32
        billingCategoryId:
          type: integer
          format: int32
        bookingSourceId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        children:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        departureDate:
          type: string
          format: date-time
        discountId:
          type: integer
          format: int32
        groupAllotmentId:
          type: integer
          format: int32
        groupOptionId:
          type: integer
          format: int32
        groupReservationId:
          type: integer
          description: This field will only be honoured on the response of a POST
          format: int32
        guestId:
          type: integer
          format: int32
        infants:
          type: integer
          format: int32
        marketSegmentId:
          type: integer
          format: int32
        mealPlanId:
          type: integer
          format: int32
        notes:
          type: string
        onlineConfirmationId:
          type: integer
          format: int32
        otaNotes:
          type: string
        otaRef1:
          type: string
        otaRef2:
          type: string
        otaRef3:
          type: string
        rateTypeId:
          type: integer
          format: int32
        resTypeId:
          type: integer
          format: int32
        status:
          description: "This field is informational, any changes made will not be honoured"
          allOf:
          - $ref: '#/components/schemas/reservationStatus'
        subMarketSegmentId:
          type: integer
          format: int32
        travelAgentId:
          type: integer
          format: int32
        userDefined1:
          maxLength: 50
          type: string
        userDefined2:
          maxLength: 20
          type: string
        userDefined3:
          maxLength: 20
          type: string
        userDefined4:
          maxLength: 20
          type: string
        userDefined5:
          maxLength: 20
          type: string
        userDefined6:
          maxLength: 20
          type: string
        userDefined7:
          maxLength: 20
          type: string
        userDefined8:
          maxLength: 20
          type: string
        userDefined9:
          maxLength: 20
          type: string
        userDefined10:
          maxLength: 50
          type: string
        userDefined11:
          type: boolean
        userDefined12:
          type: boolean
        userDefined13:
          type: boolean
        userDefined14:
          type: string
          format: date-time
        userDefined15:
          type: string
          format: date-time
        voucherId:
          type: string
        wholesaleId:
          type: integer
          format: int32
      example:
        id: 0
        accountId: 0
        adults: 2
        allotmentAssociationID: TravelAgent
        allotmentId: 12457
        areaId: 3
        arrivalDate: 2017-11-17 14:00:00
        baseRateOverride: 0
        totalRateOverride: 0
        billingCategoryId: 0
        bookingSourceId: 2
        categoryId: 1
        children: 1
        companyId: 5
        departureDate: 2017-11-22 11:00:00
        discountId: 22
        groupAllotmentId: 0
        groupOptionId: 1314
        groupReservationId: 0
        guestId: 134541
        infants: 1
        notes: This is a note about my reservation
        onlineConfirmationId: 12986985
        otaNotes: This is a note from an OTA or Website
        otaRef1: V5986985s9
        otaRef2: BCOM-8976958
        otaRef3: "89869858896"
        rateTypeId: 1
        resTypeId: 0
        status: Confirmed
        marketSegmentId: 5
        mealPlanId: 5
        subMarketSegmentId: 5
        userDefined1: String 50
        userDefined2: String 20
        userDefined3: String 20
        userDefined4: String 20
        userDefined5: String 20
        userDefined6: String 20
        userDefined7: String 20
        userDefined8: String 20
        userDefined9: String 20
        userDefined10: String 50
        userDefined11: true
        userDefined12: true
        userDefined13: true
        userDefined14: 2016-08-29 09:25:00
        userDefined15: 2016-08-29 09:25:00
        travelAgentId: 1
        voucherId: B4569856985
    reservationStatus:
      type: object
      properties:
        status:
          type: string
          description: Valid Reservation Status
          enum:
          - unconfirmed
          - confirmed
          - arrived
          - departed
          - cancelled
          - maintenance
          - quote
          - stopSell
          - ownerOccupied
          - noShow
          - pencil
        reasonId:
          type: integer
          description: reasonId is an optional field that can be passed with the staus 'cancelled'. You can retrieve a list of cancellation related reasonIds via the call GET/reasons
          format: int32
        cancellationNote:
          type: string
          description: Free type note field used to add optional cancellation note
      example:
        status: cancelled
        reasonid: 1
        cancellationNote: Change Plans
    reservationsPatch:
      type: object
      properties:
        reservationIds:
          type: array
          items:
            type: integer
        patch:
          $ref: '#/components/schemas/reservationsPatch_patch'
      example:
        reservationIds:
        - 219970
        - 219971
        - 219972
        patch:
          activityId: 25
          accountId: 1259
          adults: 2
          additional1: 1
          additional2: 2
          additional3: 1
          additional4: 0
          additional5: 0
          additional6: 2
          additional7: 2
          allotmentAssociationID: TravelAgent
          areaId: 5
          areaName: Room 7
          arrivalDate: 2016-28-08 13:26:00
          attendees: "30"
          baseRateOverride: 0
          totalRateOverride: 0
          billing: Personal Account
          billingCategoryId: 0
          boatId: 6
          bookerContactId: 4
          bookingSourceId: 2
          bookingSourceName: Online
          businessLostId: 12
          businessSegmentId: 9
          cancellationPolicyId: 1
          cancelledDate: 2016-08-26 12:26:00
          cancelledById: 6
          cardId: A698659
          categoryId: 19
          categoryName: Super Delux Queen
          children: 1
          companyId: 5
          confirmedDate: 2016-08-22 19:25:00
          confirmedById: 5
          contactId: 9
          coordinator1Id: 8
          coordinator2Id: 7
          createdDate: 2016-08-22 19:25:00
          createdById: 35
          departureDate: 2019-09-29 09:25:00
          deposit: 20.0
          depositDate: 2019-09-29 09:25:00
          destinationCodeId: 6
          discountReasonId: 0
          dwellingTypeId: 3
          dwellingLengthId: 2
          dwellingYear: 1
          eta: Wednesday Midnight
          eventFinish: 2016-08-29 09:25:00
          eventName: Concert
          eventStart: 2019-08-29 09:25:00
          externalCancelId: bcom39658965
          externalReservationId: uy96598568
          fixedRes: true
          fixedResReason: 1
          groupAllotmentId: 7
          groupOptionId: 1314
          groupReservationId: 96598
          groupHeader: true
          guestGiven: Smithers
          guestId: 65
          guestSurname: Westingham
          housekeepingNote: housekeeping note
          infants: 1
          longTerm: true
          loyaltyMembershipTypeId: 12
          marketSegmentId: 12
          mealPlanId: 16
          ModifiedDate: 2016-08-22 19:25:00
          modifiedById: 50
          notes: This is a note about my reservation
          occupantId: 4
          onHold: false
          onlineConfirmationId: 12986985
          originId: 9
          otaNotes: "Booking.com - breakdown of pricing, etc"
          otaRef1: V5986985s9
          otaRef2: BCOM-8976958
          otaRef3: "89869858896"
          paymentModeId: 45
          posOnGroupMaster: false
          preArrivalCheckComplete: false
          preAuthAmount: 23.56
          preAuthCode: 2A
          preAuthExpDate: 2016-08-29 09:25:00
          propertyId: 1
          rateOnGroup: false
          rateTypeId: 3
          rateTypeName: Daily
          resTypeId: 8
          reservationType: Event
          secondDeposit: 15.0
          secondDepositDate: 2016-08-29 09:25:00
          secondDiscountReasonId: 0
          splitReservationId: 12358
          status: Confirmed
          subMarketSegmentId: 9
          subResTypeId: 5
          travelAgentId: 7
          travelAgentName: Booking.com
          userDefined1: String 50
          userDefined2: String 20
          userDefined3: String 20
          userDefined4: String 20
          userDefined5: String 20
          userDefined6: String 20
          userDefined7: String 20
          userDefined8: String 20
          userDefined9: String 20
          userDefined10: String 50
          userDefined11: true
          userDefined12: true
          userDefined13: true
          userDefined14: 2016-08-29 09:25:00
          userDefined15: 2016-08-29 09:25:00
          voucherId: B4569856985
          wholesalerId: 58
    reservationFull:
      type: object
      properties:
        id:
          type: integer
          format: int32
        activeMealPlanId:
          type: integer
          format: int32
        activityId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        adults:
          type: integer
          format: int32
        additional1:
          type: integer
          format: int32
        additional2:
          type: integer
          format: int32
        additional3:
          type: integer
          format: int32
        additional4:
          type: integer
          format: int32
        additional5:
          type: integer
          format: int32
        additional6:
          type: integer
          format: int32
        additional7:
          type: integer
          format: int32
        allotmentAssociationID:
          type: string
          description: "Required when using combinations of Travel Agent, Group Allotments and Wholesalers"
        allotmentId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        areaName:
          type: string
        areaNameLike:
          type: string
        arrivalDate:
          type: string
          format: date-time
        attendees:
          type: string
        billing:
          type: string
        boatId:
          type: integer
          format: int32
        bookerContactId:
          type: integer
          format: int32
        bookingSourceId:
          type: integer
          format: int32
        bookingSourceName:
          type: string
        businessLostId:
          type: integer
          format: int32
        businessSegmentId:
          type: integer
          format: int32
        cancellationPolicyId:
          type: integer
          format: int32
        cancelledDate:
          type: string
          format: date-time
        cancelledById:
          type: integer
          format: int32
        cardId:
          type: string
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        chargeToRoomLimit:
          type: number
          format: currency
        children:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        confirmedDate:
          type: string
          format: date-time
        confirmedById:
          type: integer
          format: int32
        contactId:
          type: integer
          format: int32
        coordinator1Id:
          type: integer
          format: int32
        coordinator2Id:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        createdById:
          type: integer
          format: int64
        departureDate:
          type: string
          format: date-time
        deposit:
          type: number
          format: currency
        depositDate:
          type: string
          format: date-time
        destinationCodeId:
          type: integer
          format: int32
        discountId:
          type: integer
          format: int32
        discountReasonId:
          type: integer
          format: int32
        dwellingTypeId:
          type: integer
          format: int32
        dwellingLengthId:
          type: integer
          format: int32
        eta:
          type: string
        eventFinish:
          type: string
          format: date-time
        eventName:
          type: string
        eventStart:
          type: string
          format: date-time
        externalCancelId:
          type: string
        externalReservationId:
          type: string
        fixedRes:
          type: boolean
        fixedResReasonId:
          type: integer
          format: int32
        groupAllotmentId:
          type: integer
          format: int32
        groupOptionId:
          type: integer
          format: int32
        groupHeader:
          type: boolean
        groupReservationId:
          type: integer
          format: int32
        guestGiven:
          type: string
        guestId:
          type: integer
          format: int32
        guestSurname:
          type: string
        housekeepingNote:
          type: string
        infants:
          type: integer
          format: int32
        longTerm:
          type: boolean
        loyaltyMembershipTypeId:
          type: integer
          format: int32
        marketSegmentId:
          type: integer
          format: int32
        mealPlanId:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        modifiedById:
          type: integer
          format: int64
        notes:
          type: string
        occupantId:
          type: integer
          format: int32
        onlineConfirmationId:
          type: integer
          format: int32
        originId:
          type: integer
          format: int32
        otaNotes:
          type: string
        otaRef1:
          type: string
        otaRef2:
          type: string
        otaRef3:
          type: string
        paymentModeId:
          type: integer
          format: int32
        posOnGroupMaster:
          type: boolean
        preArrivalCheckComplete:
          type: boolean
        preAuthAmount:
          type: number
          format: currency
        preAuthCode:
          type: string
        preAuthExpDate:
          type: number
          format: date-time
        propertyId:
          type: integer
          format: int32
        rateElementId:
          type: integer
          format: int32
        rateOnGroup:
          type: boolean
        rateTypeId:
          type: integer
          format: int32
        rateTypeName:
          type: string
        repeatId:
          type: integer
          format: int123
        resType:
          type: string
        resTypeId:
          type: integer
          format: int32
        reservationType:
          type: string
          enum:
          - Normal
          - PartOfGhost
          - Maintenance
          - Blocking
          - BedReservation
          - Parked
          - RoomMoveHeader
          - UserDefined
        secondDeposit:
          type: number
          format: currency
        secondDepositDate:
          type: string
          format: date-time
        secondDiscountReasonId:
          type: integer
          format: int32
        splitReservationId:
          type: integer
          format: int32
        status:
          type: string
        subMarketSegmentId:
          type: integer
          format: int32
        subResTypeId:
          type: integer
          format: int32
        travelAgentId:
          type: integer
          format: int32
        travelAgentName:
          type: string
        upgradeReasonId:
          type: integer
          format: int32
        userDefined1:
          maxLength: 50
          type: string
        userDefined2:
          maxLength: 20
          type: string
        userDefined3:
          maxLength: 20
          type: string
        userDefined4:
          maxLength: 20
          type: string
        userDefined5:
          maxLength: 20
          type: string
        userDefined6:
          maxLength: 20
          type: string
        userDefined7:
          maxLength: 20
          type: string
        userDefined8:
          maxLength: 20
          type: string
        userDefined9:
          maxLength: 20
          type: string
        userDefined10:
          maxLength: 50
          type: string
        userDefined11:
          type: boolean
        userDefined12:
          type: boolean
        userDefined13:
          type: boolean
        userDefined14:
          type: string
          format: date-time
        userDefined15:
          type: string
          format: date-time
        voucherId:
          type: string
        wholesalerId:
          type: integer
          format: int32
      example:
        id: 3681
        activeMealPlanId: 3
        activityId: 25
        accountId: 1259
        adults: 2
        additional1: 1
        additional2: 2
        additional3: 1
        additional4: 0
        additional5: 0
        additional6: 2
        additional7: 2
        allotmentAssociationID: TravelAgent
        allotmetnId: 12457
        areaId: 5
        areaName: Room 7
        areaNameLike: "01"
        arrivalDate: 2016-28-08 13:26:00
        attendees: "30"
        billing: Personal Account
        boatId: 6
        bookerContactId: 4
        bookingSourceId: 2
        bookingSourceName: Online
        businessLostId: 12
        businessSegmentId: 9
        cancellationPolicyId: 1
        cancelledDate: 2016-08-26 12:26:00
        cancelledById: 6
        cardId: A698659
        categoryId: 19
        categoryName: Super Delux Queen
        chargeToRoomLimit: 300.0
        children: 1
        companyId: 5
        confirmedDate: 2016-08-22 19:25:00
        confirmedById: 5
        contactId: 9
        coordinator1Id: 8
        coordinator2Id: 7
        createdDate: 2016-08-22 19:25:00
        createdById: 35
        departureDate: 2019-09-29 09:25:00
        deposit: 20.0
        depositDate: 2019-09-29 09:25:00
        destinationCodeId: 6
        discountId: 0
        discountReasonId: 0
        dwellingTypeId: "3,"
        dwellingLengthId: "2,"
        dwellingYear: "1,"
        eta: Wednesday Midnight
        eventFinish: 2016-08-29 09:25:00
        eventName: Concert
        eventStart: 2019-08-29 09:25:00
        externalCancelId: bcom39658965
        externalReservationId: uy96598568
        fixedRes: true
        fixedResReason: 1
        groupAllotmentId: 7
        groupOptionId: 1314
        groupReservationId: 96598
        groupHeader: true
        guestGiven: Smithers
        guestId: 65
        guestSurname: Westingham
        housekeepingNote: housekeeping note
        infants: 1
        longTerm: true
        loyaltyMembershipTypeId: 12
        marketSegmentId: 12
        mealPlanId: 16
        ModifiedDate: 2016-08-22 19:25:00
        modifiedById: 50
        notes: This is a note about my reservation
        occupantId: 4
        onlineConfirmationId: 12986985
        originId: 9
        otaNotes: "Booking.com - breakdown of pricing, etc"
        otaRef1: V5986985s9
        otaRef2: BCOM-8976958
        otaRef3: "89869858896"
        paymentModeId: 45
        posOnGroupMaster: false
        preAuthAmount: 23.56
        preAuthCode: 2A
        preAuthExpDate: 2016-08-29 09:25:00
        propertyId: 1
        rateElementId: 1
        rateOnGroup: false
        rateTypeId: 3
        rateTypeName: Daily
        repeatId: 0
        resTypeId: 8
        reservationType: Event
        secondDeposit: 15.0
        secondDepositDate: 2016-08-29 09:25:00
        secondDiscountReasonId: 0
        splitReservationId: 12358
        status: Confirmed
        subMarketSegmentId: 9
        subResTypeId: 5
        travelAgentId: 7
        travelAgentName: Bopoking.com
        upgradeReasonId: 33
        userDefined1: String 50
        userDefined2: String 20
        userDefined3: String 20
        userDefined4: String 20
        userDefined5: String 20
        userDefined6: String 20
        userDefined7: String 20
        userDefined8: String 20
        userDefined9: String 20
        userDefined10: String 50
        userDefined11: true
        userDefined12: true
        userDefined13: true
        userDefined14: 2016-08-29 09:25:00
        userDefined15: 2016-08-29 09:25:00
        voucherId: B4569856985
        wholesalerId: 58
    reservationSearch:
      type: object
      properties:
        accountIds:
          type: array
          items:
            type: integer
            format: int32
        areaIds:
          type: array
          items:
            type: integer
            format: int32
        areaNames:
          type: array
          items:
            type: string
        areaNameLike:
          type: string
        arriveFrom:
          type: string
          format: date-time
        arriveTo:
          type: string
          format: date-time
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        checkOutFrom:
          type: string
          format: date-time
        checkOutTo:
          type: string
          format: date-time
        createdFrom:
          type: string
          format: date-time
        createdTo:
          type: string
          format: date-time
        departFrom:
          type: string
          format: date-time
        departTo:
          type: string
          format: date-time
        groupReservationIds:
          type: array
          items:
            type: integer
            format: int32
        guestSurname:
          type: array
          items:
            type: string
        guestIds:
          type: array
          items:
            type: integer
            format: int32
        includeGroupMasterReservations:
          type: string
          default: excludeGroupMasters
          enum:
          - excludeGroupMasters
          - includeGroupMasters
          - onlyGroupMasters
        includeInterconnecterSiblings:
          type: boolean
        includeRoomMoveHeaders:
          type: boolean
        limitProjectedRevenueToDateRange:
          type: boolean
        otaReferences:
          type: array
          items:
            type: string
        propertyCodes:
          type: array
          items:
            type: string
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        reservationIds:
          type: array
          items:
            type: integer
            format: int32
        roomMoveReservationIds:
          type: array
          items:
            type: integer
            format: int32
        listOfStatus:
          type: array
          description: Valid Reservation Status
          items:
            type: string
            enum:
            - unconfirmed
            - confirmed
            - arrived
            - departed
            - cancelled
            - maintenance
            - quote
            - stopSell
            - ownerOccupied
            - noShow
            - pencil
        modifiedFrom:
          type: string
          format: date-time
        modifiedTo:
          type: string
          format: date-time
        projectedRevenueFromDate:
          type: string
          format: date-time
        projectedRevenueToDate:
          type: string
          format: date-time
        rmsOnlineConfirmationIds:
          type: array
          items:
            type: integer
            format: int32
        regoNumbers:
          type: array
          items:
            type: string
        reservationIdFrom:
          type: integer
          format: int32
        reservationIdTo:
          type: integer
          format: int32
        voucherIds:
          type: array
          items:
            type: string
        userDefined1:
          type: string
        userDefined2:
          type: string
        userDefined3:
          type: string
        userDefined4:
          type: string
        userDefined5:
          type: string
        userDefined6:
          type: string
        userDefined7:
          type: string
        userDefined8:
          type: string
        userDefined9:
          type: string
        userDefined10:
          type: string
      example:
        accountIds:
        - 12
        - 5
        - 702
        areaIds:
        - 1
        - 5
        - 4
        areaNames:
        - "207,208,209"
        areaNameLike: "01"
        arriveFrom: 2018-09-25 00:00:00
        arriveTo: 2018-09-27 00:00:00
        categoryIds:
        - 2
        - 5
        - 9
        createdFrom: 2018-09-25 00:00:00
        createdTo: 2018-09-27 00:00:00
        departFrom: 2018-09-25 00:00:00
        departTo: 2018-09-27 00:00:00
        groupReservationIds:
        - 1059
        - 1045
        guestSurname:
        - Smith
        - anderson
        guestIds:
        - 42
        - 459
        - 8
        includeGroupMasterReservations: ExcludeGroupMasters
        includeInterconnecterSiblings: false
        includeRoomMoveHeaders: false
        limitProjectedRevenueToDateRange: false
        otaReferences:
        - gh1232
        - g5444
        propertyCodes:
        - WCF
        - TCG
        propertyIds:
        - 1
        - 3
        - 17
        reservationIds:
        - 124
        - 8699
        - 2547
        roomMoveReservationIds:
        - 7589
        - 12
        listOfStatus:
        - confirmed
        - departed
        modifiedFrom: 2018-09-25 00:00:00
        modifiedTo: 2018-09-27 00:00:00
        projectedRevenueFromDate: 2018-09-25 00:00:00
        projectedRevenueToDate: 2018-09-27 00:00:00
        rmsOnlineConfirmationIds:
        - 1023456
        - 10245985
        regoNumbers:
        - "A7T778,ARE895"
        reservationIdFrom: 122
        reservationIdTo: 125
        voucherIds:
        - "A984646,B.com98464564"
        userDefined1": String 50
        userDefined2: String 20
        userDefined3: String 20
        userDefined4: String 20
        userDefined5: String 20
        userDefined6: String 20
        userDefined7: String 20
        userDefined8: String 20
        userDefined9: String 20
        userDefined10: String 50
    reservationLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        arrivalDate:
          type: string
          format: date-time
        cancelledDate:
          type: string
          format: date-time
        categoryId:
          type: integer
          format: int32
        departureDate:
          type: string
          format: date-time
        guestId:
          type: integer
          format: int32
        rateTypeId:
          type: integer
          format: int32
        rateTypeName:
          type: string
        status:
          type: string
      example:
        id: 3681
        accountId: 1259
        areaId: 5
        arrivalDate: 2017-11-12 02:03:44
        cancelledDate: 2017-11-25 17:25:00
        categoryId: 19
        departureDate: 2017-11-13 14:00:00
        guestId: 65
        rateTypeId: 3
        rateTypeName: Daily
        status: Confirmed
    reservationPatch:
      type: object
      properties:
        activityId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        adults:
          type: integer
          format: int32
        additional1:
          type: integer
          format: int32
        additional2:
          type: integer
          format: int32
        additional3:
          type: integer
          format: int32
        additional4:
          type: integer
          format: int32
        additional5:
          type: integer
          format: int32
        additional6:
          type: integer
          format: int32
        additional7:
          type: integer
          format: int32
        allotmentAssociationID:
          type: string
          description: "Required when using combinations of Travel Agent, Group Allotments and Wholesalers"
        areaId:
          type: integer
          format: int32
        areaName:
          type: string
        arrivalDate:
          type: string
          format: date-time
        attendees:
          type: string
        baseRateOverride:
          type: integer
          description: If you pass a value here the base rate will appear overridden and RMS will pro rata the nightly rate minus any Inclusive Packages or Inclusive Taxes
          format: int32
        totalRateOverride:
          type: integer
          description: If you pass a value here the total rate will appear overridden and RMS will pro rata the nightly rate minus any Packages or Exclusive Taxes. If both baseRateOverride & totalRateOverride are passed in with a value then the totalRateOverride is used
          format: int32
        billing:
          type: string
        billingCategoryId:
          type: integer
          format: int32
        boatId:
          type: integer
          format: int32
        bookerContactId:
          type: integer
          format: int32
        bookingSourceId:
          type: integer
          format: int32
        bookingSourceName:
          type: string
        businessLostId:
          type: integer
          format: int32
        businessSegmentId:
          type: integer
          format: int32
        cancellationPolicyId:
          type: integer
          format: int32
        cancelledDate:
          type: string
          format: date-time
        cancelledById:
          type: integer
          format: int32
        cardId:
          type: string
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        children:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        confirmedDate:
          type: string
          format: date-time
        confirmedById:
          type: integer
          format: int32
        contactId:
          type: integer
          format: int32
        coordinator1Id:
          type: integer
          format: int32
        coordinator2Id:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        createdById:
          type: integer
          format: int64
        departureDate:
          type: string
          format: date-time
        deposit:
          type: number
          format: currency
        depositDate:
          type: string
          format: date-time
        destinationCodeId:
          type: integer
          format: int32
        discountReasonId:
          type: integer
          format: int32
        dwellingTypeId:
          type: integer
          format: int32
        dwellingLengthId:
          type: integer
          format: int32
        dwellingYear:
          type: string
        eta:
          type: string
        eventFinish:
          type: string
          format: date-time
        eventName:
          type: string
        eventStart:
          type: string
          format: date-time
        externalCancelId:
          type: string
        externalReservationId:
          type: string
        fixedRes:
          type: boolean
        fixedResReasonId:
          type: integer
          format: int32
        groupAllotmentId:
          type: integer
          format: int32
        groupOptionId:
          type: integer
          format: int32
        groupHeader:
          type: boolean
        groupReservationId:
          type: integer
          format: int32
        guestGiven:
          type: string
        guestId:
          type: integer
          format: int32
        guestSurname:
          type: string
        housekeepingNote:
          type: string
        infants:
          type: integer
          format: int32
        longTerm:
          type: boolean
        loyaltyMembershipTypeId:
          type: integer
          format: int32
        marketSegmentId:
          type: integer
          format: int32
        mealPlanId:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        modifiedById:
          type: integer
          format: int64
        notes:
          type: string
        occupantId:
          type: integer
          format: int32
        onHold:
          type: boolean
        onlineConfirmationId:
          type: integer
          format: int32
        originId:
          type: integer
          format: int32
        otaNotes:
          type: string
        otaRef1:
          type: string
        otaRef2:
          type: string
        otaRef3:
          type: string
        paymentModeId:
          type: integer
          format: int32
        posOnGroupMaster:
          type: boolean
        preArrivalCheckComplete:
          type: boolean
        preAuthAmount:
          type: number
          format: currency
        preAuthCode:
          type: string
        preAuthExpDate:
          type: number
          format: date-time
        propertyId:
          type: integer
          format: int32
        rateOnGroup:
          type: boolean
        rateTypeId:
          type: integer
          format: int32
        rateTypeName:
          type: string
        resType:
          type: string
        resTypeId:
          type: integer
          format: int32
        reservationType:
          type: string
        secondDeposit:
          type: number
          format: currency
        secondDepositDate:
          type: string
          format: date-time
        secondDiscountReasonId:
          type: integer
          format: int32
        splitReservationId:
          type: integer
          format: int32
        status:
          type: string
        subMarketSegmentId:
          type: integer
          format: int32
        subResTypeId:
          type: integer
          format: int32
        travelAgentId:
          type: integer
          format: int32
        travelAgentName:
          type: string
        upgradeReasonId:
          type: integer
          format: int32
        userDefined1:
          maxLength: 50
          type: string
        userDefined2:
          maxLength: 20
          type: string
        userDefined3:
          maxLength: 20
          type: string
        userDefined4:
          maxLength: 20
          type: string
        userDefined5:
          maxLength: 20
          type: string
        userDefined6:
          maxLength: 20
          type: string
        userDefined7:
          maxLength: 20
          type: string
        userDefined8:
          maxLength: 20
          type: string
        userDefined9:
          maxLength: 20
          type: string
        userDefined10:
          maxLength: 50
          type: string
        userDefined11:
          type: boolean
        userDefined12:
          type: boolean
        userDefined13:
          type: boolean
        userDefined14:
          type: string
          format: date-time
        userDefined15:
          type: string
          format: date-time
        voucherId:
          type: string
        wholesalerId:
          type: integer
          format: int32
      example:
        activityId: 25
        accountId: 1259
        adults: 2
        additional1: 1
        additional2: 2
        additional3: 1
        additional4: 0
        additional5: 0
        additional6: 2
        additional7: 2
        allotmentAssociationID: TravelAgent
        areaId: 5
        areaName: Room 7
        arrivalDate: 2016-28-08 13:26:00
        attendees: "30"
        baseRateOverride: 0
        totalRateOverride: 0
        billing: Personal Account
        billingCategoryId: 0
        boatId: 6
        bookerContactId: 4
        bookingSourceId: 2
        bookingSourceName: Online
        businessLostId: 12
        businessSegmentId: 9
        cancellationPolicyId: 1
        cancelledDate: 2016-08-26 12:26:00
        cancelledById: 6
        cardId: A698659
        categoryId: 19
        categoryName: Super Delux Queen
        children: 1
        companyId: 5
        confirmedDate: 2016-08-22 19:25:00
        confirmedById: 5
        contactId: 9
        coordinator1Id: 8
        coordinator2Id: 7
        createdDate: 2016-08-22 19:25:00
        createdById: 35
        departureDate: 2019-09-29 09:25:00
        deposit: 20.0
        depositDate: 2019-09-29 09:25:00
        destinationCodeId: 6
        discountReasonId: 0
        dwellingTypeId: "3,"
        dwellingLengthId: "2,"
        dwellingYear: "1,"
        eta: Wednesday Midnight
        eventFinish: 2016-08-29 09:25:00
        eventName: Concert
        eventStart: 2019-08-29 09:25:00
        externalCancelId: bcom39658965
        externalReservationId: uy96598568
        fixedRes: true
        fixedResReason: 1
        groupAllotmentId: 7
        groupOptionId: 1314
        groupReservationId: 96598
        groupHeader: true
        guestGiven: Smithers
        guestId: 65
        guestSurname: Westingham
        housekeepingNote: housekeeping note
        infants: 1
        longTerm: true
        loyaltyMembershipTypeId: 12
        marketSegmentId: 12
        mealPlanId: 16
        ModifiedDate: 2016-08-22 19:25:00
        modifiedById: 50
        notes: This is a note about my reservation
        occupantId: 4
        onHold: false
        onlineConfirmationId: 12986985
        originId: 9
        otaNotes: "Booking.com - breakdown of pricing, etc"
        otaRef1: V5986985s9
        otaRef2: BCOM-8976958
        otaRef3: "89869858896"
        paymentModeId: 45
        posOnGroupMaster: false
        preArrivalCheckComplete: "false,"
        preAuthAmount: 23.56
        preAuthCode: 2A
        preAuthExpDate: 2016-08-29 09:25:00
        propertyId: 1
        rateOnGroup: false
        rateTypeId: 3
        rateTypeName: Daily
        resTypeId: 8
        reservationType: Event
        secondDeposit: 15.0
        secondDepositDate: 2016-08-29 09:25:00
        secondDiscountReasonId: 0
        splitReservationId: 12358
        status: Confirmed
        subMarketSegmentId: 9
        subResTypeId: 5
        travelAgentId: 7
        travelAgentName: Bopoking.com
        upgradeReasonId: 33
        userDefined1: String 50
        userDefined2: String 20
        userDefined3: String 20
        userDefined4: String 20
        userDefined5: String 20
        userDefined6: String 20
        userDefined7: String 20
        userDefined8: String 20
        userDefined9: String 20
        userDefined10: String 50
        userDefined11: true
        userDefined12: true
        userDefined13: true
        userDefined14: 2016-08-29 09:25:00
        userDefined15: 2016-08-29 09:25:00
        voucherId: B4569856985
        wholesalerId: 58
    reservationBasicGroup:
      type: object
      properties:
        id:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        adults:
          type: integer
          format: int32
        allotmentAssociationID:
          type: string
          description: "Required when using combinations of Travel Agent, Group Allotments and Wholesalers"
        allotmentId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        arrivalDate:
          type: string
          format: date-time
        baseRateOverride:
          type: integer
          description: "if you pass null or 0 RMS will calculate the rate breakdown for you, if you pass a value here the base rate will appear overridden and RMS will pro rata the nightly rate minus any Inclusive Packages or Inclusive Taxes"
          format: int32
        totalRateOverride:
          type: integer
          description: "if you pass null or 0 RMS will calculate the rate breakdown for you, if you pass a value here the total rate will appear overridden and RMS will pro rata the nightly rate minus any Packages or Exclusive Taxes. If both baseRateOverride & totalRateOverride are passed in with a value then the totalRateOverride is used"
          format: int32
        bookingSourceId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        children:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        departureDate:
          type: string
          format: date-time
        discountId:
          type: integer
          format: int32
        groupAllotmentId:
          type: integer
          format: int32
        groupReservationId:
          type: integer
          description: This field will only be honoured on the response of a POST
          format: int32
        guestId:
          type: integer
          format: int32
        infants:
          type: integer
          format: int32
        marketSegmentId:
          type: integer
          format: int32
        notes:
          type: string
        onlineConfirmationId:
          type: integer
          format: int32
        otaRef1:
          type: string
        otaRef2:
          type: string
        otaRef3:
          type: string
        rateTypeId:
          type: integer
          format: int32
        resTypeId:
          type: integer
          format: int32
        status:
          description: "This field is informational, any changes made will not be honoured"
          allOf:
          - $ref: '#/components/schemas/reservationStatus'
        subMarketSegmentId:
          type: integer
          format: int32
        travelAgentId:
          type: integer
          format: int32
        userDefined1:
          maxLength: 50
          type: string
        userDefined2:
          maxLength: 20
          type: string
        userDefined3:
          maxLength: 20
          type: string
        userDefined4:
          maxLength: 20
          type: string
        userDefined5:
          maxLength: 20
          type: string
        userDefined6:
          maxLength: 20
          type: string
        userDefined7:
          maxLength: 20
          type: string
        userDefined8:
          maxLength: 20
          type: string
        userDefined9:
          maxLength: 20
          type: string
        userDefined10:
          maxLength: 50
          type: string
        userDefined11:
          type: boolean
        userDefined12:
          type: boolean
        userDefined13:
          type: boolean
        userDefined14:
          type: string
          format: date-time
        userDefined15:
          type: string
          format: date-time
        voucherId:
          type: string
        wholesaleId:
          type: integer
          format: int32
      example:
      - id: 0
        accountId: 0
        adults: 2
        allotmentAssociationId: travelAgent
        allotmentId: 12457
        areaId: 22
        arrivalDate: 2020-10-02 14:00:00
        baseRateOverride: 0
        totalRateOverride: 0
        bookingSourceId: 2
        categoryId: 4
        children: 1
        companyId: 5
        departureDate: 2020-10-04 14:00:00
        discountId: 0
        groupAllotmentId: 0
        groupReservationId: 0
        guestId: 138220
        infants: 1
        notes: This is a note about my reservation
        onlineConfirmationId: 0
        otaRef1: "0"
        otaRef2: "0"
        otaRef3: "0"
        rateTypeId: 1355
        resTypeId: 0
        status: Confirmed
        subMarketSegmentId: 0
        userDefined1: String 50
        userDefined2: String 20
        userDefined3: String 20
        userDefined4: String 20
        userDefined5: String 20
        userDefined6: String 20
        userDefined7: String 20
        userDefined8: String 20
        userDefined9: String 20
        userDefined10: String 50
        userDefined11: true
        userDefined12: true
        userDefined13: true
        userDefined14: 2016-08-29 09:25:00
        userDefined15: 2016-08-29 09:25:00
        travelAgentId: 1
        voucherId: "0"
      - id: 0
        accountId: 0
        adults: 2
        areaId: 21
        arrivalDate: 2020-10-02 14:00:00
        allotmentAssociationId: travelAgent
        allotmentId: 12457
        baseRateOverride: 0
        totalRateOverride: 0
        bookingSourceId: 2
        categoryId: 4
        children: 1
        companyId: 5
        departureDate: 2020-10-04 14:00:00
        discountId: 0
        groupAllotmentId: 0
        groupReservationId: 0
        guestId: 138220
        infants: 1
        notes: This is a note about my reservation
        onlineConfirmationId: 0
        otaRef1: "0"
        otaRef2: "0"
        otaRef3: "0"
        rateTypeId: 1355
        resTypeId: 0
        status: Confirmed
        subMarketSegmentId: 0
        userDefined1: String 50
        userDefined2: String 20
        userDefined3: String 20
        userDefined4: String 20
        userDefined5: String 20
        userDefined6: String 20
        userDefined7: String 20
        userDefined8: String 20
        userDefined9: String 20
        userDefined10: String 50
        userDefined11: true
        userDefined12: true
        userDefined13: true
        userDefined14: 2016-08-29 09:25:00
        userDefined15: 2016-08-29 09:25:00
        travelAgentId: 1
        voucherId: "0"
    reservationsIdCommissions:
      type: object
      properties:
        reservationId:
          type: integer
        agentId:
          type: integer
        commission:
          type: number
          format: float
        commissionType:
          type: string
          enum:
          - UseAgentCommission
          - UsePercentage
          - UseDailyDollarAmount
          - NoCommission
          - UseTotalDollarAmount
        description:
          type: string
      example:
        reservationId: 222130
        agentId: 2673
        commission: 15.0
        commissionType: UseDailyDollarAmount
        description: Daily 15.00
    reservationPencil:
      required:
      - areaId
      - arrivalDate
      - categoryId
      - departureDate
      - expiryDate
      - guestSurname
      type: object
      properties:
        id:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        arrivalDate:
          type: string
          format: date-time
        categoryId:
          type: integer
          format: int32
        departureDate:
          type: string
          format: date-time
        expiryDate:
          type: string
          format: date-time
        guestId:
          type: integer
          description: "If you wish to create a pencil reservation with an existing guest, populate the guestId field and leave the other guest fields blank (If the other guest fields are populated they will be ignored). Alternatively, if you do not have an existing guestId populate the guest values i.e. guestName etc and we will create a guest for you and return the guestId in the response"
          format: int32
        guestEmail:
          type: string
        guestGiven:
          type: string
        guestMobile:
          type: string
        guestSurname:
          type: string
        note:
          type: string
        status:
          description: "This field is informational, any changes made will not be honoured"
          allOf:
          - $ref: '#/components/schemas/reservationStatus'
      example:
        id: 0
        areaId: 16
        arrivalDate: 2019-10-22 14:00:00
        categoryId: 4
        departureDate: 2019-10-23 11:00:00
        expiryDate: 2019-10-18 00:00:00
        guestId: 1235678
        guestEmail: vic@rms.com.au
        guestGiven: Smithers
        guestMobile: "04123456987"
        guestSurname: French
        note: This is a note about my reservation
        status: Pencil
    reservationGroupPencil:
      type: object
      properties:
        id:
          type: integer
          format: int32
        expiryDate:
          type: string
          format: date-time
        guestId:
          type: integer
          description: "If you wish to create a pencil reservation with an existing guest, populate the guestId field and leave the other guest fields blank (If the other guest fields are populated they will be ignored). Alternatively, if you do not have an existing guestId populate the guest values i.e. guestName etc and we will create a guest for you and return the guestId in the response"
          format: int32
        guestEmail:
          type: string
        guestGiven:
          type: string
        guestMobile:
          type: string
        guestSurname:
          type: string
        note:
          type: string
        status:
          description: "This field is informational, any changes made will not be honoured"
          allOf:
          - $ref: '#/components/schemas/reservationStatus'
        pencils:
          type: array
          items:
            type: integer
            format: int32
        areaId:
          type: integer
          format: int32
        arrivalDate:
          type: string
          format: date-time
        categoryId:
          type: integer
          format: int32
        departureDate:
          type: string
          format: date-time
      example:
        id: 0
        expiryDate: 2024-09-18 00:00:00
        guestId: 1235678
        guestEmail: vic@rms.com.au
        guestGiven: Smithers
        guestMobile: "04123456987"
        guestSurname: French
        note: This is a note about my reservation
        status: Pencil
        pencils:
        - id: 0
          areaId: 20
          arrivalDate: 2024-10-21 14:00:00
          categoryId: 4
          departureDate: 2024-10-22 11:00:00
        - id: 0
          areaId: 21
          arrivalDate: 2024-10-21 14:00:00
          categoryId: 4
          departureDate: 2024-10-22 11:00:00
    reservationGroupPencilResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        expiryDate:
          type: string
          format: date-time
        guestId:
          type: integer
          format: int32
        guestEmail:
          type: string
        guestGiven:
          type: string
        guestMobile:
          type: string
        guestSurname:
          type: string
        note:
          type: string
        status:
          description: "This field is informational, any changes made will not be honoured"
          allOf:
          - $ref: '#/components/schemas/reservationStatus'
        pencils:
          type: array
          items:
            type: integer
            format: int32
        areaId:
          type: integer
          format: int32
        arrivalDate:
          type: string
          format: date-time
        categoryId:
          type: integer
          format: int32
        departureDate:
          type: string
          format: date-time
      example:
        id: 216814
        expiryDate: 2024-09-18 00:00:00
        guestId: 1235678
        guestEmail: vic@rms.com.au
        guestGiven: Smithers
        guestMobile: "04123456987"
        guestSurname: French
        note: This is a note about my reservation
        status: Pencil
        pencils:
        - id: 216815
          areaId: 20
          arrivalDate: 2024-10-21 14:00:00
          categoryId: 4
          departureDate: 2024-10-22 11:00:00
        - id: 216816
          areaId: 21
          arrivalDate: 2024-10-21 14:00:00
          categoryId: 4
          departureDate: 2024-10-22 11:00:00
    maintenance:
      type: object
      properties:
        id:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        cancelledDate:
          type: string
          format: date-time
        categoryId:
          type: integer
          format: int32
        note:
          type: string
        reasonId:
          type: integer
          format: int32
      example:
        id: 0
        areaId: 13
        dateFrom: 2023-03-20 10:00:00
        dateTo: 2023-03-21 17:30:00
        cancelledDate: 1900-01-01
        categoryId: 4
        notes: aircon is broken
        reasonId: 36
    autoAllocateAreaRequest:
      type: object
      properties:
        reservationIds:
          type: array
          items:
            type: integer
            format: int32
      description: Used:<br>POST /reservations/autoAllocateAreas
      example:
        reservationIds:
        - 165654
        - 5464564
        - 5465465
    autoAllocateAreaResponse:
      type: object
      properties:
        areaId:
          type: integer
          format: int32
        errorMessage:
          type: string
        reservationId:
          type: integer
          format: int32
        success:
          type: boolean
      description: Used:<br>POST /reservations/autoAllocateAreas
      example:
        areaId: 12
        errorMessage: ""
        reservationId: 162630
        success: true
    reservationsDailyRatesOverride:
      type: object
      properties:
        reasonId:
          type: integer
        dailyRates:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/reservationsDailyRatesOverride_dailyRates'
      example:
        reasonId: 41
        dailyRates:
        - theDate: 2025-03-25
          baseRate: 160
        - theDate: 2025-03-26
          baseRate: 180
        - theDate: 2025-03-27
          baseRate: 200
    dailyRateBasicArray:
      type: object
      properties:
        additionalsAmount:
          type: number
          format: currency
        currency:
          type: string
        discountAmount:
          type: number
          format: currency
        dynamicAmount:
          type: number
          format: currency
        exclusiveTax:
          type: number
          format: currency
        linkedRateAdjustmentAmount:
          type: number
          format: currency
        marketSegmentId:
          type: integer
          format: int32
        packageAmount:
          type: number
          format: currency
        packageAmountIncludedInRateAmount:
          type: number
          format: currency
        rateAmount:
          type: number
          format: currency
        rateElement:
          type: string
        ratePeriod:
          type: string
        rateTable:
          type: string
        rateTypeId:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
        stayDate:
          type: string
          format: date-time
        totalRateAmount:
          type: number
          format: currency
        xNightsDiscount:
          type: number
          format: currency
      description: Used:<br>POST /reservations/dailyRates/search
      example:
      - additionalsAmount: 0.0
        currency: AUD
        discountAmount: 29.25
        dynamicAmount: 800.0
        exclusiveTax: 0.0
        linkedRateAdjustmentAmount: 0.0
        marketSegmentId: 1
        packageAmount: 0.0
        rateAmount: 800.0
        rateElement: ""
        ratePeriod: ""
        rateTable: CD PH Winter hols
        rateTypeId: 1416
        reservationId: 215470
        stayDate: 2023-06-01 00:00:00
        totalRateAmount: 844.0
        xNightsDiscount: 0.0
        packageAmountIncludedInRateAmount: 20.0
      - additionalsAmount: 0.0
        currency: AUD
        discountAmount: 0.0
        dynamicAmount: 800.0
        exclusiveTax: 0.0
        linkedRateAdjustmentAmount: 0.0
        marketSegmentId: 1
        packageAmount: 44.0
        rateAmount: 800.0
        rateElement: ""
        ratePeriod: ""
        rateTable: CD PH Winter hols
        rateTypeId: 1416
        reservationId: 215471
        stayDate: 2023-06-01 00:00:00
        totalRateAmount: 844.0
        xNightsDiscount: 0.0
        packageAmountIncludedInRateAmount: 20.0
    reservationsDiscountOverride:
      type: object
      properties:
        percentage:
          $ref: '#/components/schemas/reservationsDiscountOverride_percentage'
        amount:
          $ref: '#/components/schemas/reservationsDiscountOverride_amount'
      example:
        percentage:
          percentage: 3
          noGreaterThan: 12.0
          includePackage: true
          includeAdditionals: true
          appliestoTotalRate: false
        amount:
          amount: 15.0
    reservationsDiscountsSearch:
      required:
      - arrivalDate
      - categoryId
      - departureDate
      - rateId
      type: object
      properties:
        categoryId:
          type: integer
        rateId:
          type: integer
        arrivalDate:
          type: string
          format: date
        departureDate:
          type: string
          format: date
      example:
        categoryId: 4
        rateId: 1416
        arrivalDate: 2025-08-12
        departureDate: 2025-08-14
    reservationsDiscountsSearchResponseFull:
      type: array
      example:
      - availableToMembers: false
        glCodeId: 238
        glCodeType: UseDefault
        discountType: Percentage
        percentage:
          percentage: 15.0
          noGreaterThan: 9999.0
          includePackage: false
          includeAdditionals: false
          appliesToTotalRate: false
        availableToIbe: false
        description: ""
        minimumNightStay: 0
        maximumNightStay: 0
        id: 65
        name: 15% Discount
      - availableToMembers: false
        glCodeId: 376
        glCodeType: UseDefault
        discountType: Percentage
        percentage:
          percentage: 20.0
          noGreaterThan: 99999.0
          includePackage: false
          includeAdditionals: false
          appliesToTotalRate: false
        availableToIbe: false
        description: ""
        minimumNightStay: 0
        maximumNightStay: 0
        id: 121
        name: Discount Without Validation Options
      items:
        $ref: '#/components/schemas/reservationsDiscountsSearchResponseFull_inner'
    reservationDocumentation:
      type: object
      properties:
        documentName:
          type: string
        documentContent:
          type: string
          format: base64
        note:
          type: string
      example:
        documentName: Picture.png
        documentContent: 
        note: Logo
    reservationPackageArray:
      type: object
      properties:
        id:
          type: integer
          format: int32
        sundryId:
          type: integer
          format: int32
        sundryDescription:
          type: string
        quantity:
          type: integer
          format: int32
        perAdult:
          type: integer
          format: decimal
        perChild:
          type: integer
          format: decimal
        perInfant:
          type: integer
          format: decimal
        perAdditional1:
          type: integer
          format: decimal
        perAdditional2:
          type: integer
          format: decimal
        perAdditional3:
          type: integer
          format: decimal
        perAdditional4:
          type: integer
          format: decimal
        perAdditional5:
          type: integer
          format: decimal
        showOnccount:
          type: boolean
        applyChargeDescription:
          type: string
      example:
        id: 43196
        sundryId: 313
        sundryDescription: Fancy Pants Package
        quantity: 2
        perAdult: 5.0
        perChild: 5.0
        perInfant: 0.0
        perAdditional1: 0.0
        perAdditional2: 0.0
        perAdditional3: 0.0
        perAdditional4: 0.0
        perAdditional5: 0.0
        showOnccount: false
        applyChargeDescription: "On The 1st Period (Determined by Tariff Table - Hourly, Nightly or Daily)"
    reservationsPackagesSearch:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
      example:
        ids:
        - 223811
        - 223814
    reservationsPackagesResponse:
      type: array
      example:
      - reservationId: 223811
        packages:
        - id: 43641
          sundryId: 1411
          sundryDescription: Luxurious Robe
          quantity: 1
          perAdult: 0.0
          perChild: 0.0
          perInfant: 0.0
          perAdditional1: 0.0
          perAdditional2: 0.0
          perAdditional3: 0.0
          perAdditional4: 0.0
          perAdditional5: 0.0
          showOnccount: false
          applyChargeDescription: "Every Period (Determined by Tariff Table - Hourly, Nightly or Daily)"
          amount: 12.0
        - id: 43640
          sundryId: 1410
          sundryDescription: Spa Visit
          quantity: 1
          perAdult: 0.0
          perChild: 0.0
          perInfant: 0.0
          perAdditional1: 0.0
          perAdditional2: 0.0
          perAdditional3: 0.0
          perAdditional4: 0.0
          perAdditional5: 0.0
          showOnccount: false
          applyChargeDescription: "Every Period (Determined by Tariff Table - Hourly, Nightly or Daily)"
          amount: 50.0
      - reservationId: 223814
        packages:
        - id: 43658
          sundryId: 6
          sundryDescription: Restaurant Food
          quantity: 1
          perAdult: 0.0
          perChild: 0.0
          perInfant: 0.0
          perAdditional1: 0.0
          perAdditional2: 0.0
          perAdditional3: 0.0
          perAdditional4: 0.0
          perAdditional5: 0.0
          showOnccount: false
          applyChargeDescription: "On The 1st Period (Determined by Tariff Table - Hourly, Nightly or Daily)"
          amount: 120.0
        - id: 43659
          sundryId: 111
          sundryDescription: B1 B/fast Bev
          quantity: 2
          perAdult: 0.0
          perChild: 0.0
          perInfant: 0.0
          perAdditional1: 0.0
          perAdditional2: 0.0
          perAdditional3: 0.0
          perAdditional4: 0.0
          perAdditional5: 0.0
          showOnccount: false
          applyChargeDescription: "Every Period (Determined by Tariff Table - Hourly, Nightly or Daily)"
          amount: 6.0
        - id: 43657
          sundryId: 42
          sundryDescription: B1 B/Fast food
          quantity: 2
          perAdult: 0.0
          perChild: 0.0
          perInfant: 0.0
          perAdditional1: 0.0
          perAdditional2: 0.0
          perAdditional3: 0.0
          perAdditional4: 0.0
          perAdditional5: 0.0
          showOnccount: false
          applyChargeDescription: "Every Period (Determined by Tariff Table - Hourly, Nightly or Daily)"
          amount: 50.0
      items:
        $ref: '#/components/schemas/reservationsPackagesResponse_inner'
    reservationRequirement:
      required:
      - dateFrom
      - dateTo
      - quantity
      - requirementId
      type: object
      properties:
        amount:
          type: integer
          format: decimal
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int32
        requirementId:
          type: integer
          format: int32
        secondaryCurrency:
          type: integer
          format: decimal
        name:
          type: string
        amountOverride:
          type: array
          items:
            $ref: '#/components/schemas/reservationRequirementOverride'
      example:
        amount: 26.9
        dateFrom: 2019-10-23 00:00:00
        dateTo: 2019-10-21 00:00:00
        quantity: 2
        requirementId: 2
        secondCurrency: 0
        name: Custom Description
        amountOverride:
          feeType: PerPeriod
          perAdult: 0.0
          perChild: 0.0
          perInfant: 0.0
          unitPrice: 12.0
    reservationRequirementOverride:
      type: object
      properties:
        feeType:
          type: string
          enum:
          - PerPerson
          - PerPeriod
        perAdult:
          type: integer
          format: decimal
        perChild:
          type: integer
          format: decimal
        perInfant:
          type: integer
          format: decimal
        unitPrice:
          type: integer
          format: decimal
    reservationsRequirementGetResponse:
      type: object
      properties:
        Id:
          type: integer
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        quantity:
          type: integer
        amount:
          type: number
          format: float
        name:
          type: string
        reservationId:
          type: integer
        secondCurrency:
          type: number
          format: float
        masterRequirementId:
          type: integer
      example:
      - Id: 67762
        dateFrom: 2024-08-28 14:00:00
        dateTo: 2024-08-28 14:00:00
        quantity: 0
        amount: 60.0
        name: Requirement
        reservationId: 216486
        secondCurrency: 0.0
        masterRequirementId: 66942
    reservationArraySearch:
      type: object
      properties:
        ids:
          type: array
          description: This call is limitied to only allow you to pass 50 reservations ID's per call
          items:
            type: integer
            format: int32
      example:
        ids:
        - 215469
    reservationRequirementArray:
      type: object
      properties:
        amount:
          type: integer
          format: decimal
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        name:
          type: string
        reservationId:
          type: integer
          format: int32
      example:
        amount: 26.9
        dateFrom: 2019-10-23 00:00:00
        dateTo: 2019-10-21 00:00:00
        id: 2
        quantity: 2
        name: Early check in online. 12 noon check in.
        reservationId: 21548
    actualAccountArray:
      type: object
      properties:
        reservationId:
          type: integer
        accountId:
          type: integer
        accountCurrencyView:
          type: string
        currencyCode:
          type: string
        secondDepositRequiredByDate:
          type: string
          format: date-time
        secondDeposit:
          type: number
          format: float
        arBalance:
          type: number
          format: float
        accommodationBalance:
          type: number
          format: float
        baseRate:
          type: number
          format: float
        billCategoryType:
          type: string
        createTotalRate:
          type: boolean
        depositRequiredByDate:
          type: string
          format: date-time
        deposit:
          type: number
          format: float
        discountAmount:
          type: number
          format: float
        discountId:
          type: integer
        discountName:
          type: string
        discountReason:
          type: string
        electricityBalance:
          type: number
          format: float
        extrasBalance:
          type: number
          format: float
        gasBalance:
          type: number
          format: float
        hideRateOnCorrespondence:
          type: boolean
        package:
          type: number
          format: float
        travelAgentCommissionPercentage:
          type: number
          format: float
        travelAgentCommissionAmount:
          type: number
          format: float
        travelAgentCommissionType:
          type: string
          enum:
          - UseAgentCommission
          - UsePercentage
          - UseDailyDollarAmount
          - NoCommission
          - UseTotalDollarAmount
        tax:
          type: number
          format: float
        taxExemption:
          type: string
        totalRate:
          type: number
          format: float
        upgradeReason:
          type: string
        waterBalance:
          type: number
          format: float
        phoneBalance:
          type: number
          format: float
        internetBalance:
          type: number
          format: float
      example:
      - reservationId: 222878
        accountId: 380471
        accountCurrencyView: USD
        currencyCode: AUD
        secondDepositRequiredByDate: 2024-10-02 01:08:10
        secondDeposit: 0.0
        arBalance: 0.0
        accommodationBalance: -75.0
        baseRate: 309.0
        billCategoryType: ""
        createTotalRate: false
        depositRequiredByDate: 2024-09-25 01:08:10
        deposit: 116.93
        discountAmount: 0.0
        discountId: 0
        discountName: ""
        discountReason: ""
        electricityBalance: 0.0
        extrasBalance: 0.0
        gasBalance: 0.0
        hideRateOnCorrespondence: false
        package: 100.0
        travelAgentCommissionPercentage: 0.0
        travelAgentCommissionAmount: 0.0
        travelAgentCommissionType: UseAgentCommission
        tax: 58.71
        taxExemption: ""
        totalRate: 467.71
        upgradeReason: ""
        waterBalance: 0.0
        phoneBalance: 0.0
        internetBalance: 0.0
    reservationsRateOnGroup:
      type: object
      properties:
        rateOnGroup:
          type: boolean
      example:
        rateOnGroup: true
    reservationAddOn:
      type: object
      properties:
        id:
          type: integer
          format: int32
        addOnName:
          type: string
          description: "This field is informational, any changes made will not be honoured"
        addOnId:
          type: integer
          format: int32
        addOnTypeName:
          type: string
          description: "This field is informational, any changes made will not be honoured"
        addOnTypeId:
          type: integer
          format: int32
        amount:
          type: number
          format: currency
        appearOnHousekeepersReport:
          type: boolean
        chargesRequiredDaily:
          type: boolean
        fromDate:
          type: string
          format: date-time
        includeToDate:
          type: boolean
        sundryId:
          type: integer
          format: int32
        useAmountFromSundry:
          type: boolean
        toDate:
          type: string
          format: date-time
      example:
        id: 55
        addOn: PK1
        addOnId: 1
        addOnType: Car Park
        addOnTypeId: 3
        amount: 36.23
        aqppearOnHousekeepersReport: true
        chargesRequiredDaily: false
        fromDate: 2018-06-12 02:11:00
        includeToDate: false
        sundryId: 2
        useAmountFromSundry: true
        toDate: 2018-09-25 17:25:00
    reservationAuditTrail:
      type: object
      properties:
        amount:
          type: number
          format: currency
        date:
          type: string
          format: date-time
        fieldModified:
          type: string
        newValue:
          type: string
        oldValue:
          type: string
        reason:
          type: string
        username:
          type: string
        view:
          type: string
      example:
        amount: 986.0
        date: 2018-09-25 17:25:00
        fieldModified: Category
        newValue: Deluxe Queen
        oldValue: Single
        reason: Incorrect Entry
        username: Manager
        view: reservation
    reservationsBedConfigurationsSearch:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
      example:
        ids:
        - 228156
        - 228157
    reservationsBedConfigurationsResponse:
      type: array
      example:
      - reservationId: 228156
        bedConfigurations:
        - quantity: 2
          id: 6
          name: Foldaway
        - quantity: 1
          id: 3
          name: King
        - quantity: 1
          id: 5
          name: King Split
        - quantity: 2
          id: 4
          name: Queen
        - quantity: 1
          id: 1
          name: Single
        - quantity: 1
          id: 9
          name: Sofa Bed
      - reservationId: 228157
        bedConfigurations:
        - quantity: 1
          id: 6
          name: Foldaway
        - quantity: 1
          id: 3
          name: King
        - quantity: 1
          id: 5
          name: King Split
        - quantity: 1
          id: 4
          name: Queen
        - quantity: 1
          id: 1
          name: Single
        - quantity: 1
          id: 9
          name: Sofa Bed
      items:
        $ref: '#/components/schemas/reservationsBedConfigurationsResponse_inner'
    bedConfiguration:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        quantity:
          type: integer
          format: int32
      description: "Used:<br>GET /reservations/{id}/bedConfiguration"
      example:
        id: 1
        name: King
        quantity: 2
    reservationBillToArray:
      type: object
      properties:
        reservationId:
          type: integer
          format: int32
        billToInformation:
          allOf:
          - $ref: '#/components/schemas/reservationBillTo'
      example:
        reservationId: 163577
        billToInformation:
        - billToEntityId: 138452
          billToEntity: Guest
          accountType: Account1
          description: Accommodation
          invoiced: false
        - billToEntityId: 138452
          billToEntity: Guest
          accountType: Account1
          description: Extras
          invoiced: false
        - billToEntityId: 138452
          billToEntity: Guest
          accountType: Pabx
          description: Pabx
          invoiced: false
        - billToEntityId: 138452
          billToEntity: Guest
          accountType: Electricity
          description: Electricity
          invoiced: false
    reservationBillTo:
      type: object
      properties:
        billToEntityId:
          type: integer
          format: int32
        billToEntity:
          type: string
        accountType:
          type: string
        description:
          type: string
          description: system label
        invoiced:
          type: string
    correspondence:
      type: object
      properties:
        id:
          type: integer
          format: int32
        attachment:
          type: string
        code:
          type: string
        correspondenceType:
          type: string
        description:
          type: string
        guestId:
          type: integer
          format: int32
        readDate:
          type: string
          format: date-time
        reservationId:
          type: integer
          format: int32
        sentDate:
          type: string
          format: date-time
        userId:
          type: integer
          format: int32
        userName:
          type: string
      example:
        id: 2564
        attachment: consent form.pdf
        code: 15a
        correspondenceType: Email
        description: CC Registration
        guestId: 103
        readDate: 2018-09-25 17:25:00
        reservationId: 3503
        sentDate: 2018-09-25 17:25:00
        userId: 7
        userName: '*hp'
    existingToken:
      type: object
      properties:
        reservationId:
          type: integer
          format: int32
        existingToken:
          type: boolean
      example:
        reservationId: 198654
        existingToken: true
    guestMovementsSearch:
      type: object
      properties:
        guestIds:
          type: array
          items:
            type: integer
            format: int32
        reservationIds:
          type: array
          items:
            type: integer
            format: int32
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
      example:
        guestIds:
        - 194076
        reservationIds: []
        dateFrom: 2023-01-01
        dateTo: 2024-09-05
    guestMovementBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        guestId:
          type: integer
          format: int32
        primaryGuest:
          type: boolean
        arrive:
          type: string
          format: date-time
        depart:
          type: string
          format: date-time
        adults:
          type: integer
          format: int32
        children:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
        doNotSendCorrespondace:
          type: boolean
        roleId:
          type: integer
          format: int32
        role:
          type: string
        guestGiven:
          type: string
        guestSurname:
          type: string
      example:
      - id: 194076
        guestId: 58202
        primaryGuest: true
        arrive: 2023-05-27 14:00:00
        depart: 2023-05-30 10:30:00
        adults: 2
        children: 0
        reservationId: 214327
        doNotSendCorrespondence: false
        roleId: 1
        role: Capitain
        guestGiven: Eric
        guestSurname: Cartman
      - id: 194129
        guestId: 153307
        primaryGuest: false
        arrive: 2023-05-27 14:00:00
        depart: 2023-05-30 10:30:00
        adults: 2
        children: 0
        reservationId: 214327
        doNotSendCorrespondence: false
        roleId: 2
        role: Crew
        guestGiven: Lando
        guestSurname: Norris
    guestMovementFull:
      type: object
      properties:
        id:
          type: integer
          format: int32
        guestId:
          type: integer
          format: int32
        primaryGuest:
          type: boolean
        arrive:
          type: string
          format: date-time
        depart:
          type: string
          format: date-time
        adults:
          type: integer
          format: int32
        children:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
        doNotSendCorrespondence:
          type: boolean
        roleId:
          type: integer
          format: int32
        role:
          type: string
        guestGiven:
          type: string
        guestSurname:
          type: string
        categoryId:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
        propertyName:
          type: string
        rateTypeId:
          type: integer
          format: int32
        reservationStatus:
          type: string
        areaId:
          type: integer
          format: int32
        areaName:
          type: string
      example:
      - id: 194076
        guestId: 58202
        primaryGuest: true
        arrive: 2023-05-27 14:00:00
        depart: 2023-05-30 10:30:00
        adults: 2
        children: 0
        reservationId: 214327
        doNotSendCorrespondence: false
        roleId: 1
        role: Captain
        guestGiven: Eric
        guestSurname: Cartman
        categoryId: 6
        propertyId: 1
        propertyName: Test property 1
        rateTypeId: 1159
        reservationStatus: Departed
        areaId: 31
        areaName: 01 031
      - id: 194129
        guestId: 153307
        primaryGuest: false
        arrive: 2023-05-27 14:00:00
        depart: 2023-05-30 10:30:00
        adults: 2
        children: 0
        reservationId: 214327
        doNotSendCorrespondence: false
        roleId: 2
        role: Crew
        guestGiven: Lando
        guestSurname: Norris
        categoryId: 6
        propertyId: 1
        propertyName: Test property 1
        rateTypeId: 1159
        reservationStatus: Departed
        areaId: 31
        areaName: 01 031
    reservationHold:
      type: object
      properties:
        id:
          type: integer
          format: int32
        holdExpired:
          type: boolean
        dateFrom:
          type: string
          format: date
        rateId:
          type: integer
          format: int32
        dateTo:
          type: string
          format: date
      example:
        id: 5
        holdExpired: true
        dateFrom: 2020-10-23 00:00:00
        rateId: 1277
        dateTo: 2020-10-27 00:00:00
    reservationHoldArray:
      type: object
      properties:
        reservationId:
          type: integer
          format: int32
        holds:
          allOf:
          - $ref: '#/components/schemas/reservationHold'
      example:
        reservationId: 124356
        holds:
        - id: 5
          holdExpired: true
          dateFrom: 2020-10-23 00:00:00
          rateId: 1277
          dateTo: 2020-10-27 00:00:00
    reservationHousekeepingSearch:
      type: object
      properties:
        fromDate:
          type: string
          format: date
        reservationIds:
          type: array
          items:
            type: integer
            format: int32
        toDate:
          type: string
          format: date
      example:
        fromDate: 2023-04-20
        reservationIds:
        - 213691
        - 213296
        toDate: 2023-04-20
    reservationHousekeepingArray:
      type: object
      properties:
        departureClean:
          type: boolean
        housekeeperId:
          type: integer
          format: int32
        housekeeperName:
          type: string
        id:
          type: integer
          format: int32
        linenChange:
          type: boolean
        note:
          type: string
        taskDate:
          type: string
          format: date-time
        taskName:
          type: string
        taskMinutes:
          format: date-time
        reservationId:
          type: integer
          format: int32
      example:
        departureClean: false
        housekeeperId: 45
        housekeeperName: Hayden Paterson
        id: 7
        linenChange: true
        note: ""
        taskDate: 2023-04-20 00:00:00
        taskName: Linen Change
        taskMinutes: 30
        reservationId: 213691
    housekeeping:
      type: object
      properties:
        departureClean:
          type: boolean
        housekeeperId:
          type: integer
          format: int32
        housekeeperName:
          type: string
        id:
          type: integer
          format: int32
        linenChange:
          type: boolean
        note:
          type: string
        taskDate:
          type: string
          format: date-time
        taskName:
          type: string
        taskMinutes:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
      example:
        departureClean: true
        housekeeperId: 8
        housekeeperName: Jan
        id: 8
        linenChange: true
        note: dont tuck bed to tight
        taskDate: 2020-05-26 00:00:00
        taskName: Departure
        taskMinutes: 5
        reservationId: 213296
    resetHousekeepingRequest:
      type: object
      properties:
        reservationId:
          type: integer
          format: int32
        resetBedConfig:
          type: boolean
      description: "Used:<br>POST /reservations/{id}/housekeeping/resetSchedule"
      example:
        reservationId: 0
        resetBedConfig: true
    reservationsLinensSearch:
      type: array
      example:
        ids:
        - 228156
        - 228157
      items:
        $ref: '#/components/schemas/reservationsBedConfigurationsResponse_inner'
    reservationsLinensResponse:
      type: array
      example:
      - reservationId: 228156
        linens:
        - linenId: 5
          linen: Bath Mat
          quantity: 3
        - linenId: 4
          linen: Bath towel
          quantity: 6
        - linenId: 7
          linen: Face Washer
          quantity: 4
        - linenId: 8
          linen: Hand Towel
          quantity: 2
        - linenId: 6
          linen: King Sheet
          quantity: 1
        - linenId: 9
          linen: KING SINGLE SHEET
          quantity: 1
        - linenId: 3
          linen: Pillow Slip
          quantity: 1
        - linenId: 10
          linen: Pool towel
          quantity: 2
        - linenId: 2
          linen: Single Sheet
          quantity: 2
      - reservationId: 228157
        linens:
        - linenId: 5
          linen: Bath Mat
          quantity: 2
        - linenId: 4
          linen: Bath towel
          quantity: 4
        - linenId: 7
          linen: Face Washer
          quantity: 3
        - linenId: 8
          linen: Hand Towel
          quantity: 2
        - linenId: 6
          linen: King Sheet
          quantity: 1
        - linenId: 9
          linen: KING SINGLE SHEET
          quantity: 1
        - linenId: 3
          linen: Pillow Slip
          quantity: 1
        - linenId: 10
          linen: Pool towel
          quantity: 2
        - linenId: 2
          linen: Single Sheet
          quantity: 1
      items:
        $ref: '#/components/schemas/reservationsLinensResponse_inner'
    resLinen:
      type: object
      properties:
        linenId:
          type: integer
          format: int32
        linen:
          type: string
        quantity:
          type: integer
          format: int32
      example:
        linenId: 4
        linen: Bath towel
        quantity: 1
    projectedAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
        tax:
          type: number
          format: currency
        total:
          type: number
          format: currency
        totalTaxExcludingGST:
          type: number
          format: currency
      example:
        id: 72
        tax: null
        total: null
        totalTaxExcludingGST: null
    projectedBalance:
      type: object
      properties:
        projectedBalance:
          type: integer
          format: int32
      example:
        projectedBalance: -133.7
    dailyRate:
      type: object
      properties:
        reservationId:
          type: integer
          format: int32
        additionalsAmount:
          type: number
          format: currency
        currency:
          type: string
        discountAmount:
          type: number
          format: currency
        dynamicAmount:
          type: number
          format: currency
        exclusiveTax:
          type: number
          format: currency
        linkedRateAdjustmentAmount:
          type: number
          format: currency
        marketSegmentId:
          type: integer
          format: int32
        packageAmount:
          type: number
          format: currency
        packageAmountIncludedInRateAmount:
          type: number
          format: currency
        rateAmount:
          type: number
          format: currency
        rateId:
          type: integer
          format: int32
        ratePeriod:
          type: integer
          format: int32
        rateTable:
          type: integer
          format: int32
        rateTypeId:
          type: integer
          format: int32
        stayDate:
          type: string
          format: date-time
        totalRateAmount:
          type: number
          format: currency
        xNightsDiscount:
          type: number
          format: currency
      example:
        reservationId: 3678
        additionalsAmount: 0.0
        currency: AUD
        discountAmount: 29.25
        dynamicAmount: 0.0
        exclusiveTax: 0.0
        linkedRateAdjustmentAmount: 0.0
        marketSegmentId: 1
        packageAmount: 0.0
        rateAmount: 292.5
        rateId: 12
        ratePeriod: 7
        rateTable: 15
        rateTypeId: 15
        stayDate: 28-04-2019 12:00:00
        totalRateAmount: 800.25
        xNightsDiscount: 0.0
        packageAmountIncludedInRateAmount: 20.0
    reservationsRateQuotes:
      required:
      - reservationIds
      type: object
      properties:
        reservationIds:
          type: array
          description: List of reservation IDs to retrieve details for.
          items:
            type: integer
        includeTaxBreakdown:
          type: boolean
          description: Whether to include a breakdown of taxes in the response.
        includeAdditionalsBreakdown:
          type: boolean
          description: Whether to include a breakdown of additional charges in the response.
      example:
        reservationIds:
        - 222898
        - 226542
        includeTaxBreakdown: true
        includeAdditionalsBreakdown: true
    reservationsRateQuotesResponse:
      type: object
      properties:
        baseRate:
          type: number
        baseRateDiscountAmount:
          type: number
        baseRateRentalReductionAmount:
          type: number
        baseRateTax:
          type: number
        categoryId:
          type: integer
        deposit1Amount:
          type: number
        deposit1RequiredBy:
          type: string
          format: date-time
        deposit2Amount:
          type: number
        deposit2RequiredBy:
          type: string
          format: date-time
        discountAmount:
          type: number
        firstNightRate:
          type: number
        package:
          type: number
        packageTax:
          type: number
        rateBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/reservationsRateQuotesResponse_rateBreakdown'
        secondDiscountAmount:
          type: number
        useResDiscountNightly:
          type: boolean
        cancellationPolicyId:
          type: integer
        reservationId:
          type: integer
      example:
      - baseRate: 620.0
        baseRateDiscountAmount: 0.0
        baseRateRentalReductionAmount: 0.0
        baseRateTax: 155.0
        categoryId: 52
        deposit1Amount: 712.0
        deposit1RequiredBy: 2024-09-26 03:51:51
        deposit2Amount: 100.0
        deposit2RequiredBy: 2024-09-26 03:51:51
        discountAmount: 0.0
        firstNightRate: 356.0
        package: 92.0
        packageTax: 0.0
        rateBreakdown:
        - theDate: 2028-10-01 00:00:00
          baseRateAmount: 310.0
          baseRateRaw: 300.0
          rateType: BAR USD
          rateTypeId: 1433
          currencyCode: AUD
          currencySymbol: $
          packageAmount: 46.0
          packageHiddenAmount: 46.0
          packageShownAmount: 0.0
          displayBaseRate: 300.0
          displayTotalPackage: 46.0
          displayTotalRate: 356.0
          displayTotalTax: 77.5
          packageBreakdown:
          - amount: 40.0
            baseIncludesPackageAmount: false
            glCodeId: 24
            packageFeeType: 0
            packageId: 19400
            perAdultFee: 0.0
            perChildFee: 0.0
            perExtra4Fee: 0.0
            perExtra5Fee: 0.0
            perExtra6Fee: 0.0
            perExtra7Fee: 0.0
            perExtra8Fee: 0.0
            perInfantFee: 0.0
            quantity: 2
            sundryId: 42
            sundryName: B1 B/Fast food
            totalTax: 0.0
            theDate: 2028-10-01 00:00:00
          - amount: 6.0
            baseIncludesPackageAmount: false
            glCodeId: 68
            packageFeeType: 0
            packageId: 19401
            perAdultFee: 0.0
            perChildFee: 0.0
            perExtra4Fee: 0.0
            perExtra5Fee: 0.0
            perExtra6Fee: 0.0
            perExtra7Fee: 0.0
            perExtra8Fee: 0.0
            perInfantFee: 0.0
            quantity: 2
            sundryId: 21
            sundryName: Restaurant Beverages
            totalTax: 0.0
            theDate: 2028-10-01 00:00:00
          totalExtras: 10.0
          totalPackage: 46.0
          totalPackageIncludedInBase: 0.0
          totalPackageNotIncludedInBase: 46.0
          totalRate: 356.0
          taxBreakdown:
          - amount: 31.0
            description: 10% State Tax
          - amount: 31.0
            description: Service Charge 10
          - amount: 15.5
            description: VAT
          additionalsBreakdown:
          - additionalType: Adult
            amount: 10.0
          - additionalType: Child
            amount: 0.0
        - theDate: 2028-10-02 00:00:00
          baseRateAmount: 310.0
          baseRateRaw: 300.0
          rateType: BAR USD
          rateTypeId: 1433
          currencyCode: AUD
          currencySymbol: $
          packageAmount: 46.0
          packageHiddenAmount: 46.0
          packageShownAmount: 0.0
          displayBaseRate: 300.0
          displayTotalPackage: 46.0
          displayTotalRate: 356.0
          displayTotalTax: 77.5
          packageBreakdown:
          - amount: 40.0
            baseIncludesPackageAmount: false
            glCodeId: 24
            packageFeeType: 0
            packageId: 19400
            perAdultFee: 0.0
            perChildFee: 0.0
            perExtra4Fee: 0.0
            perExtra5Fee: 0.0
            perExtra6Fee: 0.0
            perExtra7Fee: 0.0
            perExtra8Fee: 0.0
            perInfantFee: 0.0
            quantity: 2
            sundryId: 42
            sundryName: B1 B/Fast food
            totalTax: 0.0
            theDate: 2028-10-02 00:00:00
          - amount: 6.0
            baseIncludesPackageAmount: false
            glCodeId: 68
            packageFeeType: 0
            packageId: 19401
            perAdultFee: 0.0
            perChildFee: 0.0
            perExtra4Fee: 0.0
            perExtra5Fee: 0.0
            perExtra6Fee: 0.0
            perExtra7Fee: 0.0
            perExtra8Fee: 0.0
            perInfantFee: 0.0
            quantity: 2
            sundryId: 21
            sundryName: Restaurant Beverages
            totalTax: 0.0
            theDate: 2028-10-02 00:00:00
          totalExtras: 10.0
          totalPackage: 46.0
          totalPackageIncludedInBase: 0.0
          totalPackageNotIncludedInBase: 46.0
          totalRate: 356.0
          taxBreakdown:
          - amount: 31.0
            description: 10% State Tax
          - amount: 31.0
            description: Service Charge 10
          - amount: 15.5
            description: VAT
          additionalsBreakdown:
          - additionalType: Adult
            amount: 10.0
          - additionalType: Child
            amount: 0.0
        secondDiscountAmount: 0.0
        useResDiscountNightly: false
        cancellationPolicyId: 3
        reservationId: 222898
      - baseRate: 400.0
        baseRateDiscountAmount: 0.0
        baseRateRentalReductionAmount: 0.0
        baseRateTax: 40.0
        categoryId: 7
        deposit1Amount: 0.0
        deposit1RequiredBy: 2025-03-12 12:47:00
        deposit2Amount: 0.0
        deposit2RequiredBy: 2025-03-13 06:47:21
        discountAmount: 0.0
        firstNightRate: 550.0
        package: 100.0
        packageTax: 10.0
        rateBreakdown:
        - theDate: 2025-03-18 00:00:00
          baseRateAmount: 400.0
          baseRateRaw: 500.0
          rateType: BAR AUD Exclusive Tax
          rateTypeId: 1447
          currencyCode: AUD
          currencySymbol: $
          packageAmount: 100.0
          packageHiddenAmount: 100.0
          packageShownAmount: 0.0
          displayBaseRate: 400.0
          displayTotalPackage: 100.0
          displayTotalRate: 550.0
          displayTotalTax: 50.0
          packageBreakdown:
          - amount: 100.0
            baseIncludesPackageAmount: true
            glCodeId: 176
            packageFeeType: 0
            packageId: 43673
            perAdultFee: 0.0
            perChildFee: 0.0
            perExtra4Fee: 0.0
            perExtra5Fee: 0.0
            perExtra6Fee: 0.0
            perExtra7Fee: 0.0
            perExtra8Fee: 0.0
            perInfantFee: 0.0
            quantity: 1
            sundryId: 318
            sundryName: Food
            totalTax: 10.0
            theDate: 2025-03-18 00:00:00
          totalExtras: 0.0
          totalPackage: 100.0
          totalPackageIncludedInBase: 100.0
          totalPackageNotIncludedInBase: 0.0
          totalRate: 500.0
          taxBreakdown:
          - amount: 40.0
            description: 10% State Tax
          additionalsBreakdown:
          - additionalType: Adult
            amount: 0.0
          - additionalType: Child
            amount: 0.0
          - additionalType: Infant
            amount: 0.0
        secondDiscountAmount: 0.0
        useResDiscountNightly: false
        cancellationPolicyId: 0
        reservationId: 226542
    dailyRevenue:
      type: object
      properties:
        accommodation:
          type: number
          description: This value is tax inclusive for tax inclusive properties
          format: currency
        accommodationGst:
          type: number
          format: currency
        accommodationTax:
          type: number
          format: currency
        foodAndBeverage:
          type: number
          description: This value is tax inclusive for tax inclusive properties
          format: currency
        foodAndBeverageGst:
          type: number
          format: currency
        foodAndBeverageTax:
          type: number
          format: currency
        other:
          type: number
          description: This value is tax inclusive for tax inclusive properties
          format: currency
        otherGst:
          type: number
          format: currency
        otherTax:
          type: number
          format: currency
        theDate:
          type: string
          format: date-time
      example:
        accommodation: 20.0
        accommodationGst: 2.0
        accommodationTax: 0.0
        foodAndBeverage: 10.0
        foodAndBeverageGst: 1.0
        foodAndBeverageTax: 0.0
        other: 15.0
        otherGst: 1.5
        otherTax: 0.0
        theDate: 2019-09-12
    dailyRevenueArray:
      type: object
      properties:
        reservationId:
          type: integer
          format: int32
        dailyRevenue:
          allOf:
          - $ref: '#/components/schemas/dailyRevenue'
      example:
        reservationId: 163577
        dailyRevenue:
        - theDate: 2020-12-10 00:00:00
          accommodation: 360
          accommodationTax: 0
          accommodationGST: 32.72
          foodAndBeverage: 0
          foodAndBeverageTax: 0
          foodAndBeverageGST: 0
          other: 50
          otherTax: 0
          otherGST: 4.55
        - theDate: 2020-12-11 00:00:00
          accommodation: 0
          accommodationTax: 0
          accommodationGST: 0
          foodAndBeverage: 0
          foodAndBeverageTax: 0
          foodAndBeverageGST: 0
          other: 0
          otherTax: 0
          otherGST: 0
    transfer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        amount:
          type: integer
          format: currency
        carrier:
          type: string
        confirmationNumber:
          type: string
        dropOffLocationId:
          type: integer
          format: int32
        note:
          type: string
        pax:
          type: integer
          format: int32
        pickupLocationId:
          type: integer
          format: int32
        shipFlightNumber:
          type: string
        sundryId:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
        theDate:
          type: string
          format: date-time
        transportTypeId:
          type: integer
          format: int32
        type:
          type: string
          enum:
          - pickUp
          - dropOff
        useAmountFromSundry:
          type: boolean
      example:
        id: 2654698
        amount: 10.0
        carrier: Big Rigs
        confirmationNumber: ty45986
        dropOffLocationId: 1
        note: This is for notes
        pax: 10
        pickupLocationId: 1
        shipFlightNumber: JQ1234
        sundryId: 6
        reservationId: 1
        theDate: 2020-09-25 17:25:00
        transportTypeId: 1
        type: dropOff
        useAmountFromSundry: false
    transferBalance:
      type: object
      properties:
        reservationAccountId:
          type: integer
          format: int32
        transferType:
          type: string
          enum:
          - toGuestAccount
      example:
        reservationAccountId: 355494
        transferType: toGuestAccount
    actualAccountBasic:
      type: object
      properties:
        accommodationBalance:
          type: number
          format: currency
        accountCurrencyView:
          type: string
        accountId:
          type: integer
          format: int32
        activeAccounts:
          type: integer
          format: int32
        arBalance:
          type: number
          format: currency
        baseRate:
          type: number
          format: currency
        billCategoryType:
          type: string
        createTotalRate:
          type: boolean
        currencyCode:
          type: string
        deposit:
          type: number
          format: currency
        depositRequiredByDate:
          type: string
          format: date-time
        discountAmount:
          type: number
          format: currency
        discountId:
          type: integer
          format: int32
        discountName:
          type: string
        discountReason:
          type: string
        electricityBalance:
          type: number
          format: currency
        extrasBalance:
          type: number
          format: currency
        gasBalance:
          type: number
          format: currency
        hideRateOnCorrespondence:
          type: boolean
        internetBalance:
          type: number
          format: currency
        package:
          type: number
          format: currency
        phoneBalance:
          type: number
          format: currency
        reservationId:
          type: integer
          format: int32
        secondaryCurrency:
          $ref: '#/components/schemas/actualAccountBasic_secondaryCurrency'
        secondDepositRequiredByDate:
          type: string
          format: date-time
        secondDeposit:
          type: number
          format: currency
        tax:
          type: number
          format: currency
        taxExemption:
          type: string
        totalRate:
          type: number
          format: currency
        upgradeReason:
          type: string
        waterBalance:
          type: number
          format: currency
      description: "Used:<br>GET /reservations/{id}/actualAccount<br>POST /reservations/{id}/transferBalance<br>POST /reservations/actualAccount/search"
      example:
        accommodationBalance: 26.09
        accountCurrencyView: AUD
        accountId: 3168
        activeAccounts: 1
        arBalance: 300.12
        baseRate: 551.67
        billCategoryType: Deluxe Queen
        createTotalRate: true
        currencyCode: AUD
        deposit: 200.0
        depositRequiredByDate: 2017-08-25 17:30:00
        discountAmount: 20.0
        discountId: 7
        discountName: 10% Off
        discountReason: Return customer
        electricityBalance: 32.58
        extrasBalance: 89.36
        gasBalance: 45.36
        hideRateOnCorrespondence: false
        internetBalance: 10.0
        package: 98.32
        phoneBalance: 12.0
        reservationId: 123459
        secondaryCurrency:
          accommodationBalance: 10.0
          arBalance: 0.0
          currencyCode: USD
          electricityBalance: 10.0
          extrasBalance: 15.25
          gasBalance: 13.25
          internetBalance: 55.0
          phoneBalance: 89.56
          waterBalance: 17.26
        secondDepositRequiredByDate: 25-08-2016 13:26:00
        secondDeposit: 100.1
        tax: 16.33
        taxExemption: Goverment Official
        totalRate: 800.0
        upgradeReason: He's a good guy
        waterBalance: 81.02
    mealPlanSchedulesUpgrade:
      type: object
      properties:
        dates:
          type: array
          items:
            $ref: '#/components/schemas/mealPlanSearchResponseDates'
    resType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        inactive:
          type: boolean
      example:
        id: 4
        name: Business
        inactive: false
    resTypeSub:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        inactive:
          type: boolean
      example:
        id: 2
        name: Local
        inactive: false
    reservationsWarnings:
      type: object
      properties:
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/reservationsWarnings_warnings'
      example:
        warnings:
        - code: GuestStayOverlap
    restrictionsPost:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        rateId:
          type: integer
          format: int32
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        restrictionType:
          type: string
          enum:
          - clearCloseToArrival
          - clearCloseToDeparture
          - clearMinNightsOnArrival
          - clearMinNightsStayThroughRes
          - clearStopSell
          - closeToArrival
          - closeToDeparture
          - minNightsStayOnArrival
          - minNightsStayThroughRes
          - stopSell
        minStay:
          type: integer
          format: int32
      example:
      - categoryId: 1
        rateId: 1159
        dateFrom: 2023-10-01
        dateTo: 2023-10-02
        restrictionType: minNightsStayOnArrival
        minStay: 4
      - categoryId: 1
        rateId: 1159
        dateFrom: 2023-10-30
        dateTo: 2023-10-31
        restrictionType: stopSell
    restrictionSearch:
      type: object
      properties:
        agentIds:
          type: array
          items:
            type: integer
            format: int32
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        fromDate:
          type: string
          format: date-time
        inactive:
          type: boolean
        rateIds:
          type: array
          items:
            type: integer
            format: int32
        toDate:
          type: string
          format: date-time
        restrictionTypes:
          type: array
          description: Valid Reservation Status
          items:
            type: string
            enum:
            - addtionalAdults
            - addtionalChildren
            - allotment
            - bar
            - clearCloseRate
            - clearCloseToArrival
            - clearCloseToDeparture
            - clearLastRoomValue
            - clearMinNightsOnArrival
            - clearMinNightsStayThruRes
            - clearStopSell
            - clearRateOveride
            - closeRate
            - closeToArrival
            - closeToDeparture
            - hotSale
            - lastRoomValue
            - lastRoomValueCeiling
            - lastRoomValueDelta
            - lastRoomValueMaxSold
            - lastRoomValueYieldAdjustment
            - maxPropertyOversell
            - minNightsStayOnArrival
            - minNightsStayThruRes
            - oldRecords
            - oversellAllotment
            - stopSell
            - RateAdjustment
            - RateOverride
      example:
        agentIds:
        - 4
        - 5
        categoryIds:
        - 5
        - 4
        fromDate: 2020-11-01 00:00:00
        inactive: false
        rateIds:
        - 134
        - 1546
        toDate: 2020-11-28 00:00:00
        restrictionTypes:
        - stopSell
        - RateAdjustment
    restriction:
      type: object
      properties:
        id:
          type: integer
          format: int32
        availableFor:
          type: array
          items:
            type: string
        categoryid:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        createdById:
          type: integer
          format: int32
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        minimumOccupancyLevelInPercentage:
          type: integer
          format: int32
        rateId:
          type: integer
          format: int32
        setPermanently:
          type: boolean
      example:
        id: 16
        availableFor:
        - Monday
        - Tuesday
        categoryid: 3
        createdDate: 2020-09-25 00:00:00
        createdById: 4
        dateFrom: 2020-09-25 00:00:00
        dateTo: 2020-09-28 00:00:00
        minimumOccupancyLevelInPercentage: 0
        rateId: 1377
        setPermanently: false
    requirementMasterCreation:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        adultAmount:
          type: number
          format: decimal
        amount:
          type: number
          format: decimal
        chargeDailyIncludeToDate:
          type: boolean
        chargeRequiredDaily:
          type: boolean
        childAmount:
          type: number
          format: decimal
        code:
          type: string
        feeType:
          type: string
          default: PerPeriod
          enum:
          - PerPeriod
          - PerPerson
        guestFacingRequirement:
          type: boolean
        groupingId:
          type: integer
          format: int32
        inactive:
          type: boolean
        infantAmount:
          type: number
          format: decimal
        monitorRequirement:
          type: boolean
        note:
          type: string
        perAdult:
          type: number
          format: decimal
        perChild:
          type: number
          format: decimal
        perInfant:
          type: number
          format: decimal
        secondPerAdult:
          type: number
          format: decimal
        secondPerChild:
          type: number
          format: decimal
        secondPerInfant:
          type: number
          format: decimal
        quantity:
          type: integer
          format: int32
        requiredDaily:
          type: boolean
        sameDayRequirement:
          type: boolean
        showInHousekeepersReport:
          type: boolean
        sundryId:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: decimal
        useSundryAmount:
          type: boolean
      example:
        id: 35212
        name: 11am Check-out
        chargeDailyIncludeToDate: false
        chargeRequiredDaily: false
        code: ""
        description: ""
        feeType: PerPeriod
        groupingId": 0
        guestFacingRequirement: false
        inactive: false
        monitorRequirement: false
        note: ""
        quantity: 1
        requiredDaily: false
        showInHousekeepersReport: false
        sameDayRequirement: false
        sundryId: 0
        unitPrice: 0
        useSundryAmount: false
        perAdult: 0
        perChild: 0
        perInfant: 0
        secondPerAdult: 16.0
        secondPerChild: 12.0
        secondPerInfant: 5.0
        secondUnitPrice: 0.0
    requirement:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        adultAmount:
          type: number
          format: decimal
        amount:
          type: number
          format: decimal
        chargeDailyIncludeToDate:
          type: boolean
        chargeRequiredDaily:
          type: boolean
        childAmount:
          type: number
          format: decimal
        code:
          type: string
        feeType:
          type: string
        groupingId:
          type: integer
          format: int32
        inactive:
          type: boolean
        infantAmount:
          type: number
          format: decimal
        monitorRequirement:
          type: boolean
        note:
          type: string
        quantity:
          type: integer
          format: int32
        requiredDaily:
          type: boolean
        showInHousekeepersReport:
          type: boolean
        sundryId:
          type: integer
          format: int32
        secondUnitPrice:
          type: number
          format: decimal
        secondAdultAmount:
          type: number
          format: decimal
        secondChildAmount:
          type: number
          format: decimal
        secondInfantAmount:
          type: number
          format: decimal
        unitPrice:
          type: number
          format: decimal
        useSundryAmount:
          type: boolean
      example:
        id: 7
        name: Chapagne & Chochlates
        amount: 30.0
        chargeDailyIncludeToDate: false
        ChargeRequiredDaily: false
        Code: A129e
        groupingId: 2
        inactive: false
        monitorRequirement: false
        note: Make sure you check inventory for stock
        quantity: 2
        requiredDaily: false
        showInHouseKeepersReport: true
        sundryId: 8
        secondUnitPrice: 30.0
        secondAdultAmount: 0.0
        secondChildAmount: 0.0
        secondInfantAmount: 0.0
        unitPrice: 15.0
        useSundryAmount: true
    requirementImage:
      type: object
      properties:
        'url:':
          type: string
      example:
        url: https://images.rmscloud.com/rmsoimages/6880/rmswin/rmsonlineimages/00000090.jpg
    requirementValidationDates:
      type: object
      properties:
        arrivingOnMonday:
          type: boolean
        arrivingOnTuesday:
          type: boolean
        arrivingOnWednesday:
          type: boolean
        arrivingOnThursday:
          type: boolean
        arrivingOnFriday:
          type: boolean
        arrivingOnSaturday:
          type: boolean
        arrivingOnSunday:
          type: boolean
        reservationMadeFromDate:
          type: string
          format: date-time
        reservationMadeToDate:
          type: string
          format: date-time
        reservationMadePermanentFlag:
          type: boolean
          description: If this is set to true then the default date value will be returned for reservationMadeFromDate and reservationMadeToDate
        reservationStayingFromDate:
          type: string
          format: date-time
        reservationStayingToDate:
          type: string
          format: date-time
        reservationStayingPermanentlyFlag:
          type: boolean
          description: If this is set to true then the default date value will be returned for reservationsStayingFromDate and reservationsStayingToDate
      example:
        arrivingOnMonday: true
        arrivingOnTuesday: true
        arrivingOnWednesday: true
        arrivingOnThursday: false
        arrivingOnFriday: false
        arrivingOnSaturday: false
        arrivingOnSunday: false
        reservationMadeFromDate: 2020-02-16 00:00:00
        reservationMadeToDate: 2020-03-19 00:00:00
        reservationsMadePermanentFlag: false
        reservationsStayingFromDate: 1900-00-00 00:00:00
        reservationsStayingToDate: 1900-00-00 00:00:00
        reservationsStayingPermanentFlag: true
    securityProfile:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: Manager
    specialEventsSearch:
      type: object
      properties:
        propertyIds:
          type: array
          items:
            type: integer
        fromDate:
          type: string
          format: date
        toDate:
          type: string
          format: date
        displayWarningForReservations:
          type: boolean
      example:
        propertyIds:
        - 1
        - 3
        - 0
        fromDate: 2024-01-01
        toDate: 2026-01-01
        displayWarningForReservations: true
    specialEventsSearchResponse:
      type: array
      example:
      - id: 272
        description: This Is A Special Event
        fromDate: 2024-09-04 00:00:05
        toDate: 2024-09-30 23:59:59
        propertyId: 0
        note: This Is A Note About My Special Event
        displayWarningForReservations: true
      - id: 273
        description: New Event 2025
        fromDate: 2025-09-18 00:00:05
        toDate: 2025-09-23 23:59:59
        propertyId: 1
        note: ""
        displayWarningForReservations: true
      items:
        $ref: '#/components/schemas/specialEventsSearchResponse_inner'
    sundry:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        costPrice:
          type: number
          format: currency
        glCodeId:
          type: integer
          format: int32
        groupingId:
          type: integer
          format: int32
        gstDivisorOverride:
          type: number
          format: decimal
        inactive:
          type: boolean
        secondCurrency:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: currency
        unassigned:
          type: boolean
        thirdPartyClientId:
          type: integer
          format: int32
        gstType:
          type: string
          default: Full
          enum:
          - NotSet
          - Rent
          - Free
          - Full
          - Override
        creditNote:
          type: boolean
        addOn:
          type: boolean
        posLite:
          type: boolean
        refundable:
          type: boolean
        expenseCharge:
          type: boolean
        transfers:
          type: boolean
        meal:
          type: boolean
        externalRefId:
          type: string
      example:
        id: 3
        name: Coke Can
        costPrice: 1.0
        gLCodeId: 0
        groupingId: 1
        gstDivisorOverride: 5.25
        inactive: false
        secondCurrency: 0
        unitPrice: 2.5
        unassigned: false
        thirdPartyClientId: 151
        gstType: Full
        creditNote: true
        addOn: true
        posLite: false
        refundable: false
        expenseCharge: false
        transfers: false
        meal: true
        externalRefId: "123456789"
    sundryCreation:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        costPrice:
          type: number
          format: currency
        glCodeId:
          type: integer
          format: int32
        groupingId:
          type: integer
          format: int32
        gstDivisorOverride:
          type: number
          format: decimal
        inactive:
          type: boolean
        secondCurrency:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: currency
        unassigned:
          type: boolean
        thirdPartyClientId:
          type: integer
          format: int32
        gstType:
          type: string
          default: Full
          enum:
          - NotSet
          - Rent
          - Free
          - Full
          - Override
        creditNote:
          type: boolean
      example:
        id: 3
        name: Coke Can
        costPrice: 1.0
        gLCodeId: 0
        groupingId: 1
        gstDivisorOverride: 5.25
        inactive: false
        secondCurrency: 0
        unitPrice: 2.5
        unassigned: false
        thirdPartyClientId: 151
        gstType: Full
        creditNote: true
    title:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: Mr
    traces:
      type: object
      properties:
        id:
          type: integer
          format: int32
        tracesTemplateId:
          type: integer
          format: int32
        description:
          type: string
        longDescription:
          type: string
        entityType:
          type: string
          enum:
          - guest
          - company
          - groups
          - reservation
          - toDo
          - travelAgent
        entityId:
          type: integer
          format: int32
        departmentID:
          type: integer
          format: int32
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        dateType:
          type: string
          enum:
          - duedate
          - dateRange
        completed:
          type: boolean
        completeId:
          type: integer
          format: int32
        createdID:
          type: integer
          format: int32
        dueDate:
          type: string
          format: date-time
        modifiedId:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        userId:
          type: integer
          format: int32
        repeatFrequency:
          type: string
          enum:
          - day
          - week
          - month
        repeatEvery:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/daysOfWeek'
            - $ref: '#/components/schemas/daysOfMonth'
      example:
        id: 3
        tracesTemplateId: 3
        description: An almost identical trace
        longDescription: For reasons. That are long
        entityType: Reservation
        entityId: 214653
        departmentId: 1
        fromDate: 2023-03-24 00:00:00
        toDate: 2023-03-24 00:00:00
        dateType: DateRange
        completed: false
        completedId: 0
        createdId: 189
        dueDate: 2023-03-24 00:00:00
        modifiedId: 189
        modifiedDate: 2023-03-25 08:45:20
        userId: 0
        repeatFrequency: Week
        repeatEvery:
          daysOfWeek:
          - monday
          - wednesday
    daysOfWeek:
      type: object
      properties:
        daysOfWeek:
          type: array
          items:
            type: string
            enum:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
    daysOfMonth:
      type: object
      properties:
        daysOfMonth:
          type: array
          items:
            type: integer
            format: int32
    tracesRequest:
      type: object
      properties:
        tracesTemplateId:
          type: integer
          format: int32
        description:
          type: string
        longDescription:
          type: string
        entityType:
          type: string
          enum:
          - guest
          - company
          - groups
          - reservation
          - toDo
          - travelAgent
        entityId:
          type: integer
          format: int32
        departmentID:
          type: integer
          format: int32
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        dateType:
          type: string
          enum:
          - duedate
          - dateRange
        completed:
          type: boolean
        completeId:
          type: integer
          format: int32
        createdID:
          type: integer
          format: int32
        dueDate:
          type: string
          format: date-time
        modifiedId:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        userId:
          type: integer
          format: int32
        repeatFrequency:
          type: string
          enum:
          - day
          - week
          - month
        repeatEvery:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/daysOfWeek'
            - $ref: '#/components/schemas/daysOfMonth'
      example:
        tracesTemplateId: 3
        description: An almost identical trace
        longDescription: For reasons. That are long
        entityType: Reservation
        entityId: 214653
        departmentId: 1
        fromDate: 2023-03-24 00:00:00
        toDate: 2023-03-24 00:00:00
        dateType: DateRange
        completed: false
        completedId: 0
        createdId: 189
        dueDate: 2023-03-24 00:00:00
        modifiedId: 189
        modifiedDate: 2023-03-25 08:45:20
        userId: 0
        repeatFrequency: Week
        repeatEvery:
          daysOfWeek:
          - monday
          - wednesday
    departments:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: accommodation
    tracesTemplates:
      type: object
      properties:
        id:
          type: integer
          format: int32
        tracesType:
          type: string
          enum:
          - guest
          - company
          - groups
          - reservation
          - toDo
          - travelAgent
        description:
          type: string
        inactive:
          type: boolean
        departmentIds:
          type: array
          items:
            type: integer
            format: int32
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        id: 1
        tracesType: company
        description: Company Trace
        inactive: false
        departmentIds:
        - 1
        propertyIds:
        - 3
    tracesTemplatesRequest:
      type: object
      properties:
        tracesType:
          type: string
          enum:
          - guest
          - company
          - groups
          - reservation
          - toDo
          - travelAgent
        description:
          type: string
        inactive:
          type: boolean
        departmentIds:
          type: array
          items:
            type: integer
            format: int32
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        tracesType: company
        description: Company Trace
        inactive: false
        departmentIds:
        - 1
        propertyIds:
        - 3
    transactionSearch:
      type: object
      properties:
        idFrom:
          type: integer
          format: int32
        idTo:
          type: integer
          format: int32
        accountType:
          $ref: '#/components/schemas/accountTypeEnum'
        accountIds:
          type: array
          items:
            type: integer
            format: int32
        alwaysReturnReservationId:
          type: boolean
        createdFrom:
          type: string
          format: date-time
        createdTo:
          type: string
          format: date-time
        guestIds:
          type: array
          items:
            type: integer
            format: int32
        invoiceIds:
          type: array
          items:
            type: integer
            format: int32
        modifiedFrom:
          type: string
          format: date-time
        modifiedTo:
          type: string
          format: date-time
        propertyId:
          type: integer
          format: int32
        receiptIds:
          type: array
          items:
            type: integer
            format: int32
        reservationIds:
          type: array
          items:
            type: integer
            format: int32
        transactionIds:
          type: array
          items:
            type: integer
            format: int32
        transDateFrom:
          type: string
          format: date-time
        transDateTo:
          type: string
          format: date-time
        transactionType:
          type: string
          enum:
          - charge
          - reciept
          - voucher
          - refund
          - creditNote
        voidTransaction:
          type: boolean
      example:
        idFrom: 6
        idTo: 12
        accountType: extras
        accountIds:
        - 1242
        - 5985
        - 702
        alwaysReturnReservationId: true
        createdFrom: 2018-09-25 00:00:00
        createdTo: 2018-09-27 00:00:00
        guestIds:
        - 78945
        - 61478
        invoiceIds:
        - 89984
        - 987978
        modifiedFrom: 2018-09-25 00:00:00
        modifiedTo: 2018-09-27 00:00:00
        propertyId: 1
        receiptIds:
        - 222586
        - 222587
        reservationIds:
        - 9454
        - 123
        - 1425
        transactionIds:
        - 1886832
        - 1886833
        - 1886834
        transDateFrom: 2018-10-25 00:00:00
        TransDateTo: 2018-10-27 00:00:00
        transactionType: charge
        voidTransaction: true
    accountTypeEnum:
      type: string
      nullable: true
      enum:
      - accomm
      - extras
      - pabx
      - gas
      - electric
      - water
      - cash
      - internet
      - client
      - agent
      - owner
      - ar
      - notional
      - holding
      - null
    transactionFull:
      type: object
      properties:
        id:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        accountingDate:
          type: string
          description: The accounting day that is set in RMS.
          format: date-time
        accountType:
          type: string
        amount:
          type: number
          format: currency
        comment:
          type: string
        createdDate:
          type: string
          format: date-time
        creditCardMasked:
          type: string
        creditCardType:
          type: string
        currencyCode:
          type: string
        dateOfTransaction:
          type: string
          format: date-time
        dollarAction:
          type: number
          format: currency
        exchangeRate:
          type: number
          format: decimal
        description:
          type: string
        fullGst:
          type: number
          format: currency
        glCodeDescription:
          type: string
        glCodeGrouping:
          type: string
        glCodeId:
          type: integer
          format: int32
        invoiceId:
          type: integer
          format: int32
        isHiddenPackage:
          type: boolean
        linkPointer:
          type: integer
          format: int32
        linkPointerType:
          type: string
        modifiedDate:
          type: string
          format: date-time
        originalReceiptId:
          type: integer
          description: The original receipt ID for a refund.
          format: int32
        originPropertyId:
          type: integer
          format: int32
        propertyId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        rateTransactionReservationId:
          type: integer
          description: "For a reservation transaction that has been moved to another account (Group Master, Company, etc.), this represents the Reservation ID the transaction was created for."
          format: int32
        receiptCurrencyCode:
          type: string
        receiptType:
          type: string
        secondaryCurrency:
          type: number
          format: currency
        sundryId:
          type: integer
          format: int32
        taxAmount:
          type: number
          format: currency
        transactionType:
          type: string
        unpaidBalance:
          type: number
          format: currency
        userId:
          type: integer
          format: int32
        voidTransaction:
          type: boolean
      example:
        id: 9
        accountId: 328
        accountingDate: 2019-02-16 00:00:00
        accountType: Accommodation
        amount: 53.26
        comment: Cleaning
        createdDate: 2016-11-28 00:00:00
        creditCardMasked: XXXX-XXXX-XXXX-5322
        creditCardType: Visa
        currencyCode: AUD
        dateOfTransaction: 2016-11-28 00:00:00
        dollarAction: 0.0
        description: "Direct Credit Receipt #1, RMSOnline Booking #6920394"
        exchangeRate: 12.2
        fullGst: 86.25
        glCodeDescription: On going
        gLCodeGrouping: Full time stays
        glCodeId: 986
        invoiceId: 154546
        isHiddenPackage: false
        linkPointer: 7
        linkPointerType: Ppppp
        modifiedDate: 2016-11-28 00:00:00
        originalReceiptId: 0
        originPropertyId: 1
        propertyId: 1
        quantity: 1
        rateTransactionReservationId: 122354
        receiptCurrencyCode: AUD
        receiptType: CreditCard
        sundryId: 9
        taxAmount: 0.0
        transactionType: Receipt
        userId: 5
        voidTransaction: true
    transactionsAllocationsSearch:
      type: object
      properties:
        transactionIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        transactionIds:
        - 2474929
        - 2474927
    transactionsAllocation:
      type: object
      properties:
        receiptTransactionId:
          type: integer
          format: int32
        destinationTransactionId:
          type: integer
          format: int32
        allocatedDate:
          type: string
          format: date-time
        glCode:
          type: integer
          format: int32
        allocationType:
          type: string
          enum:
          - NotSet
          - Alloc_Internal
          - Refund
          - Expense
          - DeAllocateCharge
          - DeAllocateReverseReceipt
          - DeAllocateOther
          - ThirdParty
      example:
      - receiptTransactionId: 2474927
        destinationTransactionId: 2474921
        allocatedDate: 2022-12-15 00:00:00
        amount: 1000.0
        glCodeId: 154
        allocationType: NotSet
      - receiptTransactionId: 2474927
        destinationTransactionId: 2474921
        allocatedDate: 2022-12-15 00:00:00
        amount: -1000.0
        glCodeId: 154
        allocationType: DeAllocateCharge
    transactionCharge:
      required:
      - accountId
      - amount
      - source
      - sundryId
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        accountTypeOverride:
          type: string
          description: This is used to override the source and specifiy the accountType for the posted transaction
          default: notSet
          enum:
          - electric
          - extras
          - gas
          - notSet
          - pabx
          - water
        amount:
          type: number
          format: currency
        comment:
          type: string
          description: This information is only stored in the backend and is not shown in the UI or on the invoice
        dateOfTransaction:
          type: number
          format: date-time
        originPropertyId:
          type: integer
          format: int32
        overrideExchangeRate:
          type: number
          format: decimal
        source:
          type: string
          default: standard
          enum:
          - electric
          - extras
          - gas
          - kiosk
          - membership
          - pos
          - pabx
          - standard
          - water
        sundryId:
          type: integer
          format: int32
        thirdPartyClientId:
          type: integer
          format: int32
        useRmsAccountingDateForPostingDate:
          type: boolean
        useSecondaryCurrency:
          type: string
          description: default
          enum:
          - default
          - local
          - usCurrency
          - gbCurrency
          - euro
          - hongKongDollar
          - japaneseYen
          - chineseYuan
      example:
        accountId: 7
        accountTypeOverride: notSet
        amount: 26.02
        comment: Extra Sheets
        dateOfTransaction: 2016-11-28 00:00:00
        originPropertyId: 1
        overrideExchangeRate: 22.2
        source: Standard
        sundryId: 7
        thirdPartyClientId: 0
        useRmsAccountingDateForPostingDate: true
        useSecondaryCurrency: default
    transactionCharges:
      required:
      - accountId
      - amount
      - sundryId
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        accountTypeOverride:
          type: string
          description: This is used to override the source and specifiy the accountType for the posted transaction
          default: notSet
          enum:
          - electric
          - extras
          - gas
          - notSet
          - pabx
          - water
        amount:
          type: number
          format: currency
        comment:
          type: string
          description: This information is only stored in the backend and is not shown in the UI or on the invoice
        dateOfTransaction:
          type: number
          format: date-time
        originPropertyId:
          type: integer
          format: int32
        overrideExchangeRate:
          type: number
          format: decimal
        source:
          type: string
          default: standard
          enum:
          - electric
          - extras
          - gas
          - kiosk
          - membership
          - pos
          - pabx
          - standard
          - water
        sundryId:
          type: integer
          format: int32
        thirdPartyClientId:
          type: integer
          format: int32
        useRmsAccountingDateForPostingDate:
          type: boolean
        useSecondaryCurrency:
          type: string
          description: useDefault
          enum:
          - default
          - local
          - usCurrency
          - gbCurrency
          - euro
          - hongKongDollar
          - japaneseYen
          - chineseYuan
      example:
      - accountId: 7
        accountTypeOverride: notSet
        amount: 5.7
        comment: Beer
        dateOfTransaction: 2019-11-28 00:00:00
        originPropertyId: 0
        overrideExchangeRate: 22.2
        source: Standard
        sundryId: 7
        thirdPartyClientId: 0
        useRmsAccountingDateForPostingDate: true
        useSecondaryCurrency: default
      - accountId: 7
        accountTypeOverride: notSet
        amount: 25.2
        comment: Pie
        dateOfTransaction: 2019-11-28 00:00:00
        originPropertyId: 0
        overrideExchangeRate: 22.2
        source: Standard
        sundryId: 7
        thirdPartyClientId: 0
        useRmsAccountingDateForPostingDate: true
        useSecondaryCurrency: default
    transactionsComments:
      type: object
      properties:
        comments:
          type: string
      example:
        comments: Updated Comment
    transactionCreditNote:
      required:
      - accountId
      - sundryId
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        amount:
          type: number
          format: currency
        assignedTransactionId:
          type: integer
          format: int32
        comment:
          type: string
          description: This information is presented on the line below the transaction in the UI and on the invoice
        dateOfTransaction:
          type: number
          format: date-time
        description:
          type: string
          description: This will appear against the transaction on the account in the description colum in the UI and on the invoice
        originPropertyId:
          type: integer
          format: int32
        overrideExchangeRate:
          type: number
          format: decimal
        sundryId:
          type: integer
          format: int32
        source:
          type: string
          default: accom
          enum:
          - electric
          - extras
          - gas
          - kiosk
          - membership
          - pos
          - pabx
          - accom
          - water
        useRmsAccountingDateForPostingDate:
          type: boolean
        useSecondaryCurrency:
          type: string
          description: useDefault
          enum:
          - default
          - local
          - usCurrency
          - gbCurrency
          - euro
          - hongKongDollar
          - japaneseYen
          - chineseYuan
      example:
        accountId: 7
        amount: 26.02
        assignedTransactionId: 7
        comment: Extra Sheets
        dateOfTransaction: 2016-11-28 00:00:00
        description: Cost of the Extra Sheets
        originPropertyId: 0
        overrideExchangeRate: 2.22
        sundryId: 7
        source: Standard
        useRmsAccountingDateForPostingDate: true
        useSecondaryCurrency: default
    transactionGuestCreditAndGiftCard:
      required:
      - accountId
      - accountType
      - amount
      - giftCardId
      - guestAccountId
      - reservationId
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        accountType:
          type: string
        amount:
          type: integer
          format: number
        giftCardId:
          type: integer
          format: int32
        guestAccountId:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
      example:
        accountId: 31477
        accountType: accomm
        amount: 5.0
        giftCardId: 89
        guestAccountId: 30247
        reservationId: 23508
    transactionGuestCredit:
      required:
      - accountId
      - accountType
      - amount
      - guestAccountId
      - reservationId
      - transactionId
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        accountType:
          type: string
        amount:
          type: integer
          format: number
        transactionId:
          type: integer
          format: int32
        guestAccountId:
          type: integer
          format: int32
        reservationId:
          type: integer
          format: int32
      example:
        accountId: 31477
        accountType: accomm
        amount: 5.0
        transactionId: 2519489
        guestAccountId: 30247
        reservationId: 23508
    transactionGuestCredits:
      required:
      - accountId
      - accountType
      - amount
      - creditTransactions
      - guestAccountId
      - reservationId
      - transactionId
      type: object
      properties:
        accountId:
          type: integer
          format: number
        accountType:
          type: string
          format: string
        reservationId:
          type: integer
          format: number
        creditTransactions:
          type: array
          items:
            $ref: '#/components/schemas/transactionGuestCredits_creditTransactions'
      description: array of guestCredits
      example:
        accountId: 378082
        accountType: accomm
        reservationId: 221517
        creditTransactions:
        - amount: 10.0
          transactionId: 2520399
          guestAccountId: 378301
        - amount: 27.0
          transactionId: 2520400
          guestAccountId: 378301
    transactionGuestCreditsResponse:
      type: array
      example:
      - accountingDate: 2024-07-18 00:00:00
        creditCardType: ""
        creditCardMasked: ""
        currencyCode: AUD
        createdDate: 2024-07-18 05:33:35
        fullGst: 0.0
        glCodeGrouping: Suspense
        glCodeDescription: Suspense Charge
        glCodeId: 2
        originalReceiptId: 0
        propertyId: 1
        rateTransactionReservationId: 0
        taxAmount: 0.0
        transactionType: CreditNote
        voidTransaction: false
        linkPointer: 2520402
        linkPointerType: CreditTransfer
        unpaidBalance: -10.0
        isHiddenPackage: false
        userId: 186
        secondaryCurrency: -10.0
        exchangeRate: 0.0
        modifiedDate: 1900-01-01 00:00:00
        id: 2520401
        accountId: 378082
        accountType: Accommodation
        amount: -10.0
        comment: ""
        dateOfTransaction: 2024-07-18 00:00:00
        sundryId: 0
        description: "Transfer Credit from Acc No: 378301"
        quantity: 0
        invoiceId: 0
      - accountingDate: 2024-07-18 00:00:00
        creditCardType: ""
        creditCardMasked: ""
        currencyCode: AUD
        createdDate: 2024-07-18 05:33:35
        fullGst: 0.0
        glCodeGrouping: Suspense
        glCodeDescription: Suspense Charge
        glCodeId: 2
        originalReceiptId: 0
        propertyId: 1
        rateTransactionReservationId: 0
        taxAmount: 0.0
        transactionType: Charge
        voidTransaction: false
        linkPointer: 2520401
        linkPointerType: CreditTransfer
        unpaidBalance: 0.0
        isHiddenPackage: false
        userId: 186
        secondaryCurrency: 10.0
        exchangeRate: 0.0
        modifiedDate: 1900-01-01 00:00:00
        id: 2520402
        accountId: 378301
        accountType: Accommodation
        amount: 10.0
        comment: ""
        dateOfTransaction: 2024-07-18 00:00:00
        sundryId: 0
        description: "Transfer Credit to Res No: 221517 - (Account1)"
        quantity: 0
        invoiceId: 0
      - accountingDate: 2024-07-18 00:00:00
        creditCardType: ""
        creditCardMasked: ""
        currencyCode: AUD
        createdDate: 2024-07-18 05:33:35
        fullGst: 0.0
        glCodeGrouping: Suspense
        glCodeDescription: Suspense Charge
        glCodeId: 2
        originalReceiptId: 0
        propertyId: 1
        rateTransactionReservationId: 0
        taxAmount: 0.0
        transactionType: CreditNote
        voidTransaction: false
        linkPointer: 2520404
        linkPointerType: CreditTransfer
        unpaidBalance: -27.0
        isHiddenPackage: false
        userId: 186
        secondaryCurrency: -27.0
        exchangeRate: 0.0
        modifiedDate: 1900-01-01 00:00:00
        id: 2520403
        accountId: 378082
        accountType: Accommodation
        amount: -27.0
        comment: ""
        dateOfTransaction: 2024-07-18 00:00:00
        sundryId: 0
        description: "Transfer Credit from Acc No: 378301"
        quantity: 0
        invoiceId: 0
      - accountingDate: 2024-07-18 00:00:00
        creditCardType: ""
        creditCardMasked: ""
        currencyCode: AUD
        createdDate: 2024-07-18 05:33:35
        fullGst: 0.0
        glCodeGrouping: Suspense
        glCodeDescription: Suspense Charge
        glCodeId: 2
        originalReceiptId: 0
        propertyId: 1
        rateTransactionReservationId: 0
        taxAmount: 0.0
        transactionType: Charge
        voidTransaction: false
        linkPointer: 2520403
        linkPointerType: CreditTransfer
        unpaidBalance: 0.0
        isHiddenPackage: false
        userId: 186
        secondaryCurrency: 27.0
        exchangeRate: 0.0
        modifiedDate: 1900-01-01 00:00:00
        id: 2520404
        accountId: 378301
        accountType: Accommodation
        amount: 27.0
        comment: ""
        dateOfTransaction: 2024-07-18 00:00:00
        sundryId: 0
        description: "Transfer Credit to Res No: 221517 - (Account1)"
        quantity: 0
        invoiceId: 0
      items:
        $ref: '#/components/schemas/transactionGuestCreditsResponse_inner'
    transactionReceipt:
      required:
      - accountId
      - amount
      - receiptType
      - source
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        accountTypeOverride:
          type: string
          description: This is used to override the source and specifiy the accountType for the posted transaction
          default: notSet
          enum:
          - electric
          - extras
          - gas
          - notSet
          - pabx
          - water
        allowOnlinePayment:
          type: boolean
          description: For RMSPay Customers Only - Will proccess the payment via the gateway if to true and a valid RMSPay token is attached to the request
        amount:
          type: number
          format: currency
        cardId:
          type: integer
          description: "The cardId refers to the 'id' returned in both the calls 'get/properties/{id}/ibe/creditCard' and '/properties/{id}/creditCards'"
          format: int32
        creditCardAuthorization:
          type: string
          description: This is only required when usuing the receiptType 'creditCard' or 'eftpos')
        creditCardExpiry:
          type: string
          description: Format must be month/year e.g. 22/28 (This is only required when usuing the receiptType 'creditCard' or 'eftpos)
        creditCardName:
          type: string
          description: This is only required when usuing the receiptType 'creditCard' or 'eftpos')
        creditCardNumber:
          maxLength: 4
          type: integer
          description: Only pass the last 4 digits of the credit card (This is only required when usuing the receiptType 'creditCard' or 'eftpos)
        creditCardTransactionFee:
          type: number
          format: currency
        chequeNo:
          type: string
        comment:
          type: string
          description: This information is presented on the line below the transaction in the UI and on the invoice
        dateOfTransaction:
          type: number
          format: date-time
        description:
          type: string
          description: This will appear against the transaction on the account in the description colum in the UI and on the invoice
        exchangeRateId:
          type: integer
          format: int32
        invoiceId:
          type: integer
          format: int32
        journalId:
          type: string
        originPropertyId:
          type: integer
          format: int32
        overrideExchangeRate:
          type: number
          format: decimal
        receiptType:
          type: string
          enum:
          - cash
          - cash3
          - cash4
          - cash5
          - cashExpense
          - creditTransfer
          - cheque3
          - cheque4
          - cheque5
          - cheque
          - creditCard
          - directCredit
          - directCredit2
          - directCredit3
          - directCredit4
          - directCredit5
          - directCredit6
          - directCredit7
          - directCredit8
          - directCredit9
          - directCredit10
          - eftpos
          - eftposMachine
          - existingToken
          - forexCash
          - giftCard
          - guestCredit
          - journal
          - otherCash(cash2)
          - otherCheque(cheque2)
          - voucher
        source:
          type: string
          default: standard
          enum:
          - electric
          - extras
          - gas
          - kiosk
          - membership
          - pos
          - pabx
          - standard
          - water
        useRmsAccountingDateForPostingDate:
          type: boolean
        useSecondaryCurrency:
          type: string
          description: useDefault
          enum:
          - default
          - local
          - usCurrency
          - gbCurrency
          - euro
          - hongKongDollar
          - japaneseYen
          - chineseYuan
        token:
          type: string
          description: "This field refers to the ‘token’ you would pass in the call guest/id/token <br/><br/> If a token is in the request, the receiptType must be CreditCard and a CardId must be provided. <br/><br/>  The token must also meet the atleast 1 of following criteria: <br/><br/> 1) The accountId is associated with the primary guestId where this token was already associated <br/><br/> 2) The accountId is for the reservation where the primary GuestId already had this token associated. <br/><br/> If none of the above criteria is met, the receipt post will be rejected. "
        transactionReference:
          type: string
          description: This field is so you can provide the paymnet gateway reference number
      example:
        accountId: 7
        accountTypeOverride: notSet
        allowOnlinePayment: false
        amount: 26.02
        cardId: 2
        creditCardAuthorization: "yes"
        creditCardExpiry: 22/25
        creditCardName: Peter Branden
        creditCardNumber: 4569
        creditCardTransactionFee: 1.0
        chequeNo: G88392
        comment: Extra Sheets
        dateOfTransaction: 2016-11-28 00:00:00
        description: Cost of the Extra Sheets
        exchangeRateId: 0
        invoiceId: 23673
        journalId: u7838yt
        originPropertyId: 0
        overrideExchangeRate: 2.22
        receiptType: CreditCard
        source: Standard
        useRmsAccountingDateForPostingDate: true
        useSecondaryCurrency: default
        token: erer78er9+er3er6r3fedfr
        transactionReference: Tr6464g65
    transactionRefund:
      required:
      - accountId
      - accountType
      - amount
      - receiptType
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        allowOnlinePayment:
          type: boolean
        amount:
          type: number
          format: currency
        assignedTransactionId:
          type: integer
          description: "This field is required with RMSPay - The assigned transaction ID needs to be captured from the response body of the RMSPay receipt. In the RMSPay recceipt response body, it is referred to as 'id'"
          format: int32
        cardId:
          type: integer
          description: This is the credit card type ID from RMS
          format: int32
        chequeNo:
          type: string
        comment:
          type: string
          description: This information is presented on the line below the transaction in the UI and on the invoice
        dateOfTransaction:
          type: number
          format: date-time
        description:
          type: string
          description: This will appear against the transaction on the account in the description colum in the UI and on the invoice
        journalId:
          type: string
        originPropertyId:
          type: integer
          format: int32
        overrideExchangeRate:
          type: number
          format: decimal
        receiptType:
          type: string
          enum:
          - cash
          - cash3
          - cash4
          - cash5
          - cashExpense
          - creditTransfer
          - cheque3
          - cheque4
          - cheque5
          - cheque
          - creditCard
          - directCredit
          - directCredit2
          - directCredit3
          - directCredit4
          - directCredit5
          - eftpos
          - eftposMachine
          - existingToken
          - journal
          - otherCash
          - otherCheque
          - voucher
        sundryId:
          type: integer
          format: int32
        source:
          type: string
          default: standard
          enum:
          - electric
          - extras
          - gas
          - kiosk
          - membership
          - pos
          - pabx
          - standard
          - water
        transactionReference:
          type: string
        useRmsAccountingDateForPostingDate:
          type: boolean
        useSecondaryCurrency:
          type: string
          description: useDefault
          enum:
          - default
          - local
          - usCurrency
          - gbCurrency
          - euro
          - hongKongDollar
          - japaneseYen
          - chineseYuan
      description: Used:<br>POST /transactions/refund
      example:
        accountId: 544545
        amount: 26.02
        allowOnlinePayment: true
        assignedTransactionId: 2481628
        cardId: 2
        chequeNo: G88392
        comment: Extra Sheets
        dateOfTransaction: 2016-11-28 00:00:00
        description: Cost of the Extra Sheets
        journalId: u7838yt
        originPropertyId: 0
        overrideExchangeRate: 22.2
        receiptType: CreditCard
        source: Standard
        transactionReference: SSVPQR52TGNG5S82
        useRmsAccountingDateForPostingDate: true
        useSecondaryCurrency: default
    transactionreverseReceipt:
      required:
      - accountId
      - id
      type: object
      properties:
        id:
          type: integer
          description: The transactionId for the receipt you wish to reverse
          format: int32
        accountId:
          type: integer
          format: int32
        originPropertyId:
          type: integer
          format: int32
        reasonId:
          type: integer
          format: int32
      example:
        id: 12345
        accountId: 254696
        originpropertyId: 0
        reasonId: 5
    transactionVoid:
      type: object
      properties:
        id:
          type: integer
          format: int32
        comment:
          type: string
          description: This information is presented on the line below the transaction in the UI and on the invoice
        originPropertyId:
          type: integer
          format: int32
        reasonId:
          type: integer
          format: int32
      example:
        id: 12345
        comment: Accidental charge
        originPropertyId: 0
        reasonId: 5
    transactionsVoids:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
        comment:
          type: string
          description: This information is presented on the line below the transaction in the UI and on the invoice
        originPropertyId:
          type: integer
          format: int32
        reasonId:
          type: integer
          format: int32
      example:
        ids:
        - 2491311
        - 2491312
        comment: Accidental charge
        originPropertyId: 0
        reasonId: 5
    transferType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        id: 5
        description: horse back
        propertyIds:
        - 1
        - 3
        - 4
    userSearch:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
        idFrom:
          type: integer
          format: int32
        idTo:
          type: integer
          format: int32
        departmentIds:
          type: array
          items:
            type: integer
            format: int32
        emails:
          type: array
          items:
            type: string
        givens:
          type: array
          items:
            type: string
        phones:
          type: array
          items:
            type: string
        securityProfileIds:
          type: array
          items:
            type: integer
            format: int32
        surnames:
          type: array
          items:
            type: string
        userNames:
          type: array
          items:
            type: string
      example:
        ids:
        - 1
        - 595
        - 4
        idFrom: 6
        idTo: 7
        departmentIds:
        - 4
        - 5
        - 9
        emails:
        - apisupport@rms.com.au
        - apisupport@rmscloud.com
        givens:
        - john
        - james
        phones:
        - +6141245125
        - 04 268 895 14
        securityProfileIds:
        - 1
        - 2
        surnames:
        - jeeves
        - gordans
        userNames:
        - jacobJ
        - PeterF
    userProfile:
      type: object
      properties:
        departmentId:
          type: integer
          format: int32
        docuSignUsername:
          type: string
        email:
          type: string
        given:
          type: string
        inactive:
          type: boolean
        limitedUser:
          type: boolean
        mobile:
          type: string
        perferredLanguage:
          type: string
        phoneAh:
          type: string
        phoneBh:
          type: string
        positionId:
          type: integer
          format: int32
        printProfileId:
          type: integer
          format: int32
        ssoFederationId:
          type: string
        startupLandingPage:
          type: string
        surname:
          type: string
        title:
          type: string
        userName:
          type: string
        useSmartPrinting:
          type: boolean
      example:
        departmentId: 8
        docuSignUsername: Harry
        email: harry@rms.com
        given: Harry
        inactive: false
        limitedUser: false
        mobile: 72612358
        perferredLanguage: french
        phoneAh: 03 9856 9568
        phoneBh: 03 4548 4598
        positionId: 9
        printProfileId: 6
        ssoFederationId: 8g954g4
        startupLandingPage: Availability Chart
        surname: Farfield
        title: Mr
        userName: ' HarryFarfield'
        useSmartPrinting: true
    itemLiteUser:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      example:
        id: 1
        name: Manager
    userSecurityProfileSearch:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        id:
        - 1
        - 2
        - 3
        propertyIds:
        - 1
        - 2
    userSecurityProfile:
      type: object
      properties:
        id:
          type: integer
          format: int32
        categoryIds:
          type: array
          items:
            type: integer
            format: int32
        name:
          type: string
        propertyIds:
          type: array
          items:
            type: integer
            format: int32
        userId:
          type: integer
          format: int32
      example:
        id: 1
        categroyIds:
        - 4
        - 5
        - 9
        - 10
        - 11
        name: Manager
        propertyIds:
        - 1
        - 2
        userId: 7
    userAuditTrail:
      type: object
      properties:
        createdDate:
          type: string
          format: date-time
        fieldModified:
          type: string
        newValue:
          type: string
        oldValue:
          type: string
        userId:
          type: string
      example:
        date: 2018-09-25 17:25:00
        fieldModified: Category
        newValue: Deluxe Queen
        oldValue: Single
        userId: Manager
    VIPcodes:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        description:
          type: string
        shortDescription:
          type: string
      example:
        id: 1
        code: KC
        description: KC VIP1
        shortDescription: KC VIP
    webhookSubscriptionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        endpoint:
          type: string
        entityType:
          type: string
          enum:
          - reservation
          - guest
          - area
          - mealPlan
          - groupAllotment
          - rateType
          - agent
        action:
          type: string
          enum:
          - creation
          - delete
          - modification
          - statusModification
        subAction:
          type: string
          enum:
          - unconfirmed
          - confirmed
          - arrived
          - departed
          - cancelled
          - preCheckIn
          - areaVacantClean
        propertyId:
          type: integer
          description: If you pass the value '0' as the property ID in a central database it will act against every property ID wthin the database
          format: int32
        modelType:
          type: string
          description: "The basic, lite or full reservation response (default is basic)"
        entityFilterType:
          type: string
          description: Used to specify the agent
          enum:
          - agent
        entityFilterTypeId:
          type: integer
          description: Used to specify the agentId
          format: int32
        headers:
          type: array
          items:
            $ref: '#/components/schemas/webhookSubscriptionResponse_headers'
      example:
        id: 1
        endpoint: https://endpoint/webhooks
        entityType: reservation
        action: creation
        subAction: ""
        propertyId: 0
        modelType: lite
        entityFilterType: ""
        entityFilterTypeId: ""
        headers:
        - key: X-API-KEY
          value: WATER
        - key: Authorization
          value: Basic YXSSS
    webhookSubscription:
      type: object
      properties:
        endpoint:
          type: string
        entityType:
          type: string
          enum:
          - reservation
          - guest
          - area
          - mealPlan
          - groupAllotment
          - rateType
          - agent
          - sundry
        action:
          type: string
          enum:
          - creation
          - modification
          - statusModification
          - deletion
          - regoAccessModified
          - accountBalanceModification
        subAction:
          type: string
          enum:
          - unconfirmed
          - confirmed
          - arrived
          - departed
          - cancelled
          - preCheckIn
          - areaVacantClean
        propertyId:
          type: integer
          description: If you pass the value '0' as the property ID in a central database it will act against every property ID wthin the database
          format: int32
        modelType:
          type: string
          description: "To specify the basic, lite or full reservation response (default is basic)"
        entityFilterType:
          type: string
          description: Used to specify the agent
          enum:
          - agent
        entityFilterId:
          type: integer
          description: Used to specify the agentId
          format: int32
        headers:
          type: array
          items:
            $ref: '#/components/schemas/webhookSubscriptionResponse_headers'
      example:
        endpoint: https://endpoint/webhooks
        entityType: reservation
        action: creation
        subAction: ""
        propertyId: 0
        modelType: lite
        entityFilterType: ""
        entityFilterId: ""
        headers:
        - key: X-API-KEY
          value: WATER
        - key: Authorization
          value: Basic YXSSS
    webhookReservationSubscription:
      type: object
      properties:
        endpoint:
          type: string
        entityType:
          type: string
          enum:
          - reservation
        action:
          type: string
          enum:
          - creation
          - modification
          - statusModification
          - regoAccessModified
          - accountBalanceModification
        subAction:
          type: string
          enum:
          - unconfirmed
          - confirmed
          - arrived
          - departed
          - cancelled
          - preCheckIn
          - noShow
          - quote
        propertyId:
          type: integer
          description: If you pass the value '0' as the property ID in a central database it will act against every property ID wthin the database
          format: int32
        modelType:
          type: string
          description: "To specify the basic, lite or full reservation response (default is basic)"
      description: Used monitor reservation changes
      example:
        endpoint: https://endpoint/webhooks
        entityType: reservation
        action: creation
        subAction: ""
        propertyId: 0
        modelType: lite
    webhookGuestSubscription:
      type: object
      properties:
        endpoint:
          type: string
        entityType:
          type: string
          enum:
          - guest
        action:
          type: string
          enum:
          - creation
          - modification
          - delete
          - idScan
        subAction:
          type: string
        propertyId:
          type: integer
          description: If you pass the value '0' as the property ID in a central database it will act against every property ID wthin the database
          format: int32
        modelType:
          type: string
          description: "To specify the basic, lite or full guest response (default is basic)"
      description: Used monitor guest changes
      example:
        endpoint: https://endpoint/webhooks
        entityType: guest
        action: creation
        subAction: ""
        propertyId: 0
        modelType: full
    webhookMealPlanSubscription:
      type: object
      properties:
        endpoint:
          type: string
        entityType:
          type: string
          enum:
          - mealPlan
        action:
          type: string
          enum:
          - creation
          - modification
          - delete
        subAction:
          type: string
        propertyId:
          type: integer
          description: If you pass the value '0' as the property ID in a central database it will act against every property ID wthin the database
          format: int32
        modelType:
          type: string
      description: Used monitor meal plan changes
      example:
        endpoint: https://endpoint/webhooks
        entityType: mealPlan
        action: creation
        subAction: ""
        propertyId: 0
        modelType: ""
    webhookGroupAllotmentSubscription:
      type: object
      properties:
        endpoint:
          type: string
        entityType:
          type: string
          enum:
          - groupAllotment
        action:
          type: string
          enum:
          - creation
          - modification
          - delete
        subAction:
          type: string
        propertyId:
          type: integer
          description: If you pass the value '0' as the property ID in a central database it will act against every property ID wthin the database
          format: int32
        modelType:
          type: string
      description: Used monitor group allotment changes
      example:
        endpoint: https://endpoint/webhooks
        entityType: groupAllotment
        action: creation
        subAction: ""
        propertyId: 0
        modelType: ""
    webhookAreaSubscription:
      type: object
      properties:
        endpoint:
          type: string
        entityType:
          type: string
          enum:
          - area
        action:
          type: string
          enum:
          - statusModification
        subAction:
          type: string
          description: "For customers using customCleanStatuses, the subAction field will be left empty. Instead, you should reference the customCleanStatusId in the webhook event to identify the status"
          enum:
          - areaVacantClean
          - areaVacantDirty
          - areaOccupied
          - areaVacantInspect
          - areaMaintenance
        propertyId:
          type: integer
          description: If you pass the value '0' as the property ID in a central database it will act against every property ID wthin the database
          format: int32
        modelType:
          type: string
      description: Used monitor area clean status changes
      example:
        endpoint: https://endpoint/webhooks
        entityType: area
        action: statusModification
        subAction: areaVacantDirty
        propertyId: 0
        modelType: ""
    webhookRateTypeSubscription:
      type: object
      properties:
        endpoint:
          type: string
        entityType:
          type: string
          enum:
          - rateType
        action:
          type: string
          enum:
          - creation
          - modification
        subAction:
          type: string
          description: Sub action not applicable
        propertyId:
          type: integer
          description: Property ID to be passed as 0
          format: int32
        modelType:
          type: string
          description: To specify the lite or full reservation response (default is lite)
      description: Used monitor rateType changes
      example:
        endpoint: https://endpoint/webhooks
        entityType: rateType
        action: creation
        subAction: ""
        propertyId: 0
        modelType: lite
    webhookAgentSubscription:
      type: object
      properties:
        endpoint:
          type: string
        entityType:
          type: string
          enum:
          - agent
        action:
          type: string
          enum:
          - creation
          - modification
        subAction:
          type: string
          description: Sub action not applicable
        propertyId:
          type: integer
          description: Property ID to be passed as 0
          format: int32
        modelType:
          type: string
          description: "To specify the basic, lite or full guest response (default is basic)"
        entityFilterType:
          type: string
          description: "Used to specify the agent.If not specified, all agents will be subscribed."
          enum:
          - agent
        entityFilterTypeId:
          type: integer
          description: Used to specify the agentId when using entityFilterType
          format: int32
      description: Used monitor travelAgent changes
      example:
        endpoint: https://endpoint/webhooks
        entityType: agent
        action: creation
        subAction: ""
        propertyId: 0
        modelType: lite
        entityFilterType: agent
        entityFilterTypeId: "2673"
    webhookSundrySubscription:
      type: object
      properties:
        endpoint:
          type: string
        entityType:
          type: string
          enum:
          - sundry
        action:
          type: string
          enum:
          - creation
          - modification
        subAction:
          type: string
          description: Sub action not applicable
        propertyId:
          type: integer
          description: If you pass the value '0' as the property ID in a central database it will act against every property ID wthin the database
          format: int32
        modelType:
          type: string
          description: ' basic (lite/full not applicable)'
      description: Used monitor sundry changes
      example:
        endpoint: https://endpoint/webhooks
        entityType: sundry
        action: creation
        subAction: ""
        propertyId: 0
        modelType: basic
    inline_response_200:
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/areaLite'
      - type: array
        items:
          $ref: '#/components/schemas/areaBasic'
      - type: array
        items:
          $ref: '#/components/schemas/areaFull'
    inline_response_200_1:
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/categoryLite'
      - type: array
        items:
          $ref: '#/components/schemas/categoryBasic'
      - type: array
        items:
          $ref: '#/components/schemas/categoryFull'
    inline_response_200_2:
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/companyLite'
      - type: array
        items:
          $ref: '#/components/schemas/companyBasic'
      - type: array
        items:
          $ref: '#/components/schemas/companyFull'
    inline_response_200_3:
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/discountLite'
      - type: array
        items:
          $ref: '#/components/schemas/discountBasic'
      - type: array
        items:
          $ref: '#/components/schemas/discountFull'
    inline_response_200_4:
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/guestLite'
      - type: array
        items:
          $ref: '#/components/schemas/guestBasic'
      - type: array
        items:
          $ref: '#/components/schemas/guestFull'
    inline_response_200_5:
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/groupAllotmentsLite'
      - type: array
        items:
          $ref: '#/components/schemas/groupAllotmentsBasic'
    inline_response_200_6:
      example:
      - agentLite:
          $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/agentLite/example
      - agentBasic:
          $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/agentBasic/example
      - agentFull:
          $ref: https://api.swaggerhub.com/domains/RMSHospitality/schema_domain1/1.4.37.1#/components/schemas/agentFull/example
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/agentLite'
      - type: array
        items:
          $ref: '#/components/schemas/agentBasic'
      - type: array
        items:
          $ref: '#/components/schemas/agentFull'
    inline_response_200_7:
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/propertiesLite'
      - type: array
        items:
          $ref: '#/components/schemas/propertiesBasic'
      - type: array
        items:
          $ref: '#/components/schemas/propertiesFull'
    inline_response_200_8:
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/rateTypeLite'
      - type: array
        items:
          $ref: '#/components/schemas/rateTypeFull'
    inline_response_200_9:
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/rateElements'
    inline_response_200_10:
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/reservationLite'
      - type: array
        items:
          $ref: '#/components/schemas/reservationBasic'
      - type: array
        items:
          $ref: '#/components/schemas/reservationFull'
    inline_response_200_11:
      oneOf:
      - type: array
        items:
          $ref: '#/components/schemas/guestMovementBasic'
      - type: array
        items:
          $ref: '#/components/schemas/guestMovementFull'
    inline_response_200_12:
      type: object
      properties:
        Success:
          type: boolean
          example: true
    webhooks_body:
      anyOf:
      - $ref: '#/components/schemas/webhookSubscription'
      - $ref: '#/components/schemas/webhookReservationSubscription'
      - $ref: '#/components/schemas/webhookGuestSubscription'
      - $ref: '#/components/schemas/webhookMealPlanSubscription'
      - $ref: '#/components/schemas/webhookGroupAllotmentSubscription'
      - $ref: '#/components/schemas/webhookAreaSubscription'
      - $ref: '#/components/schemas/webhookRateTypeSubscription'
      - $ref: '#/components/schemas/webhookAgentSubscription'
      - $ref: '#/components/schemas/webhookSundrySubscription'
    agentAllotments_categoryAllotment:
      type: object
      properties:
        propertyId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        allotment:
          type: integer
          format: int32
        allotmentId:
          type: integer
          format: int32
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
    agentAllotments_reportingADR:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        reportingADR:
          type: number
          format: float
    agentsIdCommissions_rateCommissions:
      type: object
      properties:
        rateTypeId:
          type: integer
        rateName:
          type: string
        collectType:
          type: string
          enum:
          - property
          - agent
        commission:
          type: number
          format: float
        noGreaterThan:
          type: number
          format: float
        multiplier:
          type: number
          format: float
    agentsIdCommissions_commissions:
      type: object
      properties:
        sundryId:
          type: integer
        commissionType:
          type: string
          enum:
          - UsePercentage
          - UseDailyDollarAmount
          - NoCommission
          - UseTotalDollarAmount
        propertyId:
          type: integer
        includeServiceChargesInCommissionCalculation:
          type: boolean
        rateCommissions:
          type: array
          items:
            $ref: '#/components/schemas/agentsIdCommissions_rateCommissions'
    availableAreaRequest_dwelling:
      type: object
      properties:
        lengthId:
          type: integer
          format: int32
        slideId:
          type: integer
          format: int32
        typeId:
          type: integer
          format: int32
    rateGridARIPushResponse_dayBreakdown:
      type: object
      properties:
        availableAreas:
          type: integer
        closedOnArrival:
          type: boolean
        closedOnDeparture:
          type: boolean
        dailyRate:
          type: number
          format: float
        dateFrom:
          type: string
          format: date
        dateTo:
          type: string
          format: date
        minStay:
          type: integer
        minStayOnArrival:
          type: integer
        maxStay:
          type: integer
        stopSell:
          type: boolean
    rateGridARIPushResponse_additionals_adults:
      type: object
      properties:
        additionalCount:
          type: integer
        amount:
          type: number
          format: float
    rateGridARIPushResponse_additionals_adultsBase:
      type: object
      properties:
        includeInBase:
          type: boolean
        personBase:
          type: integer
      nullable: true
    rateGridARIPushResponse_additionals:
      type: object
      properties:
        adults:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/rateGridARIPushResponse_additionals_adults'
        children:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/rateGridARIPushResponse_additionals_adults'
        infants:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/rateGridARIPushResponse_additionals_adults'
        adultsBase:
          $ref: '#/components/schemas/rateGridARIPushResponse_additionals_adultsBase'
        childrenBase:
          $ref: '#/components/schemas/rateGridARIPushResponse_additionals_adultsBase'
        infantsBase:
          $ref: '#/components/schemas/rateGridARIPushResponse_additionals_adultsBase'
    rateGridARIPushResponse_rates:
      type: object
      properties:
        rateId:
          type: integer
        personBase:
          type: integer
        dayBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/rateGridARIPushResponse_dayBreakdown'
        additionals:
          $ref: '#/components/schemas/rateGridARIPushResponse_additionals'
    rateGridARIPushResponse_categories:
      type: object
      properties:
        categoryId:
          type: integer
        rates:
          type: array
          items:
            $ref: '#/components/schemas/rateGridARIPushResponse_rates'
    rateGridARIPushResponseVersion2_dayBreakdown:
      type: object
      properties:
        personBase:
          type: integer
        availableAreas:
          type: integer
        closedOnArrival:
          type: boolean
        closedOnDeparture:
          type: boolean
        dailyRate:
          type: number
          format: float
        dateFrom:
          type: string
          format: date
        dateTo:
          type: string
          format: date
        minStay:
          type: integer
        minStayOnArrival:
          type: integer
        maxStay:
          type: integer
        stopSell:
          type: boolean
        additionalId:
          type: integer
    rateGridARIPushResponseVersion2_categoryRates:
      type: object
      properties:
        categoryId:
          type: integer
        rateId:
          type: integer
        dayBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/rateGridARIPushResponseVersion2_dayBreakdown'
    rateGridARIPushResponseVersion2_adultsBase:
      type: object
      properties:
        includeInBase:
          type: boolean
        personBase:
          type: integer
    rateGridARIPushResponseVersion2_additionals:
      type: object
      properties:
        additionalId:
          type: integer
        adults:
          type: array
          items:
            $ref: '#/components/schemas/rateGridARIPushResponse_additionals_adults'
        children:
          type: array
          items:
            $ref: '#/components/schemas/rateGridARIPushResponse_additionals_adults'
        infants:
          type: array
          items:
            $ref: '#/components/schemas/rateGridARIPushResponse_additionals_adults'
        adultsBase:
          $ref: '#/components/schemas/rateGridARIPushResponseVersion2_adultsBase'
        childrenBase:
          $ref: '#/components/schemas/rateGridARIPushResponseVersion2_adultsBase'
        infantsBase:
          $ref: '#/components/schemas/rateGridARIPushResponseVersion2_adultsBase'
    cancellationPoliciesRules_rule1:
      type: object
      properties:
        feeType:
          type: string
        period:
          type: integer
        sundryId:
          type: integer
        firstXNights:
          type: integer
        amount:
          type: number
        percentage:
          type: number
    categoryHousekeeping_housekeepingTasks:
      type: object
      properties:
        taskId:
          type: integer
          format: int32
        name:
          type: string
    categoryHousekeeping_bedConfiguration:
      type: object
      properties:
        bedConfigurationId:
          type: integer
          format: int32
        name:
          type: string
        quantity:
          type: string
    categoryHousekeeping_customAreaCleanStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        minutes:
          type: string
    discountFull_inner:
      type: object
      properties:
        availableToMembers:
          type: boolean
        glCodeId:
          type: integer
        glCodeType:
          type: string
        discountType:
          type: string
          enum:
          - Percentage
          - Amount
          - BOGO
          - TotalRateOverride
          - KidsAndInfantsStayFree
          - NightlyRateOverride
        percentage:
          type: object
          properties:
            percentage:
              type: number
            noGreaterThan:
              type: number
            includePackage:
              type: boolean
            includeAdditionals:
              type: boolean
            appliesToTotalRate:
              type: boolean
        amount:
          type: object
          properties:
            amount:
              type: number
        bogo:
          type: object
          properties:
            buyXNights:
              type: integer
            getXNights:
              type: integer
            getXNightsCycles:
              type: integer
            includeAdditionals:
              type: boolean
        totalOverride:
          type: object
          properties:
            firstXNights:
              type: integer
            totalCharge:
              type: number
            includeAdditionals:
              type: boolean
            maxAdults:
              type: integer
            maxChildren:
              type: integer
        nightlyRateOverride:
          type: object
          properties:
            firstXNights:
              type: integer
            totalCharge:
              type: number
            includeAdditionals:
              type: boolean
        availableToIbe:
          type: boolean
        description:
          type: string
        minimumNightStay:
          type: integer
        maximumNightStay:
          type: integer
        id:
          type: integer
        name:
          type: string
    dwellingTypesPropertyRestriction_propertyRestrictions:
      type: object
      properties:
        propertyId:
          type: integer
        maximum:
          type: integer
    propertiesAccounting_allowedAccountTypes:
      type: object
      properties:
        accommodation:
          type: boolean
        extras:
          type: boolean
        gas:
          type: boolean
        electricity:
          type: boolean
        water:
          type: boolean
        pabx:
          type: boolean
    ratesConfigurationsSearchResponse_categories:
      type: object
      properties:
        categoryId:
          type: integer
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        allYearRound:
          type: boolean
    ratesConfigurationsSearchResponse_days:
      type: object
      properties:
        day:
          type: string
        arrive:
          type: boolean
        minimumStay:
          type: integer
        maximumStay:
          type: integer
    ratesConfigurationsSearchResponse_madeDateWindow:
      type: object
      properties:
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
    ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration_sunday:
      type: object
      properties:
        dueDays:
          type: integer
        dueDaysType:
          type: string
          enum:
          - FromReservationMade
          - PriorToArrival
        amount:
          type: number
        percentage:
          type: number
        amountType:
          type: string
          enum:
          - AccountBalance
          - TotalOrPercentage
          - FirstXNights
          - PerWeekOrPart
    ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration_friday:
      type: object
      properties:
        dueDays:
          type: integer
        dueDaysType:
          type: string
          enum:
          - FromReservationMade
          - PriorToArrival
        firstXNights:
          type: integer
        amountType:
          type: string
          enum:
          - AccountBalance
          - TotalOrPercentage
          - FirstXNights
          - PerWeekOrPart
    ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration:
      type: object
      properties:
        sunday:
          $ref: '#/components/schemas/ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration_sunday'
        monday:
          $ref: '#/components/schemas/ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration_sunday'
        tuesday:
          $ref: '#/components/schemas/ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration_sunday'
        wednesday:
          $ref: '#/components/schemas/ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration_sunday'
        thursday:
          $ref: '#/components/schemas/ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration_sunday'
        friday:
          $ref: '#/components/schemas/ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration_friday'
        saturday:
          $ref: '#/components/schemas/ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration_sunday'
    ratesConfigurationsSearchResponse_deposit:
      type: object
      properties:
        activationType:
          type: string
          enum:
          - LengthOfStay
          - DaysPriorToArrival
          - NightOfTheWeek
          - ArrivingOn
        dayOfWeekConfiguration:
          $ref: '#/components/schemas/ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration'
        secondDeposit:
          $ref: '#/components/schemas/ratesConfigurationsSearchResponse_deposit_dayOfWeekConfiguration_sunday'
    ratesConfigurationsSearchResponse_rates:
      type: object
      properties:
        rateId:
          type: integer
        propertyId:
          type: integer
        longDescription:
          type: string
        rateChargeDescription:
          type: string
        isDeal:
          type: boolean
        cancellationPolicyId:
          type: integer
        advancePurchaseNights:
          type: integer
        lastMinuteNights:
          type: integer
        marketSegmentId:
          type: integer
        mealPlanId:
          type: integer
        discountId:
          type: integer
        bookingSourceId:
          type: integer
        glCodeId:
          type: integer
        url:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ratesConfigurationsSearchResponse_categories'
        days:
          type: array
          items:
            $ref: '#/components/schemas/ratesConfigurationsSearchResponse_days'
        madeDateWindow:
          type: array
          items:
            $ref: '#/components/schemas/ratesConfigurationsSearchResponse_madeDateWindow'
        deposit:
          $ref: '#/components/schemas/ratesConfigurationsSearchResponse_deposit'
    rateTableAddtionals_adults_nightly:
      type: object
      properties:
        first:
          type: number
          format: float
        second:
          type: number
          format: float
        third:
          type: number
          format: float
        fourth:
          type: number
          format: float
        thereafter:
          type: number
          format: float
    rateTableAddtionals_adults:
      type: object
      properties:
        base:
          type: integer
        glAccountCodeId:
          type: integer
        includeInBase:
          type: boolean
        minimumNumberAllowed:
          type: integer
        maximumNumberAllowed:
          type: integer
        nightly:
          $ref: '#/components/schemas/rateTableAddtionals_adults_nightly'
        showOnAccount:
          type: boolean
    quoteResponse_availableAreas:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        categoryId:
          type: integer
        propertyId:
          type: integer
        cleanStatus:
          type: string
    quoteResponse_taxBreakdown:
      type: object
      properties:
        amount:
          type: number
        description:
          type: string
    quoteResponse_additionalsBreakdown:
      type: object
      properties:
        additionalType:
          type: string
        amount:
          type: number
          format: float
    reportsFlashResponse_data:
      type: object
      properties:
        grouping:
          type: string
        description:
          type: string
        dayBudget:
          type: number
        dayActual:
          type: number
        dayLastYear:
          type: number
        monthBudget:
          type: number
        monthActual:
          type: number
        monthLastYear:
          type: number
        yearBudget:
          type: number
        yearActual:
          type: number
        yearLastYear:
          type: number
        glCodeId:
          type: integer
        glCode:
          type: string
        glGroupId:
          type: integer
        todayOnly:
          type: boolean
    reportsFlashResponse_data_1:
      type: object
      properties:
        grouping:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/reportsFlashResponse_data'
    reportOccupancy_Breakdown:
      type: object
      properties:
        averageLengthOfStay:
          type: number
          format: float
        categoryId:
          type: integer
          description: This value is returned based on your grouping options
        description:
          type: string
          description: This value is dependant on the values passed in grouping1 and grouping2
        discount:
          type: number
          format: float
        grossAverageRevPOR:
          type: number
          format: float
        netAverageRevPOR:
          type: number
          format: float
        numberOfAreasAvailable:
          type: integer
        numberOfAreasInMaintenance:
          type: integer
        numberOfAreasUnused:
          type: integer
        numberOfAreasUsed:
          type: integer
        numberOfAreasTotal:
          type: integer
        occupancyPercentage:
          type: number
          format: float
        occupants:
          type: number
          format: float
        period:
          type: string
          enum:
          - Days
          - Weeks
          - Months
        revPar:
          type: number
          format: float
        netRevPar:
          type: number
          format: float
        totalGrossRevenue:
          type: number
          format: float
        totalNetRevenue:
          type: number
          format: float
        theDate:
          type: string
          format: date-time
        groupBy1:
          type: string
        groupBy2:
          type: string
        propertyId:
          type: integer
          description: This value is returned based on your grouping options
        reservationIds:
          type: array
          items:
            type: integer
        occupantsBreakdown:
          type: string
    reservationsPatch_patch:
      type: object
      properties:
        activityId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        adults:
          type: integer
          format: int32
        additional1:
          type: integer
          format: int32
        additional2:
          type: integer
          format: int32
        additional3:
          type: integer
          format: int32
        additional4:
          type: integer
          format: int32
        additional5:
          type: integer
          format: int32
        additional6:
          type: integer
          format: int32
        additional7:
          type: integer
          format: int32
        allotmentAssociationID:
          type: string
          description: "Required when using combinations of Travel Agent, Group Allotments and Wholesalers"
        areaId:
          type: integer
          format: int32
        areaName:
          type: string
        arrivalDate:
          type: string
          format: date-time
        attendees:
          type: string
        baseRateOverride:
          type: integer
          description: If you pass a value here the base rate will appear overridden and RMS will pro rata the nightly rate minus any Inclusive Packages or Inclusive Taxes
          format: int32
        totalRateOverride:
          type: integer
          description: If you pass a value here the total rate will appear overridden and RMS will pro rata the nightly rate minus any Packages or Exclusive Taxes. If both baseRateOverride & totalRateOverride are passed in with a value then the totalRateOverride is used
          format: int32
        billing:
          type: string
        billingCategoryId:
          type: integer
          format: int32
        boatId:
          type: integer
          format: int32
        bookerContactId:
          type: integer
          format: int32
        bookingSourceId:
          type: integer
          format: int32
        bookingSourceName:
          type: string
        businessLostId:
          type: integer
          format: int32
        businessSegmentId:
          type: integer
          format: int32
        cancellationPolicyId:
          type: integer
          format: int32
        cancelledDate:
          type: string
          format: date-time
        cancelledById:
          type: integer
          format: int32
        cardId:
          type: string
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        children:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        confirmedDate:
          type: string
          format: date-time
        confirmedById:
          type: integer
          format: int32
        contactId:
          type: integer
          format: int32
        coordinator1Id:
          type: integer
          format: int32
        coordinator2Id:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        createdById:
          type: integer
          format: int64
        departureDate:
          type: string
          format: date-time
        deposit:
          type: number
          format: currency
        depositDate:
          type: string
          format: date-time
        destinationCodeId:
          type: integer
          format: int32
        discountReasonId:
          type: integer
          format: int32
        dwellingTypeId:
          type: integer
          format: int32
        dwellingLengthId:
          type: integer
          format: int32
        dwellingYear:
          type: string
        eta:
          type: string
        eventFinish:
          type: string
          format: date-time
        eventName:
          type: string
        eventStart:
          type: string
          format: date-time
        externalCancelId:
          type: string
        externalReservationId:
          type: string
        fixedRes:
          type: boolean
        fixedResReasonId:
          type: integer
          format: int32
        groupAllotmentId:
          type: integer
          format: int32
        groupOptionId:
          type: integer
          format: int32
        groupHeader:
          type: boolean
        groupReservationId:
          type: integer
          format: int32
        guestGiven:
          type: string
        guestId:
          type: integer
          format: int32
        guestSurname:
          type: string
        housekeepingNote:
          type: string
        infants:
          type: integer
          format: int32
        longTerm:
          type: boolean
        loyaltyMembershipTypeId:
          type: integer
          format: int32
        marketSegmentId:
          type: integer
          format: int32
        mealPlanId:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        modifiedById:
          type: integer
          format: int64
        notes:
          type: string
        occupantId:
          type: integer
          format: int32
        onHold:
          type: boolean
        onlineConfirmationId:
          type: integer
          format: int32
        originId:
          type: integer
          format: int32
        otaNotes:
          type: string
        otaRef1:
          type: string
        otaRef2:
          type: string
        otaRef3:
          type: string
        paymentModeId:
          type: integer
          format: int32
        posOnGroupMaster:
          type: boolean
        preArrivalCheckComplete:
          type: boolean
        preAuthAmount:
          type: number
          format: currency
        preAuthCode:
          type: string
        preAuthExpDate:
          type: number
          format: date-time
        propertyId:
          type: integer
          format: int32
        rateOnGroup:
          type: boolean
        rateTypeId:
          type: integer
          format: int32
        rateTypeName:
          type: string
        resType:
          type: string
        resTypeId:
          type: integer
          format: int32
        reservationType:
          type: string
        secondDeposit:
          type: number
          format: currency
        secondDepositDate:
          type: string
          format: date-time
        secondDiscountReasonId:
          type: integer
          format: int32
        splitReservationId:
          type: integer
          format: int32
        status:
          type: string
        subMarketSegmentId:
          type: integer
          format: int32
        subResTypeId:
          type: integer
          format: int32
        travelAgentId:
          type: integer
          format: int32
        travelAgentName:
          type: string
        userDefined1:
          maxLength: 50
          type: string
        userDefined2:
          maxLength: 20
          type: string
        userDefined3:
          maxLength: 20
          type: string
        userDefined4:
          maxLength: 20
          type: string
        userDefined5:
          maxLength: 20
          type: string
        userDefined6:
          maxLength: 20
          type: string
        userDefined7:
          maxLength: 20
          type: string
        userDefined8:
          maxLength: 20
          type: string
        userDefined9:
          maxLength: 20
          type: string
        userDefined10:
          maxLength: 50
          type: string
        userDefined11:
          type: boolean
        userDefined12:
          type: boolean
        userDefined13:
          type: boolean
        userDefined14:
          type: string
          format: date-time
        userDefined15:
          type: string
          format: date-time
        voucherId:
          type: string
        wholesalerId:
          type: integer
          format: int32
    reservationsDailyRatesOverride_dailyRates:
      required:
      - baseRate
      - theDate
      type: object
      properties:
        theDate:
          type: string
          format: date
        baseRate:
          type: number
    reservationsDiscountOverride_percentage:
      type: object
      properties:
        percentage:
          type: integer
          format: int32
        noGreaterThan:
          type: integer
          format: int32
        includePackage:
          type: boolean
        includeAdditionals:
          type: boolean
        appliesToTotalRate:
          type: boolean
    reservationsDiscountOverride_amount:
      type: object
      properties:
        amount:
          type: integer
          format: int32
    reservationsDiscountsSearchResponseFull_inner:
      type: object
      properties:
        availableToMembers:
          type: boolean
        glCodeId:
          type: integer
        glCodeType:
          type: string
        discountType:
          type: string
        percentage:
          type: object
          properties:
            percentage:
              type: number
            noGreaterThan:
              type: number
            includePackage:
              type: boolean
            includeAdditionals:
              type: boolean
            appliesToTotalRate:
              type: boolean
        availableToIbe:
          type: boolean
        description:
          type: string
        minimumNightStay:
          type: integer
        maximumNightStay:
          type: integer
        id:
          type: integer
        name:
          type: string
    reservationsPackagesResponse_inner:
      type: object
      properties:
        reservationId:
          type: integer
        packages:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              sundryId:
                type: integer
              sundryDescription:
                type: string
              quantity:
                type: integer
              perAdult:
                type: number
              perChild:
                type: number
              perInfant:
                type: number
              perAdditional1:
                type: number
              perAdditional2:
                type: number
              perAdditional3:
                type: number
              perAdditional4:
                type: number
              perAdditional5:
                type: number
              showOnccount:
                type: boolean
              applyChargeDescription:
                type: string
              amount:
                type: number
    reservationsBedConfigurationsResponse_inner:
      type: object
      properties:
        reservationId:
          type: integer
        bedConfigurations:
          type: array
          items:
            type: object
            properties:
              quantity:
                type: integer
              id:
                type: integer
              name:
                type: string
    reservationsLinensResponse_inner:
      type: object
      properties:
        reservationId:
          type: integer
        linens:
          type: array
          items:
            type: object
            properties:
              linenId:
                type: integer
              linen:
                type: string
              quantity:
                type: integer
    reservationsRateQuotesResponse_packageBreakdown:
      type: object
      properties:
        amount:
          type: number
        baseIncludesPackageAmount:
          type: boolean
        glCodeId:
          type: integer
        packageFeeType:
          type: integer
        packageId:
          type: integer
        perAdultFee:
          type: number
        perChildFee:
          type: number
        perExtra4Fee:
          type: number
        perExtra5Fee:
          type: number
        perExtra6Fee:
          type: number
        perExtra7Fee:
          type: number
        perExtra8Fee:
          type: number
        perInfantFee:
          type: number
        quantity:
          type: integer
        sundryId:
          type: integer
        sundryName:
          type: string
        totalTax:
          type: number
        theDate:
          type: string
          format: date-time
    reservationsRateQuotesResponse_additionalsBreakdown:
      type: object
      properties:
        additionalType:
          type: string
        amount:
          type: number
    reservationsRateQuotesResponse_rateBreakdown:
      type: object
      properties:
        theDate:
          type: string
          format: date-time
        baseRateAmount:
          type: number
        baseRateRaw:
          type: number
        rateType:
          type: string
        rateTypeId:
          type: integer
        currencyCode:
          type: string
        currencySymbol:
          type: string
        packageAmount:
          type: number
        packageHiddenAmount:
          type: number
        packageShownAmount:
          type: number
        displayBaseRate:
          type: number
        displayTotalPackage:
          type: number
        displayTotalRate:
          type: number
        displayTotalTax:
          type: number
        packageBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/reservationsRateQuotesResponse_packageBreakdown'
        totalExtras:
          type: number
        totalPackage:
          type: number
        totalPackageIncludedInBase:
          type: number
        totalPackageNotIncludedInBase:
          type: number
        totalRate:
          type: number
        taxBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/quoteResponse_taxBreakdown'
        additionalsBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/reservationsRateQuotesResponse_additionalsBreakdown'
    actualAccountBasic_secondaryCurrency:
      type: object
      properties:
        accommodationBalance:
          type: number
          format: currency
        arBalance:
          type: number
          format: currency
        currencyCode:
          type: string
        electricityBalance:
          type: number
          format: currency
        extrasBalance:
          type: number
          format: currency
        gasBalance:
          type: number
          format: currency
        internetBalance:
          type: number
          format: currency
        phoneBalance:
          type: number
          format: currency
        waterBalance:
          type: number
          format: currency
    reservationsWarnings_warnings:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    specialEventsSearchResponse_inner:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        propertyId:
          type: integer
        note:
          type: string
        displayWarningForReservations:
          type: boolean
    transactionGuestCredits_creditTransactions:
      type: object
      properties:
        amount:
          type: number
          format: number
        transactionId:
          type: integer
          format: number
        guestAccountId:
          type: integer
          format: number
    transactionGuestCreditsResponse_inner:
      type: object
      properties:
        accountingDate:
          type: string
          format: date-time
        creditCardType:
          type: string
          format: string
        creditCardMasked:
          type: string
          format: string
        currencyCode:
          type: string
          format: string
        createdDate:
          type: string
          format: date-time
        fullGst:
          type: number
          format: number
        glCodeGrouping:
          type: string
          format: string
        glCodeDescription:
          type: string
          format: string
        glCodeId:
          type: integer
          format: number
        originalReceiptId:
          type: integer
          format: number
        propertyId:
          type: integer
          format: number
        rateTransactionReservationId:
          type: integer
          format: number
        taxAmount:
          type: number
          format: number
        transactionType:
          type: string
          format: string
        voidTransaction:
          type: boolean
          format: boolean
        linkPointer:
          type: integer
          format: number
        linkPointerType:
          type: string
          format: string
        unpaidBalance:
          type: number
          format: number
        isHiddenPackage:
          type: boolean
          format: boolean
        userId:
          type: integer
          format: number
        secondaryCurrency:
          type: number
          format: number
        exchangeRate:
          type: number
          format: number
        modifiedDate:
          type: string
          format: date-time
        id:
          type: integer
          format: number
        accountId:
          type: integer
          format: number
        accountType:
          type: string
          format: string
        amount:
          type: number
          format: number
        comment:
          type: string
          format: string
        dateOfTransaction:
          type: string
          format: date-time
        sundryId:
          type: integer
          format: number
        description:
          type: string
          format: string
        quantity:
          type: integer
          format: number
        invoiceId:
          type: integer
          format: number
    webhookSubscriptionResponse_headers:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
  parameters:
    limit:
      name: limit
      in: query
      description: Limit the results to this number of records
      required: false
      schema:
        maximum: 500
        minimum: 1
        type: integer
        default: 100
    offset:
      name: offset
      in: query
      description: The number of records to skip before returning results
      required: false
      schema:
        minimum: 0
        type: integer
        default: 0
    id:
      name: id
      in: path
      description: The Id of the relevant record
      required: true
      schema:
        type: integer
        format: int32
    sort:
      name: sort
      in: query
      description: "You can sort based on 'id', 'dateCreated' or 'dateModified'"
      required: false
      schema:
        type: string
    modelType:
      name: modelType
      in: query
      description: Only these fields will be returned
      required: false
      explode: false
      schema:
        type: string
        default: basic
        enum:
        - basic
        - lite
        - full
    agentId:
      name: agentId
      in: path
      description: The Id of the relevant travelAgent or wholeSaler
      required: true
      schema:
        type: integer
        format: int32
    rateId:
      name: rateId
      in: path
      description: The Id of the rate
      required: true
      schema:
        type: integer
        format: int32
    assignmentId:
      name: assignmentId
      in: path
      description: The Id of the relevant rate assignment
      required: true
      schema:
        type: integer
        format: int32
    propertyId:
      name: propertyId
      in: query
      description: Only records referencing this property ID will be returned
      required: true
      explode: false
      schema:
        type: integer
        format: int32
    searchModifiedSince:
      name: modifiedSince
      in: query
      description: Limit results to records created or modified since this date (property local time)
      required: false
      schema:
        type: string
        format: date-time
    areaName:
      name: areaName
      in: query
      description: The name of the area to return
      required: false
      schema:
        type: string
    cleanStatus:
      name: status
      in: query
      description: Only these statuses will be accepted
      required: false
      explode: false
      schema:
        type: string
        enum:
        - maintenance
        - vacantClean
        - vacantDirty
        - vacantInspect
    customCleanStatusId:
      name: customCleanStatusId
      in: query
      description: The Id of the customAreaStatus
      required: false
      schema:
        type: integer
        format: int32
    associatedTo:
      name: associatedTo
      in: query
      description: Only these asscociations will be accepted
      required: false
      explode: false
      schema:
        type: string
        enum:
        - all
        - area
        - property
        - category
        - dwelling
    includeEstimatedRates:
      name: includeEstimatedRates
      in: query
      description: "When set to true this option will return an estimated rate value, this value may not reflect the same value as the final quote check. Estimated rates can be identified in the response by the value 'estimatedRate: True'"
      required: false
      schema:
        type: boolean
        default: false
    accessNumber:
      name: accessNumber
      in: query
      description: The access number
      required: true
      schema:
        type: string
    status:
      name: status
      in: query
      description: only these statuses will be excepted
      required: true
      explode: false
      schema:
        type: string
        enum:
        - in
        - out
    cancelPolicyId:
      name: cancelPolicyId
      in: path
      description: The Id of the cancellation Policy
      required: true
      schema:
        type: integer
        format: int32
    companyId:
      name: companyId
      in: path
      description: The Id of the relevant company
      required: true
      schema:
        type: integer
        format: int32
    arId:
      name: arId
      in: path
      description: The Id of the Accounts Receivable Record
      required: true
      schema:
        type: integer
        format: int32
    ignoreMandatoryFieldWarnings:
      name: ignoreMandatoryFieldWarnings
      in: query
      description: "When set to false this option will return any warnings prompted by blank mandatory fields in the RMS UI, restricting you from updating or creating a record"
      required: true
      schema:
        type: boolean
        default: false
    gdprPrivacyOptIn:
      name: optIn
      in: query
      description: The option to update a guests gdpr Privacy
      required: true
      schema:
        type: boolean
    enroll:
      name: enroll
      in: query
      description: The option to enrol a guest in the loyalty program
      required: true
      schema:
        type: boolean
    expiry:
      name: expiry
      in: query
      description: "The expiry date you pass here will set the expirey dte/time against the link returned. (This time is set in UTC). Format example: \"2020-02-25 00:00:00\""
      required: false
      schema:
        type: string
        format: date-time
    sessionId:
      name: sessionId
      in: query
      description: The Id of the relevant rmsPay session
      required: true
      schema:
        type: integer
        format: int32
    resId:
      name: resId
      in: path
      description: The Id of the reservation
      required: true
      schema:
        type: integer
        format: int32
    terminalId:
      name: terminalId
      in: query
      description: The Id of the relevant rmsPay terminal
      required: true
      schema:
        type: integer
        format: int32
    stationNumber:
      name: stationNumber
      in: query
      description: The station number for the the relevant rmsPay terminal
      required: true
      schema:
        type: string
    membershipId:
      name: membershipId
      in: path
      description: The Id of the membership record
      required: true
      schema:
        type: integer
        format: int32
    searchDepartureDate:
      name: departureDate
      in: query
      description: Limit results to records departed since this date (property local time)
      required: false
      schema:
        type: string
        format: date-time
    allotmentId:
      name: allotmentId
      in: path
      description: The Id of the relevant Allotment
      required: true
      schema:
        type: integer
        format: int32
    groupOptionId:
      name: groupOptionId
      in: path
      description: The Id of the relevant group option id
      required: true
      schema:
        type: integer
        format: int32
    requirementId:
      name: requirementId
      in: path
      description: The Id of the relevant requirement
      required: true
      schema:
        type: integer
        format: int32
    modelTypeLiteFull:
      name: modelType
      in: query
      description: Only these fields will be returned
      required: false
      explode: false
      schema:
        type: string
        default: lite
        enum:
        - lite
        - full
    reasonType:
      name: reasonType
      in: query
      description: Only these statuses will be accepted
      required: false
      explode: false
      schema:
        type: string
        enum:
        - AssetAssociatedToChanged
        - CancelInvoice
        - ChangeOfArrivedRoom
        - ChangeOfChargeType
        - ClosedOpportunityStage
        - Discount
        - ExtraDoorKeyCut
        - FixReservation
        - Housekeeping
        - InActive
        - MaintenanceBooking
        - ManualOverride
        - PencilBooking
        - ReinstateRes
        - RejectImageUpload
        - ReservationCancelled
        - ReservationUpgrade
        - ResNoShow
        - ReverseExpensePayment
        - ReverseReceipt
        - ReverseRefund
        - RevertRes
        - TransferToAccount
        - VoidingTransaction
    rateRecalculation:
      name: preventRateRecalculation
      in: query
      description: When set to true the rate will not be recalculated.
      required: true
      schema:
        type: boolean
        default: false
    useIbeDepositRules:
      name: useIbeDepositRules
      in: query
      description: When set to false the ibe deposit rules will not be used.
      required: false
      schema:
        type: boolean
        default: true
    resIdToAdd:
      name: resIdToAdd
      in: path
      description: The Id of the reservation thats being added to new/existing group
      required: true
      schema:
        type: integer
        format: int32
    guestId:
      name: guestId
      in: query
      description: The Id of the relevant guest
      required: false
      schema:
        type: integer
        format: int32
    areaId:
      name: areaId
      in: query
      description: The Id of the area to return
      required: false
      schema:
        type: integer
        format: int32
    catId:
      name: catId
      in: query
      description: The Id of the category to return
      required: false
      schema:
        type: integer
        format: int32
    includeSecondary:
      name: includeSecondary
      in: query
      description: When set to true this option will return an the secondary currency value
      required: false
      schema:
        type: boolean
        default: false
    reservationAddOnId:
      name: reservationAddOnId
      in: query
      description: The Id of the add on relationship with the reservation
      required: true
      schema:
        type: integer
        format: int32
    transferId:
      name: TransferId
      in: query
      description: The Id of the relevant transfer record
      required: true
      schema:
        type: integer
        format: int32
  requestBodies:
    authTokenRequest:
      description: '"authTokenRequest object needs to be used to create an authorisation token to access propertys data"'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/authTokenRequest'
      required: true
    accountsSearchRequest:
      description: Retrieve account details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/accountsSearch'
      required: true
    foreignExchangeRates:
      description: Body to pass to Add or update the foreign Exchange Rates in RMS
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/foreignExchangeRates'
    advancedSearchRequest:
      description: Search object that can be passed to return a search result
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/advancedSearchRequest'
      required: true
    ratesAssignmentsBasic:
      description: "Assign rates for travelAgent, wholeSaler or Company"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ratesAssignmentsBasic'
      required: true
    auditTrailSearch:
      description: Function to search a list of reservations audit trails
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/auditTrailSearch'
      required: true
    auditTrailRateSearch:
      description: Function to search a list of Rate audit trails
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/auditTrailRateSearch'
      required: true
    areaSearchRequest:
      description: Object to pass to perform an advanced areas search
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/areaSearchRequest'
      required: true
    ids:
      description: Object to pass to perform an advanced search
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ids'
      required: true
    availabilityRateGridRequest:
      description: Object to pass to retrieve availability rate grid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/availabilityRateGridRequest'
      required: true
    rateGridRequest:
      description: Object to pass to search for a list of rates
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rateGridRequest'
      required: true
    availabilityGridRequest:
      description: Object to pass to retrieve availability request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/availabilityGridRequest'
      required: true
    addOnAvailabilityRequest:
      description: Object to pass to retrieve availble addons
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/addOnAvailabilityRequest'
      required: true
    availableAreaRequest:
      description: Object to pass to retrieve availble areas
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/availableAreaRequest'
      required: true
    rateGridRequestFacility:
      description: Facility rate grid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rateGridRequestFacility'
      required: true
    boomgatesHistory:
      description: Create a new boomgate history record
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/boomgatesHistory'
      required: true
    regoAccessSearchRequest:
      description: Rego Access Search Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/regoAccessSearchRequest'
      required: true
    company:
      description: Company object that needs to be added or updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/companyBasic'
      required: true
    companyPatch:
      description: Company Patch
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/companyPatch'
    creditHoldBasic:
      description: Function to create an credit Hold record.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/creditHoldBasic'
      required: true
    contact:
      description: Contact object that needs to be added or updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/contact'
      required: true
    notes:
      description: Company Notes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/notes'
      required: true
    discountValidationSearch:
      description: Body to pass to look up a list of discount validation options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/discountValidationSearch'
      required: true
    financialInterfaceSetup:
      description: Body to pass to look up the Financial Interface Mapping Setup
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/financialInterfaceSetup'
    financialInterfaceTcodes:
      description: Body to pass to look up the Financial TCode Mapping Setup
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/financialInterfaceTcodes'
    glCodeCreation:
      description: The object passed to create or update a GL Code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/glCodeCreation'
      required: true
    guest:
      description: Guest object that needs to be added or updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestBasic'
      required: true
    guestSearch:
      description: Guest object that can be passed to return a search result
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestSearch'
      required: true
    guestPatch:
      description: Guest object that can be passed to update specified fields
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestPatch'
      required: true
    guestDwelling:
      description: Object that can be passed to add dwelling options to a guest record
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestDwelling'
      required: true
    guestArraySearch:
      description: The Guest id's to be passed in an array search
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestArraySearch'
      required: true
    guestIdArraySearch:
      description: The Guest id's to be passed in an array search
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestIdArraySearch'
      required: true
    rmsPayTokenRequest:
      description: Request object that can be passed to create a RMSPay payment against a guest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rmsPayTokenRequest'
      required: true
    guestsIdRMSPayTokenPreAuthExistingToken:
      description: This call enables you to generate a pre-authorization token using an existing token.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestsIdRMSPayTokenPreAuthExistingToken'
      required: true
    rmsPayTokenSearchRequest:
      description: "Request object that can be passed to search for an existing RMSPay payment against a guest, given the merchant reference used when creating the token"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rmsPayTokenSearchRequest'
      required: true
    rmsPayTerminalsPreAuth:
      description: This call enables you to generate a pre-authorization token using an rmsPay terminal.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rmsPayTerminalsPreAuth'
      required: true
    rmsPayTerminalsSale:
      description: 'Request object that can be passed to create a RMSPay terminal payment '
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rmsPayTerminalsSale'
      required: true
    rmsPayTerminalsToken:
      description: Request object that can be passed to create a RMSPay terminal pre-auth for $1
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rmsPayTerminalsToken'
      required: true
    guestTokenSagePay:
      description: Token object that can be passed to create a sage pay token against a guest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestTokenSagePay'
      required: true
    guestToken:
      description: Token object that can be passed to create a token against a guest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestToken'
      required: true
    guestsTokenPreAuth:
      description: Token object that can be passed to add a pre-auth token against a reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestsTokenPreAuth'
      required: true
    guestCreditSearch:
      description: Pass an array of guestsIds for guests credit information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestCreditSearch'
      required: true
    guestMembershipBasic:
      description: Guest Membership object that can be passed to create a Membership against a guest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestMembershipBasic'
      required: true
    groupAllotments:
      description: Group Allotment object to be added or updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupAllotmentsBasic'
      required: true
    categoryAllotment:
      description: Category Allotment object that needs to be added or updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupAllotmentDetails'
      required: true
    groupAllotmentCategoryAllotmentUpdates:
      description: Allotment object for Updates
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupAllotmentCategoryAllotmentUpdates'
      required: true
    groupAllotmentOptionPatch:
      description: Group Allotment Option object that can be passed to update specified fields
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupAllotmentOptionPatch'
      required: true
    groupAllotmentCategoryAllotmentCreation:
      description: Allotment object for creation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupAllotmentCategoryAllotmentCreation'
      required: true
    groupAllotmentRequirementCreation:
      description: Requirement object for creation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupAllotmentRequirementCreation'
      required: true
    groupAllotmentsGroupOptionsRates:
      description: Get a list of rates assigned to a groupAllotment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupAllotmentsGroupOptionsRates'
      required: true
    allotmentSearch:
      description: Function to search for an allotment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/allotmentSearch'
      required: true
    companyIds:
      description: Company id's
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/companyIds'
      required: true
    groupAllotmentAgentRequest:
      description: Group Allotment travelAgent/wholeSaler to be added or updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupAllotmentAgentRequest'
    inventoryGroupingsSearch:
      description: Ability to search for Inventory Groupings
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inventoryGroupingsSearch'
      required: true
    invoiceCancel:
      description: Ability to cancel an invoice
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/invoiceCancel'
      required: true
    invoiceCreate:
      description: Ability to create an invoice
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/invoiceCreate'
      required: true
    invoiceSearch:
      description: Ability to search for an invoice
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/invoiceSearch'
      required: true
    invoiceEmail:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/invoiceEmail'
    mealPlanSchedulesSearch:
      description: Body to pass to return mealplan schedules
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/mealPlanSchedulesSearch'
      required: true
    messageCentreGuestPortalNotification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messageCentreGuestPortalNotification'
    creditCardFeeSearch:
      description: Search object that can be passed to return a search result
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/creditCardFeeSearch'
      required: true
    propertiesPosEndOfDayUpdate:
      description: Body to pass to update a properties pos end of day date
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/propertiesPosEndOfDayUpdate'
      required: true
    propertiesEBanquetEndOfDayUpdate:
      description: Body to pass to update a properties Ebanquet end of day date
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/propertiesEBanquetEndOfDayUpdate'
      required: true
    ratesConfigurationsSearch:
      description: Retrieve Rate Type Configuration
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ratesConfigurationsSearch'
      required: true
    rateTablesSearch:
      description: Object to pass to search for a list of rate tables
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rateTablesSearch'
      required: true
    rateTablesAdditionalsSearch:
      description: Object to pass to search for a list of rate tables additonasl
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rateTablesAdditionalsSearch'
      required: true
    ratePackagesSearch:
      description: Object to pass to search for a list of rate tables packages
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ratePackagesSearch'
      required: true
    rateLookupsRequest:
      description: Rate lookups Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rateLookupsRequest'
      required: true
    quoteRequest:
      description: Rate quote Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/quoteRequest'
      required: true
    rateAdjustmentRequest:
      description: Ability for a rates value and restriction to be updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rateAdjustmentRequest'
      required: true
    propertyRulesSearch:
      description: Body to pass perfom a search on Property Rate Rules
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/propertyRulesSearch'
      required: true
    reportAreaIncomeSummaryBuild:
      description: Area income summary report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportAreaIncomeSummaryBuild'
      required: true
    reportsAuditTrail:
      description: Audit Trail report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportsAuditTrail'
      required: true
    reportsCashChargeBuild:
      description: Cash Charge report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportsCashChargeBuild'
      required: true
    reportsDebtorsLedgerBuild:
      description: Debtors Ledger report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportsDebtorsLedgerBuild'
      required: true
    reportExpensesAreaSummaryBuild:
      description: Expenses Area Summary report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportExpensesAreaSummaryBuild'
      required: true
    reportsFlash:
      description: Build the Flash Report
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportsFlash'
      required: true
    reportHistoryForecast:
      description: History and forecast report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportHistoryForecastBuild'
      required: true
    reportNpnResultsBuild:
      description: NPS report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportNpnResultsBuild'
      required: true
    reportNightAudit:
      description: Night Audit 1st Page report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportNightAudit'
      required: true
    reportOccupancyBuild:
      description: Occupancy report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportOccupancyBuild'
      required: true
    reportOccupancyByAreaBuild:
      description: Occupancy by area report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportOccupancyByAreaBuild'
      required: true
    reportOccupancyRevenueComparisonBuild:
      description: Occupancy revenue comparison report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportOccupancyRevenueComparisonBuild'
      required: true
    reportPaceBuild:
      description: pace report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportPaceBuild'
      required: true
    reportParthfinderBuild:
      description: Object to pass to search forpathFinder report
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportParthfinderBuild'
      required: true
    reportPerformanceIIBuild:
      description: PerformanceII report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportPerformanceIIBuild'
      required: true
    reportRevenueAndExpenseBuild:
      description: Revenue And Expense report build options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reportRevenueAndExpenseBuild'
      required: true
    reservation:
      description: Reservation object that needs to be added or updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationBasic'
      required: true
    reservationsPatch:
      description: Reservation object that can be passed to update specified fields
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationsPatch'
      required: true
    reservationSearch:
      description: Reservation object that needs to be added or updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationSearch'
      required: true
    reservationPatch:
      description: Reservation object that can be passed to update specified fields
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationPatch'
    reservationGroup:
      description: Group reservation object that needs to be added or updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationBasicGroup'
      required: true
    reservationPencil:
      description: Reservation object that needs to be added to create a pencil reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationPencil'
      required: true
    reservationGroupPencil:
      description: Reservation object that needs to be added to create a group pencil reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationGroupPencil'
      required: true
    maintenance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/maintenance'
    reservationStatus:
      description: Reservation Status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationStatus'
      required: true
    autoAllocateAreaRequest:
      description: Function to allocate areas automatically to a specified reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/autoAllocateAreaRequest'
      required: true
    reservationsDailyRatesOverride:
      description: Override daily rates for a reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationsDailyRatesOverride'
      required: true
    reservationsDiscountOverride:
      description: Override an existing discount on a reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationsDiscountOverride'
      required: true
    reservationsDiscountsSearch:
      description: Retrieve available discounts for a reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationsDiscountsSearch'
      required: true
    reservationDocumentation:
      description: Reservation object that needs to be added to add a document to a reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationDocumentation'
      required: true
    reservationsPackagesSearch:
      description: Object to pass to search for a list of reservations and their packages
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationsPackagesSearch'
      required: true
    reservationRequirement:
      description: Requirement object that needs to be added to create a requirement against a reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationRequirement'
      required: true
    reservationArraySearch:
      description: Array of reservation Id's to pass to return daily revenue
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationArraySearch'
      required: true
    reservationsRateOnGroup:
      description: Assign tarif on master for groupMaster reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationsRateOnGroup'
      required: true
    reservationAddOn:
      description: Reservation Add On
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationAddOn'
      required: true
    reservationsBedConfigurationsSearch:
      description: Retreieve the bed configurations for a list of reservations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationsBedConfigurationsSearch'
      required: true
    guestMovementsSearch:
      description: Retrieve guest movements by reservationId or guestId
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/guestMovementsSearch'
      required: true
    reservationHold:
      description: Reservation hold object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationHold'
      required: true
    reservationHousekeepingSearch:
      description: Reservation Housekeeping Search object to search
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationHousekeepingSearch'
      required: true
    resetHousekeepingRequest:
      description: Bedding Configuration Reset
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/resetHousekeepingRequest'
      required: true
    reservationsLinensSearch:
      description: Retreieve the linens configurations for a list of reservations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationsLinensSearch'
      required: true
    reservationsRateQuotes:
      description: Retrieve the rates breakdown for a reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reservationsRateQuotes'
      required: true
    reservationRegoAccess:
      description: Reservation rego access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/regoAccess'
      required: true
    transfer:
      description: Transfer object that can be passed to create or edit a reservation transfer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transfer'
      required: true
    transferBalance:
      description: Transfer object that can be passed to create or edit a reservation transfer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transferBalance'
      required: true
    mealPlanSchedulesUpgrade:
      description: Body to pass to upgrade mealplan schedules
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/mealPlanSchedulesUpgrade'
      required: true
    restrictionsPost:
      description: Object to add restrictions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/restrictionsPost'
      required: true
    restrictionSearch:
      description: Search object to search for restrictions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/restrictionSearch'
      required: true
    requirementMasterCreation:
      description: requirementMasterCreation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/requirementMasterCreation'
      required: true
    specialEventsSearch:
      description: Special Events Search
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/specialEventsSearch'
      required: true
    sundryCreation:
      description: Object to pass to create a sundry
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/sundryCreation'
      required: true
    tracesRequest:
      description: Object to pass for traces
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tracesRequest'
      required: true
    tracesTemplatesRequest:
      description: Object to pass for traces templates
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tracesTemplatesRequest'
      required: true
    transactionSearch:
      description: Transaction object that can be passed to return a search result
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionSearch'
      required: true
    transactionsAllocationsSearch:
      description: Object to pass for transaction allocation Data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionsAllocationsSearch'
      required: true
    transactionCharge:
      description: Transaction object that can be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionCharge'
      required: true
    transactionCharges:
      description: Transaction object that can be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionCharges'
      required: true
    transactionsComments:
      description: Update the comments for a transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionsComments'
      required: true
    transactionCreditNote:
      description: Transaction object that can be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionCreditNote'
      required: true
    transactionGuestCreditAndGiftCard:
      description: Transaction object to redeem guest credit or a gift card
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionGuestCreditAndGiftCard'
      required: true
    transactionGuestCredit:
      description: Transaction object to redeem guest credit or a gift card
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionGuestCredit'
      required: true
    transactionGuestCredits:
      description: Transaction object to redeem an array of guest credits
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionGuestCredits'
      required: true
    transactionReceipt:
      description: Transaction object that can be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionReceipt'
      required: true
    transactionRefund:
      description: Transaction object that can be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionRefund'
      required: true
    transactionreverseReceipt:
      description: Transaction object to reverse a receipt
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionreverseReceipt'
      required: true
    transactionVoid:
      description: Transaction object that can be marked as void
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionVoid'
      required: true
    transactionsVoids:
      description: Transaction object that can be marked as void
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transactionsVoids'
      required: true
    agentBasic:
      description: Function to create a travel agent or wholesaler
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/agentBasic'
      required: true
    agentPatch:
      description: Function to patch travel agent or wholesaler data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/agentFull'
      required: true
    userSearch:
      description: user search object that can be passed to return a list of users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userSearch'
      required: true
    userSecurityProfileSearch:
      description: user search object that can be passed to return a list of users secutity profiles
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userSecurityProfileSearch'
      required: true
    webhookSubscription:
      description: Webhook object that can be passed to subscribe for property updates
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webhookSubscription'
      required: true
  securitySchemes:
    api_key:
      type: apiKey
      name: authtoken
      in: header
x-azure-api-id: sh-36d32044-d46a-4abe-863d-3fe6581bfed9
